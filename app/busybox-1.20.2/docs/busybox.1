.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BUSYBOX 1"
.TH BUSYBOX 1 "2015-01-04" "version 1.20.2" "busybox"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
BusyBox \- The Swiss Army Knife of Embedded Linux
.SH "SYNTAX"
.IX Header "SYNTAX"
.Vb 1
\& busybox <applet> [arguments...]  # or
\&
\& <applet> [arguments...]          # if symlinked
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
BusyBox combines tiny versions of many common \s-1UNIX\s0 utilities into a single
small executable. It provides minimalist replacements for most of the utilities
you usually find in \s-1GNU\s0 coreutils, util-linux, etc. The utilities in BusyBox
generally have fewer options than their full-featured \s-1GNU\s0 cousins; however, the
options that are included provide the expected functionality and behave very
much like their \s-1GNU\s0 counterparts.
.PP
BusyBox has been written with size-optimization and limited resources in mind.
It is also extremely modular so you can easily include or exclude commands (or
features) at compile time. This makes it easy to customize your embedded
systems. To create a working system, just add /dev, /etc, and a Linux kernel.
BusyBox provides a fairly complete \s-1POSIX\s0 environment for any small or embedded
system.
.PP
BusyBox is extremely configurable.  This allows you to include only the
components you need, thereby reducing binary size. Run 'make config' or 'make
menuconfig' to select the functionality that you wish to enable.  Then run
\&'make' to compile BusyBox using your configuration.
.PP
After the compile has finished, you should use 'make install' to install
BusyBox. This will install the 'bin/busybox' binary, in the target directory
specified by \s-1CONFIG_PREFIX\s0. \s-1CONFIG_PREFIX\s0 can be set when configuring BusyBox,
or you can specify an alternative location at install time (i.e., with a
command line like 'make CONFIG_PREFIX=/tmp/foo install'). If you enabled
any applet installation scheme (either as symlinks or hardlinks), these will
also be installed in the location pointed to by \s-1CONFIG_PREFIX\s0.
.SH "USAGE"
.IX Header "USAGE"
BusyBox is a multi-call binary.  A multi-call binary is an executable program
that performs the same job as more than one utility program.  That means there
is just a single BusyBox binary, but that single binary acts like a large
number of utilities.  This allows BusyBox to be smaller since all the built-in
utility programs (we call them applets) can share code for many common
operations.
.PP
You can also invoke BusyBox by issuing a command as an argument on the
command line.  For example, entering
.PP
.Vb 1
\&        /bin/busybox ls
.Ve
.PP
will also cause BusyBox to behave as 'ls'.
.PP
Of course, adding '/bin/busybox' into every command would be painful.  So most
people will invoke BusyBox using links to the BusyBox binary.
.PP
For example, entering
.PP
.Vb 2
\&        ln \-s /bin/busybox ls
\&        ./ls
.Ve
.PP
will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
into BusyBox).  Generally speaking, you should never need to make all these
links yourself, as the BusyBox build system will do this for you when you run
the 'make install' command.
.PP
If you invoke BusyBox with no arguments, it will provide you with a list of the
applets that have been compiled into your BusyBox binary.
.SH "COMMON OPTIONS"
.IX Header "COMMON OPTIONS"
Most BusyBox applets support the \fB\-\-help\fR argument to provide a terse runtime
description of their behavior.  If the \s-1CONFIG_FEATURE_VERBOSE_USAGE\s0 option has
been enabled, more detailed usage information will also be available.
.SH "COMMANDS"
.IX Header "COMMANDS"
Currently available applets include:
.PP
.Vb 8
\&        ash, basename, brctl, cat, chmod, clear, cp, date, df, dmesg,
\&        dos2unix, echo, flash_eraseall, flash_lock, flash_unlock, halt,
\&        hwclock, ifconfig, init, insmod, kill, killall, killall5, klogd, ln,
\&        logger, logread, ls, lsmod, md5sum, mesg, mkdir, mknod, mount, mv,
\&        pidof, ping, poweroff, ps, pwd, rdate, reboot, rm, rmmod, route, sh,
\&        sleep, switch_root, sync, syslogd, tar, telnetd, tftp, top, touch,
\&        udhcpc, umount, uname, unix2dos, uptime, vconfig, vi, watchdog,
\&        wget
.Ve
.SH "COMMAND DESCRIPTIONS"
.IX Header "COMMAND DESCRIPTIONS"
.IP "\fBash\fR" 4
.IX Item "ash"
ash [\-/+OPTIONS] [\-/+o \s-1OPT\s0]... [\-c '\s-1SCRIPT\s0' [\s-1ARG0\s0 [\s-1ARGS\s0]] / \s-1FILE\s0 [\s-1ARGS\s0]]
.Sp
Unix shell interpreter
.IP "\fBbasename\fR" 4
.IX Item "basename"
basename \s-1FILE\s0 [\s-1SUFFIX\s0]
.Sp
Strip directory path and .SUFFIX from \s-1FILE\s0
.IP "\fBbrctl\fR" 4
.IX Item "brctl"
brctl \s-1COMMAND\s0 [\s-1BRIDGE\s0 [\s-1INTERFACE\s0]]
.Sp
Manage ethernet bridges
.Sp
Commands:
.Sp
.Vb 10
\&        show                    Show a list of bridges
\&        addbr BRIDGE            Create BRIDGE
\&        delbr BRIDGE            Delete BRIDGE
\&        addif BRIDGE IFACE      Add IFACE to BRIDGE
\&        delif BRIDGE IFACE      Delete IFACE from BRIDGE
\&        setageing BRIDGE TIME           Set ageing time
\&        setfd BRIDGE TIME               Set bridge forward delay
\&        sethello BRIDGE TIME            Set hello time
\&        setmaxage BRIDGE TIME           Set max message age
\&        setpathcost BRIDGE COST         Set path cost
\&        setportprio BRIDGE PRIO         Set port priority
\&        setbridgeprio BRIDGE PRIO       Set bridge priority
\&        stp BRIDGE [1/yes/on|0/no/off]  STP on/off
.Ve
.IP "\fBcat\fR" 4
.IX Item "cat"
cat [\s-1FILE\s0]...
.Sp
Concatenate FILEs and print them to stdout
.IP "\fBchmod\fR" 4
.IX Item "chmod"
chmod [\-R] MODE[,MODE]... \s-1FILE\s0...
.Sp
Each \s-1MODE\s0 is one or more of the letters ugoa, one of the
symbols +\-= and one or more of the letters rwxst
.Sp
.Vb 1
\&        \-R      Recurse
.Ve
.IP "\fBclear\fR" 4
.IX Item "clear"
clear
.Sp
Clear screen
.IP "\fBcp\fR" 4
.IX Item "cp"
cp [\s-1OPTIONS\s0] \s-1SOURCE\s0... \s-1DEST\s0
.Sp
Copy \s-1SOURCE\s0(s) to \s-1DEST\s0
.Sp
.Vb 9
\&        \-a      Same as \-dpR
\&        \-R,\-r   Recurse
\&        \-d,\-P   Preserve symlinks (default if \-R)
\&        \-L      Follow all symlinks
\&        \-H      Follow symlinks on command line
\&        \-p      Preserve file attributes if possible
\&        \-f      Overwrite
\&        \-i      Prompt before overwrite
\&        \-l,\-s   Create (sym)links
.Ve
.IP "\fBdate\fR" 4
.IX Item "date"
date [\s-1OPTIONS\s0] [+FMT] [\s-1TIME\s0]
.Sp
Display time (using +FMT), or set time
.Sp
.Vb 10
\&        [\-s,\-\-set] TIME Set time to TIME
\&        \-u,\-\-utc        Work in UTC (don\*(Aqt convert to local time)
\&        \-R,\-\-rfc\-2822   Output RFC\-2822 compliant date string
\&        \-I[SPEC]        Output ISO\-8601 compliant date string
\&                        SPEC=\*(Aqdate\*(Aq (default) for date only,
\&                        \*(Aqhours\*(Aq, \*(Aqminutes\*(Aq, or \*(Aqseconds\*(Aq for date and
\&                        time to the indicated precision
\&        \-r,\-\-reference FILE     Display last modification time of FILE
\&        \-d,\-\-date TIME  Display TIME, not \*(Aqnow\*(Aq
\&        \-D FMT          Use FMT for \-d TIME conversion
.Ve
.Sp
Recognized \s-1TIME\s0 formats:
.Sp
.Vb 4
\&        hh:mm[:ss]
\&        [YYYY.]MM.DD\-hh:mm[:ss]
\&        YYYY\-MM\-DD hh:mm[:ss]
\&        [[[[[YY]YY]MM]DD]hh]mm[.ss]
.Ve
.IP "\fBdf\fR" 4
.IX Item "df"
df [\-Pkmh] [\s-1FILESYSTEM\s0]...
.Sp
Print filesystem usage statistics
.Sp
.Vb 4
\&        \-P      POSIX output format
\&        \-k      1024\-byte blocks (default)
\&        \-m      1M\-byte blocks
\&        \-h      Human readable (e.g. 1K 243M 2G)
.Ve
.IP "\fBdmesg\fR" 4
.IX Item "dmesg"
dmesg [\-c] [\-n \s-1LEVEL\s0] [\-s \s-1SIZE\s0]
.Sp
Print or control the kernel ring buffer
.Sp
.Vb 3
\&        \-c              Clear ring buffer after printing
\&        \-n LEVEL        Set console logging level
\&        \-s SIZE         Buffer size
.Ve
.IP "\fBdos2unix\fR" 4
.IX Item "dos2unix"
dos2unix [\-ud] [\s-1FILE\s0]
.Sp
Convert \s-1FILE\s0 in-place from \s-1DOS\s0 to Unix format.
When no file is given, use stdin/stdout.
.Sp
.Vb 2
\&        \-u      dos2unix
\&        \-d      unix2dos
.Ve
.IP "\fBecho\fR" 4
.IX Item "echo"
echo [\-neE] [\s-1ARG\s0]...
.Sp
Print the specified ARGs to stdout
.Sp
.Vb 3
\&        \-n      Suppress trailing newline
\&        \-e      Interpret backslash escapes (i.e., \et=tab)
\&        \-E      Don\*(Aqt interpret backslash escapes (default)
.Ve
.IP "\fBflash_eraseall\fR" 4
.IX Item "flash_eraseall"
flash_eraseall [\-jq] \s-1MTD_DEVICE\s0
.Sp
Erase an \s-1MTD\s0 device
.Sp
.Vb 2
\&        \-j      Format the device for jffs2
\&        \-q      Don\*(Aqt display progress messages
.Ve
.IP "\fBflash_lock\fR" 4
.IX Item "flash_lock"
flash_lock \s-1MTD_DEVICE\s0 \s-1OFFSET\s0 \s-1SECTORS\s0
.Sp
Lock part or all of an \s-1MTD\s0 device. If \s-1SECTORS\s0 is \-1, then all sectors
will be locked, regardless of the value of \s-1OFFSET\s0
.IP "\fBflash_unlock\fR" 4
.IX Item "flash_unlock"
flash_unlock \s-1MTD_DEVICE\s0
.Sp
Unlock an \s-1MTD\s0 device
.IP "\fBhalt\fR" 4
.IX Item "halt"
halt [\-d \s-1DELAY\s0] [\-n] [\-f]
.Sp
Halt the system
.Sp
.Vb 3
\&        \-d SEC  Delay interval
\&        \-n      Do not sync
\&        \-f      Force (don\*(Aqt go through init)
.Ve
.IP "\fBhwclock\fR" 4
.IX Item "hwclock"
hwclock [\-r] [\-s] [\-w] [\-t] [\-l] [\-u] [\-f \s-1FILE\s0]
.Sp
Query and set hardware clock (\s-1RTC\s0)
.Sp
.Vb 8
\&        \-r      Show hardware clock time
\&        \-s      Set system time from hardware clock
\&        \-w      Set hardware clock from system time
\&        \-t      Set in\-kernel timezone, correct system time
\&                if hardware clock is in local time
\&        \-u      Assume hardware clock is kept in UTC
\&        \-l      Assume hardware clock is kept in local time
\&        \-f FILE Use specified device (e.g. /dev/rtc2)
.Ve
.IP "\fBifconfig\fR" 4
.IX Item "ifconfig"
ifconfig [\-a] interface [address]
.Sp
Configure a network interface
.Sp
.Vb 6
\&        [[\-]broadcast [ADDRESS]] [[\-]pointopoint [ADDRESS]]
\&        [netmask ADDRESS] [dstaddr ADDRESS]
\&        [hw ether ADDRESS] [metric NN] [mtu NN]
\&        [[\-]trailers] [[\-]arp] [[\-]allmulti]
\&        [multicast] [[\-]promisc] [txqueuelen NN] [[\-]dynamic]
\&        [up|down] ...
.Ve
.IP "\fBinit\fR" 4
.IX Item "init"
init
.Sp
Init is the parent of all processes
.IP "\fBinsmod\fR" 4
.IX Item "insmod"
insmod \s-1FILE\s0 [SYMBOL=VALUE]...
.Sp
Load the specified kernel modules into the kernel
.IP "\fBkill\fR" 4
.IX Item "kill"
kill [\-l] [\-SIG] \s-1PID\s0...
.Sp
Send a signal (default: \s-1TERM\s0) to given PIDs
.Sp
.Vb 1
\&        \-l      List all signal names and numbers
.Ve
.IP "\fBkillall\fR" 4
.IX Item "killall"
killall [\-l] [\-q] [\-SIG] \s-1PROCESS_NAME\s0...
.Sp
Send a signal (default: \s-1TERM\s0) to given processes
.Sp
.Vb 2
\&        \-l      List all signal names and numbers
\&        \-q      Don\*(Aqt complain if no processes were killed
.Ve
.IP "\fBkillall5\fR" 4
.IX Item "killall5"
killall5 [\-l] [\-SIG] [\-o \s-1PID\s0]...
.Sp
Send a signal (default: \s-1TERM\s0) to all processes outside current session
.Sp
.Vb 2
\&        \-l      List all signal names and numbers
\&        \-o PID  Don\*(Aqt signal this PID
.Ve
.IP "\fBklogd\fR" 4
.IX Item "klogd"
klogd [\-c N] [\-n]
.Sp
Kernel logger
.Sp
.Vb 2
\&        \-c N    Print to console messages more urgent than prio N (1\-8)
\&        \-n      Run in foreground
.Ve
.IP "\fBln\fR" 4
.IX Item "ln"
ln [\s-1OPTIONS\s0] \s-1TARGET\s0... LINK|DIR
.Sp
Create a link \s-1LINK\s0 or \s-1DIR/TARGET\s0 to the specified \s-1TARGET\s0(s)
.Sp
.Vb 5
\&        \-s      Make symlinks instead of hardlinks
\&        \-f      Remove existing destinations
\&        \-n      Don\*(Aqt dereference symlinks \- treat like normal file
\&        \-b      Make a backup of the target (if exists) before link operation
\&        \-S suf  Use suffix instead of ~ when making backup files
.Ve
.IP "\fBlogger\fR" 4
.IX Item "logger"
logger [\s-1OPTIONS\s0] [\s-1MESSAGE\s0]
.Sp
Write \s-1MESSAGE\s0 (or stdin) to syslog
.Sp
.Vb 3
\&        \-s      Log to stderr as well as the system log
\&        \-t TAG  Log using the specified tag (defaults to user name)
\&        \-p PRIO Priority (numeric or facility.level pair)
.Ve
.IP "\fBlogread\fR" 4
.IX Item "logread"
logread [\-f]
.Sp
Show messages in syslogd's circular buffer
.Sp
.Vb 1
\&        \-f      Output data as log grows
.Ve
.IP "\fBls\fR" 4
.IX Item "ls"
ls [\-1AaCxdLHRFplinsehrSXvctu] [\-w \s-1WIDTH\s0] [\s-1FILE\s0]...
.Sp
List directory contents
.Sp
.Vb 10
\&        \-1      One column output
\&        \-a      Include entries which start with .
\&        \-A      Like \-a, but exclude . and ..
\&        \-C      List by columns
\&        \-x      List by lines
\&        \-d      List directory entries instead of contents
\&        \-L      Follow symlinks
\&        \-H      Follow symlinks on command line
\&        \-R      Recurse
\&        \-p      Append / to dir entries
\&        \-F      Append indicator (one of */=@|) to entries
\&        \-l      Long listing format
\&        \-i      List inode numbers
\&        \-n      List numeric UIDs and GIDs instead of names
\&        \-s      List allocated blocks
\&        \-e      List full date and time
\&        \-h      List sizes in human readable format (1K 243M 2G)
\&        \-r      Sort in reverse order
\&        \-S      Sort by size
\&        \-X      Sort by extension
\&        \-v      Sort by version
\&        \-c      With \-l: sort by ctime
\&        \-t      With \-l: sort by mtime
\&        \-u      With \-l: sort by atime
\&        \-w N    Assume the terminal is N columns wide
\&        \-\-color[={always,never,auto}]   Control coloring
.Ve
.IP "\fBlsmod\fR" 4
.IX Item "lsmod"
lsmod
.Sp
List the currently loaded kernel modules
.IP "\fBmd5sum\fR" 4
.IX Item "md5sum"
md5sum [\-c[sw]] [\s-1FILE\s0]...
.Sp
Print or check \s-1MD5\s0 checksums
.Sp
.Vb 3
\&        \-c      Check sums against list in FILEs
\&        \-s      Don\*(Aqt output anything, status code shows success
\&        \-w      Warn about improperly formatted checksum lines
.Ve
.IP "\fBmesg\fR" 4
.IX Item "mesg"
mesg [y|n]
.Sp
Control write access to your terminal
	y	Allow write access to your terminal
	n	Disallow write access to your terminal
.IP "\fBmkdir\fR" 4
.IX Item "mkdir"
mkdir [\s-1OPTIONS\s0] \s-1DIRECTORY\s0...
.Sp
Create \s-1DIRECTORY\s0
.Sp
.Vb 2
\&        \-m MODE Mode
\&        \-p      No error if exists; make parent directories as needed
.Ve
.IP "\fBmknod\fR" 4
.IX Item "mknod"
mknod [\-m \s-1MODE\s0] \s-1NAME\s0 \s-1TYPE\s0 \s-1MAJOR\s0 \s-1MINOR\s0
.Sp
Create a special file (block, character, or pipe)
.Sp
.Vb 5
\&        \-m MODE Creation mode (default a=rw)
\&TYPE:
\&        b       Block device
\&        c or u  Character device
\&        p       Named pipe (MAJOR and MINOR are ignored)
.Ve
.IP "\fBmount\fR" 4
.IX Item "mount"
mount [\s-1OPTIONS\s0] [\-o \s-1OPTS\s0] \s-1DEVICE\s0 \s-1NODE\s0
.Sp
Mount a filesystem. Filesystem autodetection requires /proc.
.Sp
.Vb 10
\&        \-a              Mount all filesystems in fstab
\&        \-r              Read\-only mount
\&        \-w              Read\-write mount (default)
\&        \-t FSTYPE[,...] Filesystem type(s)
\&        \-O OPT          Mount only filesystems with option OPT (\-a only)
\&\-o OPT:
\&        loop            Ignored (loop devices are autodetected)
\&        [a]sync         Writes are [a]synchronous
\&        [no]atime       Disable/enable updates to inode access times
\&        [no]diratime    Disable/enable atime updates to directories
\&        [no]relatime    Disable/enable atime updates relative to modification time
\&        [no]dev         (Dis)allow use of special device files
\&        [no]exec        (Dis)allow use of executable files
\&        [no]suid        (Dis)allow set\-user\-id\-root programs
\&        [r]shared       Convert [recursively] to a shared subtree
\&        [r]slave        Convert [recursively] to a slave subtree
\&        [r]private      Convert [recursively] to a private subtree
\&        [un]bindable    Make mount point [un]able to be bind mounted
\&        [r]bind         Bind a file or directory [recursively] to another location
\&        move            Relocate an existing mount point
\&        remount         Remount a mounted filesystem, changing flags
\&        ro/rw           Same as \-r/\-w
.Ve
.Sp
There are filesystem-specific \-o flags.
.IP "\fBmv\fR" 4
.IX Item "mv"
mv [\-fin] \s-1SOURCE\s0 \s-1DEST\s0
or: mv [\-fin] \s-1SOURCE\s0... \s-1DIRECTORY\s0
.Sp
Rename \s-1SOURCE\s0 to \s-1DEST\s0, or move \s-1SOURCE\s0(s) to \s-1DIRECTORY\s0
.Sp
.Vb 3
\&        \-f      Don\*(Aqt prompt before overwriting
\&        \-i      Interactive, prompt before overwrite
\&        \-n      Don\*(Aqt overwrite an existing file
.Ve
.IP "\fBpidof\fR" 4
.IX Item "pidof"
pidof [\s-1NAME\s0]...
.Sp
List PIDs of all processes with names that match NAMEs
.IP "\fBping\fR" 4
.IX Item "ping"
ping [\s-1OPTIONS\s0] \s-1HOST\s0
.Sp
Send \s-1ICMP\s0 \s-1ECHO_REQUEST\s0 packets to network hosts
.Sp
.Vb 11
\&        \-4,\-6           Force IP or IPv6 name resolution
\&        \-c CNT          Send only CNT pings
\&        \-s SIZE         Send SIZE data bytes in packets (default:56)
\&        \-t TTL          Set TTL
\&        \-I IFACE/IP     Use interface or IP address as source
\&        \-W SEC          Seconds to wait for the first response (default:10)
\&                        (after all \-c CNT packets are sent)
\&        \-w SEC          Seconds until ping exits (default:infinite)
\&                        (can exit earlier with \-c CNT)
\&        \-q              Quiet, only displays output at start
\&                        and when finished
.Ve
.IP "\fBpoweroff\fR" 4
.IX Item "poweroff"
poweroff [\-d \s-1DELAY\s0] [\-n] [\-f]
.Sp
Halt and shut off power
.Sp
.Vb 3
\&        \-d SEC  Delay interval
\&        \-n      Do not sync
\&        \-f      Force (don\*(Aqt go through init)
.Ve
.IP "\fBps\fR" 4
.IX Item "ps"
ps
.Sp
Show list of processes
.Sp
This version of ps accepts no options
.IP "\fBpwd\fR" 4
.IX Item "pwd"
pwd
.Sp
Print the full filename of the current working directory
.IP "\fBrdate\fR" 4
.IX Item "rdate"
rdate [\-sp] \s-1HOST\s0
.Sp
Get and possibly set the system date and time from a remote \s-1HOST\s0
.Sp
.Vb 2
\&        \-s      Set the system date and time (default)
\&        \-p      Print the date and time
.Ve
.IP "\fBreboot\fR" 4
.IX Item "reboot"
reboot [\-d \s-1DELAY\s0] [\-n] [\-f]
.Sp
Reboot the system
.Sp
.Vb 3
\&        \-d SEC  Delay interval
\&        \-n      Do not sync
\&        \-f      Force (don\*(Aqt go through init)
.Ve
.IP "\fBrm\fR" 4
.IX Item "rm"
rm [\-irf] \s-1FILE\s0...
.Sp
Remove (unlink) FILEs
.Sp
.Vb 3
\&        \-i      Always prompt before removing
\&        \-f      Never prompt
\&        \-R,\-r   Recurse
.Ve
.IP "\fBrmmod\fR" 4
.IX Item "rmmod"
rmmod [\-wfa] [\s-1MODULE\s0]...
.Sp
Unload kernel modules
.Sp
.Vb 3
\&        \-w      Wait until the module is no longer used
\&        \-f      Force unload
\&        \-a      Remove all unused modules (recursively)
.Ve
.IP "\fBroute\fR" 4
.IX Item "route"
route [{add|del|delete}]
.Sp
Edit kernel routing tables
.Sp
.Vb 3
\&        \-n      Don\*(Aqt resolve names
\&        \-e      Display other/more information
\&        \-A inet Select address family
.Ve
.IP "\fBsh\fR" 4
.IX Item "sh"
sh [\-/+OPTIONS] [\-/+o \s-1OPT\s0]... [\-c '\s-1SCRIPT\s0' [\s-1ARG0\s0 [\s-1ARGS\s0]] / \s-1FILE\s0 [\s-1ARGS\s0]]
.Sp
Unix shell interpreter
.IP "\fBsleep\fR" 4
.IX Item "sleep"
sleep N
.Sp
Pause for N seconds
.IP "\fBswitch_root\fR" 4
.IX Item "switch_root"
switch_root [\-c /dev/console] \s-1NEW_ROOT\s0 \s-1NEW_INIT\s0 [\s-1ARGS\s0]
.Sp
Free initramfs and switch to another root fs:
.Sp
chroot to \s-1NEW_ROOT\s0, delete all in /, move \s-1NEW_ROOT\s0 to /,
execute \s-1NEW_INIT\s0. \s-1PID\s0 must be 1. \s-1NEW_ROOT\s0 must be a mountpoint.
.Sp
.Vb 1
\&        \-c DEV  Reopen stdio to DEV after switch
.Ve
.IP "\fBsync\fR" 4
.IX Item "sync"
sync
.Sp
Write all buffered blocks to disk
.IP "\fBsyslogd\fR" 4
.IX Item "syslogd"
syslogd [\s-1OPTIONS\s0]
.Sp
System logging utility
.Sp
.Vb 10
\&        \-n              Run in foreground
\&        \-O FILE         Log to FILE (default:/var/log/messages)
\&        \-l N            Log only messages more urgent than prio N (1\-8)
\&        \-S              Smaller output
\&        \-s SIZE         Max size (KB) before rotation (default:200KB, 0=off)
\&        \-b N            N rotated logs to keep (default:1, max=99, 0=purge)
\&        \-R HOST[:PORT]  Log to IP or hostname on PORT (default PORT=514/UDP)
\&        \-L              Log locally and via network (default is network only if \-R)
\&        \-C[size_kb]     Log to shared mem buffer (use logread to read it)
\&        \-f FILE         Use FILE as config (default:/etc/syslog.conf)
.Ve
.IP "\fBtar\fR" 4
.IX Item "tar"
tar \-[cxtzhmvO] [\-X \s-1FILE\s0] [\-T \s-1FILE\s0] [\-f \s-1TARFILE\s0] [\-C \s-1DIR\s0] [\s-1FILE\s0]...
.Sp
Create, extract, or list files from a tar file
.Sp
Operation:
.Sp
.Vb 10
\&        c       Create
\&        x       Extract
\&        t       List
\&        f       Name of TARFILE (\*(Aq\-\*(Aq for stdin/out)
\&        C       Change to DIR before operation
\&        v       Verbose
\&        z       (De)compress using gzip
\&        O       Extract to stdout
\&        h       Follow symlinks
\&        m       Don\*(Aqt restore mtime
\&        exclude File to exclude
\&        X       File with names to exclude
\&        T       File with names to include
.Ve
.IP "\fBtelnetd\fR" 4
.IX Item "telnetd"
telnetd [\s-1OPTIONS\s0]
.Sp
Handle incoming telnet connections
.Sp
.Vb 8
\&        \-l LOGIN        Exec LOGIN on connect
\&        \-f ISSUE_FILE   Display ISSUE_FILE instead of /etc/issue
\&        \-K              Close connection as soon as login exits
\&                        (normally wait until all programs close slave pty)
\&        \-p PORT         Port to listen on
\&        \-b ADDR[:PORT]  Address to bind to
\&        \-F              Run in foreground
\&        \-i              Inetd mode
.Ve
.IP "\fBtftp\fR" 4
.IX Item "tftp"
tftp [\s-1OPTIONS\s0] \s-1HOST\s0 [\s-1PORT\s0]
.Sp
Transfer a file from/to tftp server
.Sp
.Vb 4
\&        \-l FILE Local FILE
\&        \-r FILE Remote FILE
\&        \-g      Get file
\&        \-p      Put file
.Ve
.IP "\fBtop\fR" 4
.IX Item "top"
top [\-b] [\-nCOUNT] [\-dSECONDS]
.Sp
Provide a view of process activity in real time.
Read the status of all processes from /proc each \s-1SECONDS\s0
and display a screenful of them.
Keys:
.Sp
.Vb 3
\&        N/M: sort by pid/mem
\&        R: reverse sort
\&        Q,^C: exit
.Ve
.Sp
Options:
.Sp
.Vb 3
\&        \-b      Batch mode
\&        \-n N    Exit after N iterations
\&        \-d N    Delay between updates
.Ve
.IP "\fBtouch\fR" 4
.IX Item "touch"
touch [\-c] [\-d \s-1DATE\s0] [\-t \s-1DATE\s0] [\-r \s-1FILE\s0] \s-1FILE\s0...
.Sp
Update the last-modified date on the given FILE[s]
.Sp
.Vb 4
\&        \-c      Don\*(Aqt create files
\&        \-d DT   Date/time to use
\&        \-t DT   Date/time to use
\&        \-r FILE Use FILE\*(Aqs date/time
.Ve
.IP "\fBudhcpc\fR" 4
.IX Item "udhcpc"
udhcpc [\-fbnqvoCRB] [\-i \s-1IFACE\s0] [\-r \s-1IP\s0] [\-s \s-1PROG\s0] [\-p \s-1PIDFILE\s0]
	[\-V \s-1VENDOR\s0] [\-x \s-1OPT:VAL\s0]... [\-O \s-1OPT\s0]... [\-P N]
.Sp
.Vb 10
\&        \-i,\-\-interface IFACE    Interface to use (default eth0)
\&        \-p,\-\-pidfile FILE       Create pidfile
\&        \-s,\-\-script PROG        Run PROG at DHCP events (default /usr/share/udhcpc/default.script)
\&        \-B,\-\-broadcast          Request broadcast replies
\&        \-t,\-\-retries N          Send up to N discover packets
\&        \-T,\-\-timeout N          Pause between packets (default 3 seconds)
\&        \-A,\-\-tryagain N         Wait N seconds after failure (default 20)
\&        \-f,\-\-foreground         Run in foreground
\&        \-b,\-\-background         Background if lease is not obtained
\&        \-n,\-\-now                Exit if lease is not obtained
\&        \-q,\-\-quit               Exit after obtaining lease
\&        \-R,\-\-release            Release IP on exit
\&        \-S,\-\-syslog             Log to syslog too
\&        \-P,\-\-client\-port N      Use port N (default 68)
\&        \-a,\-\-arping             Use arping to validate offered address
\&        \-O,\-\-request\-option OPT Request option OPT from server (cumulative)
\&        \-o,\-\-no\-default\-options Don\*(Aqt request any options (unless \-O is given)
\&        \-r,\-\-request IP         Request this IP address
\&        \-x OPT:VAL              Include option OPT in sent packets (cumulative)
\&                                Examples of string, numeric, and hex byte opts:
\&                                \-x hostname:bbox \- option 12
\&                                \-x lease:3600 \- option 51 (lease time)
\&                                \-x 0x3d:0100BEEFC0FFEE \- option 61 (client id)
\&        \-F,\-\-fqdn NAME          Ask server to update DNS mapping for NAME
\&        \-V,\-\-vendorclass VENDOR Vendor identifier (default \*(Aqudhcp VERSION\*(Aq)
\&        \-C,\-\-clientid\-none      Don\*(Aqt send MAC as client identifier
\&        \-v                      Verbose
\&Signals:
\&
\&        USR1    Renew lease
\&        USR2    Release lease
.Ve
.IP "\fBumount\fR" 4
.IX Item "umount"
umount [\s-1OPTIONS\s0] FILESYSTEM|DIRECTORY
.Sp
Unmount file systems
.Sp
.Vb 5
\&        \-a      Unmount all file systems
\&        \-r      Try to remount devices as read\-only if mount is busy
\&        \-l      Lazy umount (detach filesystem)
\&        \-f      Force umount (i.e., unreachable NFS server)
\&        \-D      Don\*(Aqt free loop device even if it has been used
.Ve
.IP "\fBuname\fR" 4
.IX Item "uname"
uname [\-amnrspv]
.Sp
Print system information
.Sp
.Vb 7
\&        \-a      Print all
\&        \-m      The machine (hardware) type
\&        \-n      Hostname
\&        \-r      OS release
\&        \-s      OS name (default)
\&        \-p      Processor type
\&        \-v      OS version
.Ve
.IP "\fBunix2dos\fR" 4
.IX Item "unix2dos"
unix2dos [\-ud] [\s-1FILE\s0]
.Sp
Convert \s-1FILE\s0 in-place from Unix to \s-1DOS\s0 format.
When no file is given, use stdin/stdout.
.Sp
.Vb 2
\&        \-u      dos2unix
\&        \-d      unix2dos
.Ve
.IP "\fBuptime\fR" 4
.IX Item "uptime"
uptime
.Sp
Display the time since the last boot
.IP "\fBvconfig\fR" 4
.IX Item "vconfig"
vconfig \s-1COMMAND\s0 [\s-1OPTIONS\s0]
.Sp
Create and remove virtual ethernet devices
.Sp
.Vb 6
\&        add             IFACE VLAN_ID
\&        rem             VLAN_NAME
\&        set_flag        IFACE 0|1 VLAN_QOS
\&        set_egress_map  VLAN_NAME SKB_PRIO VLAN_QOS
\&        set_ingress_map VLAN_NAME SKB_PRIO VLAN_QOS
\&        set_name_type   NAME_TYPE
.Ve
.IP "\fBvi\fR" 4
.IX Item "vi"
vi [\s-1OPTIONS\s0] [\s-1FILE\s0]...
.Sp
Edit \s-1FILE\s0
.Sp
.Vb 1
\&        \-H      Short help regarding available features
.Ve
.IP "\fBwatchdog\fR" 4
.IX Item "watchdog"
watchdog [\-t N[ms]] [\-T N[ms]] [\-F] \s-1DEV\s0
.Sp
Periodically write to watchdog device \s-1DEV\s0
.Sp
.Vb 3
\&        \-T N    Reboot after N seconds if not reset (default 60)
\&        \-t N    Reset every N seconds (default 30)
\&        \-F      Run in foreground
.Ve
.Sp
Use 500ms to specify period in milliseconds
.IP "\fBwget\fR" 4
.IX Item "wget"
wget [\-c|\-\-continue] [\-s|\-\-spider] [\-q|\-\-quiet] [\-O|\-\-output\-document \s-1FILE\s0]
	[\-\-header 'header: value'] [\-Y|\-\-proxy on/off] [\-P \s-1DIR\s0]
	[\-\-no\-check\-certificate] [\-U|\-\-user\-agent \s-1AGENT\s0] [\-T \s-1SEC\s0] [\-p \s-1FILE\s0] \s-1URL\s0...
.Sp
Retrieve files via \s-1HTTP\s0 or \s-1FTP\s0
.Sp
.Vb 9
\&        \-s      Spider mode \- only check file existence
\&        \-c      Continue retrieval of aborted transfer
\&        \-q      Quiet
\&        \-P DIR  Save to DIR (default .)
\&        \-T SEC  Network read timeout is SEC seconds
\&        \-O FILE Save to FILE (\*(Aq\-\*(Aq for stdout)
\&        \-U STR  Use STR for User\-Agent header
\&        \-Y      Use proxy (\*(Aqon\*(Aq or \*(Aqoff\*(Aq)
\&        \-p FILE Write pid to FILE
.Ve
.SH "LIBC NSS"
.IX Header "LIBC NSS"
\&\s-1GNU\s0 Libc (glibc) uses the Name Service Switch (\s-1NSS\s0) to configure the behavior
of the C library for the local environment, and to configure how it reads
system data, such as passwords and group information.  This is implemented
using an /etc/nsswitch.conf configuration file, and using one or more of the
/lib/libnss_* libraries.  BusyBox tries to avoid using any libc calls that make
use of \s-1NSS\s0.  Some applets however, such as login and su, will use libc functions
that require \s-1NSS\s0.
.PP
If you enable \s-1CONFIG_USE_BB_PWD_GRP\s0, BusyBox will use internal functions to
directly access the /etc/passwd, /etc/group, and /etc/shadow files without
using \s-1NSS\s0.  This may allow you to run your system without the need for
installing any of the \s-1NSS\s0 configuration files and libraries.
.PP
When used with glibc, the BusyBox 'networking' applets will similarly require
that you install at least some of the glibc \s-1NSS\s0 stuff (in particular,
/etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*, and /lib/libresolv*).
.PP
Shameless Plug: As an alternative, one could use a C library such as uClibc.  In
addition to making your system significantly smaller, uClibc does not require the
use of any \s-1NSS\s0 support files or libraries.
.SH "MAINTAINER"
.IX Header "MAINTAINER"
Denis Vlasenko <vda.linux@googlemail.com>
.SH "AUTHORS"
.IX Header "AUTHORS"
The following people have contributed code to BusyBox whether they know it or
not.  If you have written code included in BusyBox, you should probably be
listed here so you can obtain your bit of eternal glory.  If you should be
listed here, or the description of what you have done needs more detail, or is
incorrect, please send in an update.
.PP
Emanuele Aina <emanuele.aina@tiscali.it>
    run-parts
.PP
Erik Andersen <andersen@codepoet.org>
.PP
.Vb 4
\&    Tons of new stuff, major rewrite of most of the
\&    core apps, tons of new apps as noted in header files.
\&    Lots of tedious effort writing these boring docs that
\&    nobody is going to actually read.
.Ve
.PP
Laurence Anderson <l.d.anderson@warwick.ac.uk>
.PP
.Vb 1
\&    rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm
.Ve
.PP
Jeff Angielski <jeff@theptrgroup.com>
.PP
.Vb 1
\&    ftpput, ftpget
.Ve
.PP
Edward Betts <edward@debian.org>
.PP
.Vb 1
\&    expr, hostid, logname, whoami
.Ve
.PP
John Beppu <beppu@codepoet.org>
.PP
.Vb 1
\&    du, nslookup, sort
.Ve
.PP
Brian Candler <B.Candler@pobox.com>
.PP
.Vb 1
\&    tiny\-ls(ls)
.Ve
.PP
Randolph Chung <tausq@debian.org>
.PP
.Vb 1
\&    fbset, ping, hostname
.Ve
.PP
Dave Cinege <dcinege@psychosis.com>
.PP
.Vb 2
\&    more(v2), makedevs, dutmp, modularization, auto links file,
\&    various fixes, Linux Router Project maintenance
.Ve
.PP
Jordan Crouse <jordan@cosmicpenguin.net>
.PP
.Vb 1
\&    ipcalc
.Ve
.PP
Magnus Damm <damm@opensource.se>
.PP
.Vb 1
\&    tftp client insmod powerpc support
.Ve
.PP
Larry Doolittle <ldoolitt@recycle.lbl.gov>
.PP
.Vb 1
\&    pristine source directory compilation, lots of patches and fixes.
.Ve
.PP
Glenn Engel <glenne@engel.org>
.PP
.Vb 1
\&    httpd
.Ve
.PP
Gennady Feldman <gfeldman@gena01.com>
.PP
.Vb 2
\&    Sysklogd (single threaded syslogd, IPC Circular buffer support,
\&    logread), various fixes.
.Ve
.PP
Karl M. Hegbloom <karlheg@debian.org>
.PP
.Vb 1
\&    cp_mv.c, the test suite, various fixes to utility.c, &c.
.Ve
.PP
Daniel Jacobowitz <dan@debian.org>
.PP
.Vb 1
\&    mktemp.c
.Ve
.PP
Matt Kraai <kraai@alumni.cmu.edu>
.PP
.Vb 1
\&    documentation, bugfixes, test suite
.Ve
.PP
Stephan Linz <linz@li\-pro.net>
.PP
.Vb 1
\&    ipcalc, Red Hat equivalence
.Ve
.PP
John Lombardo <john@deltanet.com>
.PP
.Vb 1
\&    tr
.Ve
.PP
Glenn McGrath <bug1@iinet.net.au>
.PP
.Vb 3
\&    Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
\&    nameif, sed, patch, fold, install, uudecode.
\&    Various bugfixes, review and apply numerous patches.
.Ve
.PP
Manuel Novoa \s-1III\s0 <mjn3@codepoet.org>
.PP
.Vb 3
\&    cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
\&    mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
\&    get_last_path_component, simplify_path, and a number trivial libbb routines
\&
\&    also bug fixes, partial rewrites, and size optimizations in
\&    ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
\&    mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
\&    interface, dutmp, ifconfig, route
.Ve
.PP
Vladimir Oleynik <dzo@simtreas.ru>
.PP
.Vb 4
\&    cmdedit; xargs(current), httpd(current);
\&    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
\&    locale, various fixes
\&    and irreconcilable critic of everything not perfect.
.Ve
.PP
Bruce Perens <bruce@pixar.com>
.PP
.Vb 2
\&    Original author of BusyBox in 1995, 1996. Some of his code can
\&    still be found hiding here and there...
.Ve
.PP
Tim Riker <Tim@Rikers.org>
.PP
.Vb 1
\&    bug fixes, member of fan club
.Ve
.PP
Kent Robotti <robotti@metconnect.com>
.PP
.Vb 1
\&    reset, tons and tons of bug reports and patches.
.Ve
.PP
Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>
.PP
.Vb 1
\&    wget \- Contributed by permission of Covad Communications
.Ve
.PP
Pavel Roskin <proski@gnu.org>
.PP
.Vb 1
\&    Lots of bugs fixes and patches.
.Ve
.PP
Gyepi Sam <gyepi@praxis\-sw.com>
.PP
.Vb 1
\&    Remote logging feature for syslogd
.Ve
.PP
Linus Torvalds <torvalds@transmeta.com>
.PP
.Vb 1
\&    mkswap, fsck.minix, mkfs.minix
.Ve
.PP
Mark Whitley <markw@codepoet.org>
.PP
.Vb 2
\&    grep, sed, cut, xargs(previous),
\&    style\-guide, new\-applet\-HOWTO, bug fixes, etc.
.Ve
.PP
Charles P. Wright <cpwright@villagenet.com>
.PP
.Vb 1
\&    gzip, mini\-netcat(nc)
.Ve
.PP
Enrique Zanardi <ezanardi@ull.es>
.PP
.Vb 1
\&    tarcat (since removed), loadkmap, various fixes, Debian maintenance
.Ve
.PP
Tito Ragusa <farmatito@tiscali.it>
.PP
.Vb 1
\&    devfsd and size optimizations in strings, openvt and deallocvt.
.Ve
.PP
Paul Fox <pgf@foxharp.boston.ma.us>
.PP
.Vb 1
\&    vi editing mode for ash, various other patches/fixes
.Ve
.PP
Roberto A. Foglietta <me@roberto.foglietta.name>
.PP
.Vb 1
\&    port: dnsd
.Ve
.PP
Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
.PP
.Vb 1
\&    misc
.Ve
.PP
Mike Frysinger <vapier@gentoo.org>
.PP
.Vb 1
\&    initial e2fsprogs, printenv, setarch, sum, misc
.Ve
.PP
Jie Zhang <jie.zhang@analog.com>
.PP
.Vb 1
\&    fixed two bugs in msh and hush (exitcode of killed processes)
.Ve
