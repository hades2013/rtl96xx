cscope 15 $HOME/platform/squashfs_develop/app/cfg -q 0000002878 0000260779
	@include/config_api.h

1 #i‚de‡
__VOS_CONFIG_H_


2 
	#__VOS_CONFIG_H_


	)

4 #ifde‡
__˝lu•lus


8 
Cfgöô
(
Êag
);

10 
CfgSèπ
();

11 
cfg_gëvÆ
(
ifödex
,
oid
,*
vÆ
,* 
deÁu…_vÆ
,
ªéí
);

12 
gë_vÆue
();

13 
£t_vÆue
();

14 
ßve_c⁄fig
();

18 #ifde‡
__˝lu•lus


	@include/config_oid.h

1 #i‚de‡
_CONFIG_OID_H_


2 
	#_CONFIG_OID_H_


	)

4 #ifde‡ 
__˝lu•lus


7 
	eègLW_MID_DEF


9 
CONFIG_MID_BASE
=1,

10 
CONFIG_MID_SYSTEM
,

11 
CONFIG_MID_NTP
,

12 
CONFIG_MID_WEB
,

13 
CONFIG_MID_TELNET
,

14 
CONFIG_MID_USER
,

15 
CONFIG_MID_ETHPORT
,

16 
CONFIG_MID_MIRROR
,

17 
CONFIG_MID_L2QOS
,

18 
CONFIG_MID_VLAN
,

20 
CONFIG_MID_MAX
=255

23 
	eègCFG_DOMAIN_E


25 
CONFIG_NORMAL
,

26 
CONFIG_FACTORY
,

27 
CONFIG_ATOM
,

28 
CONFIG_VIRTUAL
,

29 
CONFIG_MAX_DOMAINS


30 }
	tCFG_DOMAIN_E
;

33 
	#CONFIG_MID_SHIFT
 24

	)

34 
	#CONFIG_SECTION_SHIFT
 19

	)

35 
	#CONFIG_KEY_SHIFT
 14

	)

37 
	#CONFIG_MID
(
cmo
Ë((cmo)&(()0xff<<
CONFIG_MID_SHIFT
))

	)

38 
	#CONFIG_MID_SECTION
(
cmo
Ë((cmo)&(()0xff<<
CONFIG_MID_SHIFT
|()0x1f<<
CONFIG_SECTION_SHIFT
))

	)

39 
	#CONFIG_MID_SECTION_KEY
(
cmo
Ë((cmo)&(()0xff<<
CONFIG_MID_SHIFT
|()0x1f<<
CONFIG_SECTION_SHIFT
|()0x1f<<
CONFIG_KEY_SHIFT
))

	)

40 
	#CONFIG_INDEX
(
cmo
Ë((cmo)&(0x3fff))

	)

42 
	#IS_ROOTCONFIG
(
cmo
Ë(0==cmo)

	)

44 
	#IS_MIDCONFIG
(
cmo
Ë((0!=
	`CONFIG_MID
(cmo))&&(CONFIG_MID(cmo)==(cmo)))

	)

45 
	#IS_SECTIONCONFIG
(
_cmoid
Ë((0!=
	`CONFIG_MID
(_cmoid))&&(CONFIG_MID(_cmoid)!
	`CONFIG_MID_SECTION
(_cmoid))&&(CONFIG_MID_SECTION(_cmoid)==
	`CONFIG_MID_SECTION_KEY
(_cmoid)))

	)

46 
	#IS_KEYCONFIG
(
_cmoid
Ë((0!=
	`CONFIG_MID
(_cmoid))&&(CONFIG_MID(_cmoid)!
	`CONFIG_MID_SECTION
(_cmoid))&&(CONFIG_MID_SECTION(_cmoid)!=
	`CONFIG_MID_SECTION_KEY
(_cmoid)))

	)

47 
	#CONFIG_MAX_INDEX
 (1024*16)

	)

48 
	#CONFIG_MIN_INDEX
 0

	)

49 
	#CONFIG_IDX_HEXBIT
 5

	)

52 
	#CONFIG_CMO_DEF
(
ModuÀID
, 
Se˘i⁄
, 
Key
,
IDX
Ë((()(ModuÀID)<<
CONFIG_MID_SHIFT
)|\

	)

53 ((
Se˘i⁄
)<<
CONFIG_SECTION_SHIFT
)|((
Key
)<<
CONFIG_KEY_SHIFT
)|(
IDX
))

73 
	#CONFIG_SYSTEM
 
	`CONFIG_CMO_DEF
(
CONFIG_MID_SYSTEM
,0,0,0)

	)

74 
	#CONFIG_SYS_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_SYSTEM
,1,key,0)

	)

75 
	#CONFIG_SYSTEM_SECTION
 
	`CONFIG_SYS_
(0)

	)

76 
	#CONFIG_SYSTEM_NAME
 
	`CONFIG_SYS_
(1)

	)

77 
	#CONFIG_SYSTEM_LOGMODE
 
	`CONFIG_SYS_
(2)

	)

78 
	#CONFIG_SYSTEM_LOG_REMOTEEN
 
	`CONFIG_SYS_
(3)

	)

79 
	#CONFIG_SYSTEM_LOG_REMOTEIP
 
	`CONFIG_SYS_
(4)

	)

80 
	#CONFIG_SYSTEM_LOG_LOCALIP
 
	`CONFIG_SYS_
(5)

	)

81 
	#CONFIG_SYSTEM_SSH_ENABLE
 
	`CONFIG_SYS_
(6)

	)

82 
	#CONFIG_SSH_PORT
 
	`CONFIG_SYS_
(7)

	)

83 
	#CONFIG_DEVICE_HWREV
 
	`CONFIG_SYS_
(8)

	)

84 
	#CONFIG_SUPER_PASSWORD
 
	`CONFIG_SYS_
(9)

	)

85 
	#CONFIG_LAN_MAC_ADDR
 
	`CONFIG_SYS_
(10)

	)

88 
	#CONFIG_NTP
 
	`CONFIG_CMO_DEF
(
CONFIG_MID_NTP
,0,0,0)

	)

89 
	#CONFIG_NTP_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_NTP
,1,key,0)

	)

90 
	#CONFIG_NTP_SECTION
 
	`CONFIG_NTP_
(0)

	)

91 
	#CONFIG_NTP_ZONE
 
	`CONFIG_NTP_
(1)

	)

92 
	#CONFIG_NTP_SERVER
 
	`CONFIG_NTP_
(2)

	)

93 
	#CONFIG_NTP_DAYLIGHT
 
	`CONFIG_NTP_
(3)

	)

94 
	#CONFIG_NTP_START_M
 
	`CONFIG_NTP_
(4)

	)

95 
	#CONFIG_NTP_START_D
 
	`CONFIG_NTP_
(5)

	)

96 
	#CONFIG_NTP_TYPE
 
	`CONFIG_NTP_
(6)

	)

97 
	#CONFIG_NTP_SYSTIME
 
	`CONFIG_NTP_
(7)

	)

99 
	#CONFIG_WEB
 
	`CONFIG_CMO_DEF
(
CONFIG_MID_WEB
,0,0,0)

	)

100 
	#CONFIG_WEB_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_WEB
,1,key,0)

	)

101 
	#CONFIG_WEB_SECTION
 
	`CONFIG_WEB_
(0)

	)

102 
	#CONFIG_WEB_AUX_ENABLE
 
	`CONFIG_WEB_
(1)

	)

103 
	#CONFIG_WEB_USERNAME
 
	`CONFIG_WEB_
(2)

	)

104 
	#CONFIG_WEB_PASSWORD
 
	`CONFIG_WEB_
(3)

	)

105 
	#CONFIG_WEB_IDLETIME
 
	`CONFIG_WEB_
(4)

	)

106 
	#CONFIG_WEB_SSL_ENABLE
 
	`CONFIG_WEB_
(5)

	)

108 
	#CONFIG_TELNET
 
	`CONFIG_CMO_DEF
(
CONFIG_MID_TELNET
,0,0,0)

	)

109 
	#CONFIG_TELNET_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_TELNET
,1,key,0)

	)

110 
	#CONFIG_TELNET_SECTION
 
	`CONFIG_TELNET_
(0)

	)

111 
	#CONFIG_TELNET_SERVICE_ENABLE
 
	`CONFIG_TELNET_
(1)

	)

112 
	#CONFIG_TELNET_ENABLE
 
	`CONFIG_TELNET_
(2)

	)

113 
	#CONFIG_TELNET_PORT
 
	`CONFIG_TELNET_
(3)

	)

115 
	#CONFIG_USER
 
	`CONFIG_CMO_DEF
(
CONFIG_MID_USER
,0,0,0)

	)

116 
	#CONFIG_USER_VTY_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_USER
,1,key,0)

	)

117 
	#CONFIG_USER_VTY_SECTION
 
	`CONFIG_USER_VTY_
(0)

	)

118 
	#CONFIG_USER_VTY_NAME
 
	`CONFIG_USER_VTY_
(1)

	)

119 
	#CONFIG_USER_VTY_PASSWORD
 
	`CONFIG_USER_VTY_
(2)

	)

120 
	#CONFIG_USER_VTY_PASSWORD_TYPE
 
	`CONFIG_USER_VTY_
(3)

	)

121 
	#CONFIG_USER_VTY_AUTHMODE
 
	`CONFIG_USER_VTY_
(4)

	)

122 
	#CONFIG_USER_VTY_TIMEOUT
 
	`CONFIG_USER_VTY_
(5)

	)

124 
	#CONFIG_USER_WEB_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_USER
,2,key,0)

	)

125 
	#CONFIG_USER_WEB_SECTION
 
	`CONFIG_USER_WEB_
(0)

	)

126 
	#CONFIG_USER_WEB_NAME
 
	`CONFIG_USER_WEB_
(1)

	)

127 
	#CONFIG_USER_WEB_PASSWORD
 
	`CONFIG_USER_WEB_
(2)

	)

128 
	#CONFIG_USER_WEB_LEVEL
 
	`CONFIG_USER_WEB_
(3)

	)

130 
	#CONFIG_ETHPORT
 
	`CONFIG_CMO_DEF
(
CONFIG_MID_ETHPORT
,0,0,0)

	)

131 
	#CONFIG_ETHPORT_
(
key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_ETHPORT
,1,key,0)

	)

132 
	#CONFIG_ETHPORT_SECTION
 
	`CONFIG_ETHPORT_
(0)

	)

133 
	#CONFIG_ETHPORT_ENABLED
 
	`CONFIG_ETHPORT_
(1)

	)

134 
	#CONFIG_ETHPORT_AUTONEG
 
	`CONFIG_ETHPORT_
(2)

	)

135 
	#CONFIG_ETHPORT_SPD
 
	`CONFIG_ETHPORT_
(3)

	)

136 
	#CONFIG_ETHPORT_DUP
 
	`CONFIG_ETHPORT_
(4)

	)

137 
	#CONFIG_ETHPORT_PRI
 
	`CONFIG_ETHPORT_
(5)

	)

138 
	#CONFIG_ETHPORT_FLC
 
	`CONFIG_ETHPORT_
(6)

	)

139 
	#CONFIG_ETHPORT_INGRESS_LIMIT
 
	`CONFIG_ETHPORT_
(7)

	)

140 
	#CONFIG_ETHPORT_ENGRESS_LIMIT
 
	`CONFIG_ETHPORT_
(8)

	)

141 
	#CONFIG_ETHPORT_VLANMODE
 
	`CONFIG_ETHPORT_
(9)

	)

142 
	#CONFIG_ETHPORT_PVID
 
	`CONFIG_ETHPORT_
(10)

	)

143 
	#CONFIG_ETHPORT_LINKTYPE
 
	`CONFIG_ETHPORT_
(11)

	)

144 
	#CONFIG_ETHPORT_LINK_TRUNK_PERMIT
 
	`CONFIG_ETHPORT_
(12)

	)

145 
	#CONFIG_ETHPORT_LINK_HYBRID_TAG
 
	`CONFIG_ETHPORT_
(13)

	)

146 
	#CONFIG_ETHPORT_LINK_HYBRID_UNTAG
 
	`CONFIG_ETHPORT_
(14)

	)

149 
	#CONFIG_VLAN_
(
Se˘i⁄
, 
Key
Ë
	`CONFIG_CMO_DEF
(
CONFIG_MID_VLAN
, Se˘i⁄, Key, 0)

	)

150 
	#CONFIG_VLAN
 
	`CONFIG_VLAN_
(0, 0)

	)

151 
	#CONFIG_MAN_VLAN_SECTION
 
	`CONFIG_VLAN_
(1, 0)

	)

152 
	#CONFIG_MAN_VLAN_NAME
 
	`CONFIG_VLAN_
(1, 1)

	)

153 
	#CONFIG_MAN_VLAN_IF_STATE
 
	`CONFIG_VLAN_
(1, 2)

	)

154 
	#CONFIG_MAN_VLAN_IF_PROTO
 
	`CONFIG_VLAN_
(1, 3)

	)

155 
	#CONFIG_MAN_VLAN_IF_IP
 
	`CONFIG_VLAN_
(1, 4)

	)

156 
	#CONFIG_MAN_VLAN_IF_NETMASK
 
	`CONFIG_VLAN_
(1, 5)

	)

157 
	#CONFIG_MAN_VLAN_IF_DNS
 
	`CONFIG_VLAN_
(1, 6)

	)

158 
	#CONFIG_MAN_VLAN_IF_GATEWAY
 
	`CONFIG_VLAN_
(1, 7)

	)

160 
	#CONFIG_VLAN_INFO_SECTION
 
	`CONFIG_VLAN_
(2, 0)

	)

161 
	#CONFIG_VLAN_MODE
 
	`CONFIG_VLAN_
(2, 1)

	)

162 
	#CONFIG_PORT_PVID_ETH
 
	`CONFIG_VLAN_
(2, 2)

	)

163 
	#CONFIG_PORT_PVID_CAB
 
	`CONFIG_VLAN_
(2, 3)

	)

164 
	#CONFIG_PORT_LINKTYPE_ETH
 
	`CONFIG_VLAN_
(2, 4)

	)

165 
	#CONFIG_PORT_LINKTYPE_CAB
 
	`CONFIG_VLAN_
(2, 5)

	)

166 
	#CONFIG_PORT_TRUNK_PERMIT_ETH
 
	`CONFIG_VLAN_
(2, 6)

	)

167 
	#CONFIG_PORT_TRUNK_PERMIT_CAB
 
	`CONFIG_VLAN_
(2, 7)

	)

168 
	#CONFIG_PORT_LINK_HYBRID_TAG_ETH
 
	`CONFIG_VLAN_
(2, 8)

	)

169 
	#CONFIG_PORT_LINK_HYBRID_TAG_CAB
 
	`CONFIG_VLAN_
(2, 9)

	)

170 
	#CONFIG_PORT_LINK_HYBRID_UNTAG_ETH
 
	`CONFIG_VLAN_
(2, 10)

	)

171 
	#CONFIG_PORT_LINK_HYBRID_UNTAG_CAB
 
	`CONFIG_VLAN_
(2, 11)

	)

178 
	#CONFIG_PVLAN_TABLE
 
	`CONFIG_VLAN_
(3, 0)

	)

179 
	#CONFIG_PVLAN_TABLE_ID
 
	`CONFIG_VLAN_
(3, 1)

	)

180 
	#CONFIG_PVLAN_TABLE_PORT
 
	`CONFIG_VLAN_
(3, 2)

	)

182 #ifde‡ 
__˝lu•lus


	@include/lw_list.h

1 #i‚de‡
__MW_LIST_H_


2 
	#__MW_LIST_H_


	)

4 #ifde‡
__GNUC__


5 
	#_INLINE_
 
__ölöe__


	)

7 
	#_INLINE_
 
ölöe


	)

10 #unde‡
off£tof


11 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

21 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) ({ \

22 c⁄° 
	`ty≥of
–((
ty≥
 *)0)->
membî
 ) *
__m±r
 = (
±r
); \

23 (
ty≥
 *)–(*)
__m±r
 - 
	`off£tof
—y≥,
membî
Ë);})

	)

25 #ifde‡
__KERNEL__


27 
	#¥e„tch
(
x
Ë1

	)

31 #ifde‡
__KERNEL__


34 
	#smp_wmb
()

	)

37 
	sli°_hód
 {

38 
li°_hód
 *
	m√xt
, *
	m¥ev
;

41 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

43 
	#DEFINE_LIST_HEAD
(
«me
Ë
li°_hód
 
	)
name

45 
	#LIST_HEAD
(
«me
) \

46 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

48 
	#INIT_LIST_HEAD
(
±r
) do { \

49 (
±r
)->
√xt
 = (±r); (±r)->
¥ev
 = (ptr); \

50 } 0)

	)

58 
_INLINE_
 
	$__li°_add
(
li°_hód
 * 
add
,

59 
li°_hód
 * 
¥ev
,

60 
li°_hód
 * 
√xt
)

62 
√xt
->
¥ev
 = 
add
;

63 
add
->
√xt
 =Çext;

64 
add
->
¥ev
 =Örev;

65 
¥ev
->
√xt
 = 
add
;

66 
	}
}

76 
_INLINE_
 
	$li°_add
(
li°_hód
 *
add
, li°_hód *
hód
)

78 
	`__li°_add
(
add
, 
hód
, hód->
√xt
);

79 
	}
}

89 
_INLINE_
 
	$li°_add_èû
(
li°_hód
 *
add
, li°_hód *
hód
)

91 
	`__li°_add
(
add
, 
hód
->
¥ev
, head);

92 
	}
}

101 
_INLINE_
 
	$__li°_dñ
(
li°_hód
 * 
¥ev
,

102 
li°_hód
 * 
√xt
)

104 
√xt
->
¥ev
 =Örev;

105 
¥ev
->
√xt
 =Çext;

106 
	}
}

115 
_INLINE_
 
	$li°_dñ
(
li°_hód
 *
íåy
)

117 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

118 
	}
}

124 
_INLINE_
 
	$li°_dñ_öô
(
li°_hód
 *
íåy
)

126 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

127 
	`INIT_LIST_HEAD
(
íåy
);

128 
	}
}

134 
_INLINE_
 
	$li°_em±y
(
li°_hód
 *
hód
)

136  
hód
->
√xt
 == head;

137 
	}
}

144 
_INLINE_
 
	$li°_•li˚
(
li°_hód
 *
li°
, li°_hód *
hód
)

146 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

148 i‡(
fú°
 !
li°
) {

149 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

150 
li°_hód
 *
©
 = 
hód
->
√xt
;

152 
fú°
->
¥ev
 = 
hód
;

153 
hód
->
√xt
 = 
fú°
;

155 
œ°
->
√xt
 = 
©
;

156 
©
->
¥ev
 = 
œ°
;

158 
	}
}

166 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

168 ((
ty≥
 *)((*)(
±r
)-()(&(—y≥ *)0)->
membî
)))

	)

175 
	#li°_f‹_óch
(
pos
, 
hód
) \

176 
pos
 = (
hód
)->
√xt
;Öo†!(hód);Öo†pos->√xt)

	)

185 
	#li°_f‹_óch_ß„
(
pos
, 
≤ext
, 
hód
) \

186 
pos
 = (
hód
)->
√xt
, 
≤ext
 =Öos->next;Öos != (head); \

187 
pos
 = 
≤ext
,Ö√xàpos->
√xt
)

	)

196 
	#li°_f‹_óch_íåy_ß„
(
pos
, 
n
, 
hód
, 
membî
) \

198 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

199 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

200 &
pos
->
membî
 !(
hód
); \

201 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), member)) \

202 

	)

210 #ifde‡
__KERNEL__


211 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

212 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

213 
	`¥e„tch
(
pos
->
membî
.
√xt
); \

214 &
pos
->
membî
 !(
hód
); \

215 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

216 
	`¥e„tch
(
pos
->
membî
.
√xt
))

	)

219 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

221 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
);\

222 &
pos
->
membî
 !(
hód
); \

223 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member)) \

224 

	)

233 #ifde‡
__KERNEL__


234 
	#li°_f‹_óch_íåy_ªvî£
(
pos
, 
hód
, 
membî
) \

235 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
); \

236 
	`¥e„tch
(
pos
->
membî
.
¥ev
), &pos->membî !(
hód
); \

237 
pos
 = 
	`li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), membî))

	)

240 
	#li°_f‹_óch_íåy_ªvî£
(
pos
, 
hód
, 
membî
) \

242 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
); \

243 &
pos
->
membî
 !(
hód
); \

244 
pos
 = 
	`li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), member)) \

245 

	)

262 
	#li°_f‹_óch_íåy_ß„_ªvî£
(
pos
, 
n
, 
hód
, 
membî
) \

264 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
), \

265 
n
 = 
	`li°_íåy
(
pos
->
membî
.
¥ev
, 
	`ty≥of
(*pos), member); \

266 &
pos
->
membî
 !(
hód
); \

267 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
¥ev
, 
	`ty≥of
(*n), member)) \

268 

	)

270 #ifde‡
__KERNEL__


271 
	#li°_f‹_óch_íåy_c⁄töue
(
pos
, 
hód
, 
membî
) \

273 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

274 
	`¥e„tch
(
pos
->
membî
.
√xt
); \

275 &
pos
->
membî
 !(
hód
); \

276 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

277 
	`¥e„tch
(
pos
->
membî
.
√xt
)) \

278 

	)

281 
	#li°_f‹_óch_íåy_c⁄töue
(
pos
, 
hód
, 
membî
) \

283 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

284 &
pos
->
membî
 !(
hód
); \

285 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member)) \

286 

	)

288 #i‚de‡
__KERNEL__


290 
	#li°_fú°_íåy
(
fú°
, 
hód
, 
membî
,
ty≥
)\

293 if((
hód
)->
√xt
==(head)) \

295 
fú°
=
NULL
; \

298 
fú°
 = 
	`li°_íåy
((
hód
)->
√xt
, 
ty≥
,
membî
); \

300 

	)

302 
	#li°_√xt_íåy
(
pos
,
≤ext
,
hód
, 
membî
,
ty≥
)\

305 if(((
hód
)->
√xt
==(hód))||(
pos
 =
NULL
)||’os->
membî
.next==(head)))\

307 
≤ext
=
NULL
; \

310 
≤ext
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
,
ty≥
,member); \

312 

	)

	@include/vos_config.h

29 #i‚de‡
__VOS_CONFIG_H_


30 
	#__VOS_CONFIG_H_


	)

32 
	~"vos_hash.h
"

33 
	~"lw_li°.h
"

34 
	~"c⁄fig_oid.h
"

37 #ifde‡
__˝lu•lus


40 
	#vosSåLí
 
°æí


	)

41 
	#vosSa„SåNCpy
 
°∫˝y


	)

42 
	#vosPrötk
 
¥ötf


	)

43 
	#vosPrötf


	)

45 
	#TAB
 0x09

	)

46 
	#VOSCONFIG_SHMLOCKFILE
 "/ëc/.vosc⁄figlock.tmp"

	)

47 
	#VOSCFG_SHM_KEY
 0x6666

	)

48 
	#VOSCFG_SHM_SIZE
 (16*64*1024)

	)

49 
	#MASTER
 1

	)

50 
	#SLAVER
 0

	)

51 
	#TESTER
 0xff

	)

54 
	#CONFIG_TMP_FILE
 "/v¨/run/.tm≤ewcfg"

	)

55 
	#CONFIG_TMP2_FILE
 "/v¨/run/.tm≤ewcfg2"

	)

57 
	#CONFIG_DEFAULTFILE
 "/ëc/c⁄fig/°¨tup"

	)

59 
	#CONFIG_MD5_TMPFILE
 "/v¨/run/cfgmd5"

	)

60 
	#CONFIG_DEFAULTSTART
 "/v¨/run/°¨tup"

	)

61 
	#CONFIG_CURRENT_FILE
 "/v¨/run/cuºít"

	)

62 
	#CONFIG_MNT_START
 "/m¡/°¨tup"

	)

64 
	#CONFIG_VIRTUAL_FILE
 "/v¨/run/vútuÆ"

	)

65 
	#CONFIG_NORMAL_FLIE
 "/v¨/run/n‹mÆ"

	)

67 
	#MD5_LEN
 32

	)

68 
	#PRODUCT_NAME
 "EPN"

	)

69 
	#CONFIG_CUST_DEVELOP_VER_STR
 "104"

	)

77 
	#CFG_NOT_FLUSHED
 0

	)

78 
	#CFG_FLUSHED
 1

	)

81 
	#CFG_TYPE_INT
 0

	)

82 
	#CFG_TYPE_STR
 1

	)

83 
	#CFG_TYPE_IPV4
 2

	)

84 
	#CFG_TYPE_IPV6
 3

	)

85 
	#CFG_STR_LEN
 50

	)

89 
CFG_OID_TYPE_SINGLE
=0,

90 
CFG_OID_TYPE_TABLE


91 }
	tCFG_OID_TYPE_E
;

93 
	sègCFG_OID_REGINFO_S


95 
uiCmoid
;

96 
«me
[256];

97 
iMax
;

98 
iMö
;

99 
iRe°‹e
;

100 
CFG_OID_TYPE_E
 
íNode_ty≥
 ;

101 –*
CHECK_FUN_PF
)(
uiCmoid
,* 
vÆ
);

102 
ty≥
;

103 }
	tCFG_OID_REGINFO_S
;

104 
	#TRUE
 1

	)

105 
	#FALSE
 0

	)

110 
	sCFG_KEY_DATA_s
 {

111 
Êag
;

112 *
d©a
;

113 }
	tCFG_KEY_DATA_t
;

115 
	sCFG_SECTION_DATA_s
 {

116 
Êag
;

117 
HASH_TABLE_t
 *
keys
;

118 }
	tCFG_SECTION_DATA_t
;

120 
	sCFG_MODULE_DATA_s
 {

121 
Êag
;

122 
HASH_TABLE_t
 *
£˘i⁄s
;

123 } 
	tCFG_MODULE_DATA_t
;

124 
	sCFG_IFM_DATA_s
 {

125 
Êag
;

126 
HASH_TABLE_t
 *
moduÀs
;

127 }
	tCFG_IFM_DATA_t
;

129 
	sCFG_OID_REG_S
 {

130 
li°_hód
 
li°
;

131 
CFG_OID_REGINFO_S
 *
d©a
;

132 } 
	tCFG_OID_REG_t
;

135 
	sègCFG_DATABASE_S


137 
HASH_TABLE_t
 *
p°C⁄figD©aba£
[
CONFIG_MAX_DOMAINS
];

138 
Êag
;

139 } 
	tCFG_DATABASE_S
;

142 
	#OP_VOS_CONFIG_STR_MAX
 1014

	)

151 
vosC⁄figInô
();

152 
vosC⁄figDe°roy
();

154 
vosC⁄figShow
(
CFG_DOMAIN_E
 
íDomaö
,
fd
);

155 
vosC⁄figVÆueGë
(

156 
CFG_DOMAIN_E
 
íDomaö
,

157 *
ifm
,

158 *
‚ame
,

159 c⁄° *
£˘i⁄
,

160 *
key
,

161 *
deÁu…_vÆue
,

162 *
ªsu…
,

163 
ªéí
);

165 
vosC⁄figVÆueSë
(

166 
CFG_DOMAIN_E
 
íDomaö
,

167 *
ifm
,

168 *
‚ame
,

169 c⁄° *
£˘i⁄
,

170 *
key
,

171 c⁄° *
vÆue
);

172 
vosC⁄figModuÀDñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
,*
‚ame
);

174 
vosC⁄figSe˘i⁄Dñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
,*
‚ame
, c⁄° *
£˘i⁄
);

175 
vosC⁄figKeyDñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
,*
‚ame
, *
£˘i⁄
, *
key
);

176 
vosC⁄figSe˘i⁄Cª©e
(

177 
CFG_DOMAIN_E
 
íDomaö
,

178 *
ifm
,

179 *
‚ame
,

180 c⁄° *
£˘i⁄
);

181 
vosC⁄figSe˘i⁄GëByIndex
–
CFG_DOMAIN_E
 
íDomaö
,*
ifm
,*
‚ame
, 
ödex
, **
£˘i⁄
);

184 #ifde‡
__˝lu•lus


	@include/vos_hash.h

29 #i‚de‡
__VOS_HASH_H_


30 
	#__VOS_HASH_H_


	)

32 #ifde‡
__˝lu•lus


36 
	~<°rög.h
>

39 #i‚de‡
__USE_ISOC99


40 
	#ölöe


	)

43 #ifde‡
__˝lu•lus


44 (*
FUNCPTR
) (...);

46 (*
FUNCPTR
) ();

49 
	#vosHashTabÀCª©e
(
hSize
Ë\

	)

50 
vosHashCª©e
(
vosSåögHash
, 
vosEquÆSåög
, 
vosHashE¡ryFªe
, 
hSize
)

53 
	sHASH_ENTRY_s


55 *
key
;

56 *
d©a
;

57 
HASH_ENTRY_s
 *
√xt
;

60 
	sHASH_TABLE_s


62 (*
gëHash
)(*);

63 (*
com∑ª
)(*, *);

64 (*
íåyDe°roy
)(*, *);

65 
ôems
;

66 
hashSize
;

67 
cou¡
;

68 
ªsizeThªshﬁd
;

70 
¥imeOff£t
;

72 
HASH_ENTRY_s
 **
hashLi°
;

78 
HASH_TABLE_s
 
	tHASH_TABLE_t
;

80 
vosSåögHash
(*
§c
);

81 
vosEquÆSåög
(*
k1
, *
k2
);

82 
vosHashE¡ryFªe
(*
key
, *
vÆue
);

84 
HASH_TABLE_t
 *
vosHashCª©e
((*
keyfunc
)(*),

85 (*
com∑ªfunc
)(*, *),

86 (*
íåyde°royfunc
)(*, *),

87 
size
);

88 
vosHashCÀ¨
(
HASH_TABLE_t
 *
èb
);

89 
vosHashFªe
(
HASH_TABLE_t
 *
èb
);

90 
vosHashIn£π
(*
key
, *
d©a
, 
HASH_TABLE_t
 *
èb
);

91 
vosHashRemove
(*
key
, 
HASH_TABLE_t
 *
èb
);

92 *
vosHashVÆue
(*
key
, 
HASH_TABLE_t
 *
èb
);

93 
vosHashVÆueGëByIndex
(
ödex
,

94 
HASH_TABLE_t
 *
èb
,

95 **
key
,

96 **
d©a
);

97 
vosHashF‹EachDo
(
HASH_TABLE_t
 *
èb
, (
cb
)(*, *));

98 
vosHashF‹EachDoCb
(
HASH_TABLE_t
 *
èb
,

99 
FUNCPTR
 
pCÆlback
,

100 
ulArg3
,

101 
ulArg4
,

102 
ulArg5
,

103 
ulArg6
,

104 
ulArg7
,

105 
ulArg8
);

107 
vosHashSize
(
HASH_TABLE_t
 *
èb
);

108 
vosHashCou¡
(
HASH_TABLE_t
 *
èb
);

109 
vosHashIãms
(
HASH_TABLE_t
 *
èb
);

111 #ifde‡
__˝lu•lus


	@include/vos_types.h

29 #i‚de‡
__VOS_TYPES_H_


30 
	#__VOS_TYPES_H_


	)

32 #ifde‡
__˝lu•lus


41 #i‚de‡
TRUE


42 
	#TRUE
 1

	)

45 #i‚de‡
FALSE


46 
	#FALSE
 0

	)

49 #i‚de‡
DONT_CARE


50 
	#DONT_CARE
 0

	)

53 
	#VOL
 vﬁ©ûe

	)

55 
	#BITS2BYTES
(
x
Ë(((xË+ 7Ë/ 8)

	)

56 
	#BITS2WORDS
(
x
Ë(((xË+ 31Ë/ 32)

	)

57 
	#BYTES2BITS
(
x
Ë((xË* 8)

	)

58 
	#BYTES2WORDS
(
x
Ë(((xË+ 3Ë/ 4)

	)

59 
	#WORDS2BITS
(
x
Ë((xË* 32)

	)

60 
	#WORDS2BYTES
(
x
Ë((xË* 4)

	)

62 
	#COUNTOF
(
¨y
Ë((Ë( (¨yË/  (◊ry)[0])))

	)

64 
	#PTR_TO_INT
(
x
Ë((
uöt32
)(x))

	)

65 
	#INT_TO_PTR
(
x
Ë((*)(
uöt32
)(x))

	)

68 
	tuöt8
;

69 
	tuöt16
;

70 
	tuöt32
;

71 sig√d 
	töt8
;

72 sig√d 
	töt16
;

73 sig√d 
	töt32
;

75 #i‚de‡
INVALID_8


76 
	#INVALID_8
 ((
uöt8
)0xff)

	)

79 #i‚de‡
INVALID_16


80 
	#INVALID_16
 ((
uöt16
)0xffff)

	)

83 #i‚de‡
INVALID_32


84 
	#INVALID_32
 ((
uöt32
)0xffffffff)

	)

87 #i‚de‡
OK


88 
	#OK
 0

	)

91 #i‚de‡
ERROR


92 
	#ERROR
 -1

	)

95 #i‚de‡
NO_ERROR


96 
	#NO_ERROR
 0

	)

99 #i‚de‡
NULL


100 
	#NULL
 ((*Ë0Ë

	)

103 #i‚de‡
_MWTYPE_DEF


104 
	#_MWTYPE_DEF


	)

106 
	tCHAR
;

107 
	tINT
;

108 
	tLONG
;

109 
	tSHORT
;

110 
	tFLOAT
;

112 
	tINT8
;

113 
	tINT16
;

114 
	tINT32
;

115 
	tINT64
;

117 
	tUINT8
;

118 
	tUINT16
;

119 
	tUINT32
;

120 
	tUINT64
;

122 
	tUCHAR
;

123 
	tUSHORT
;

124 
	tUINT
;

125 
	tULONG
;

126 
	tULONG64
;

127 
ULONG
 
	tIP_ADDRESS
;

128 
	tBYTE
;

130 
	tBOOL
;

131 
	tBOOL_T
;

132 
	tSTATUS
;

133 
	tARGINT
;

134 
	tVOID
;

141 #i‡
deföed
(
__KERNEL__
)

142 
	#ASSERT
(
_x
) do{ \

143 i‡(!(
_x
)) { \

144 
	`¥ötk
("As£π[%s][%d] %s\n", 
__FUNCTION__
, 
__LINE__
, #_x); \

146 }0)

	)

148 
	#ASSERT
(
_x
) do{ \

149 i‡(!(
_x
)) { \

150 
	`¥ötf
("As£π[%s][%d] %s\n", 
__FUNCTION__
, 
__LINE__
, #_x); \

152 }0)

	)

157 #ifde‡
__˝lu•lus


159 (*
VOIDFUNCPTR
) (...);

160 (*
DBLFUNCPTR
) (...);

161 (*
FLTFUNCPTR
) (...);

164 (*
VOIDFUNCPTR
) ();

165 (*
DBLFUNCPTR
) ();

166 (*
FLTFUNCPTR
) ();

170 #ifde‡
__˝lu•lus


	@newcfg/vos_config.c

5 
	~<°rög.h
>

6 
	~<˘y≥.h
>

7 
	~<°dlib.h
>

8 
	~<°dio.h
>

10 
	~<as£π.h
>

11 
	~<lw_li°.h
>

13 
	~"vos_hash.h
"

14 
	~<c⁄fig_oid.h
>

15 
	~"vos_c⁄fig.h
"

16 
	~<sys/ty≥s.h
>

17 
	~<sys/°©.h
>

19 
	~<uni°d.h
>

20 
	~<f˙é.h
>

21 
	~<sys/ùc.h
>

22 
	~<sys/shm.h
>

24 
	~<vos_ty≥s.h
>

27 
	~<sys/waô.h
>

28 
	~<¨∑/öë.h
>

30 #unde‡
DEBUG


31 
	#DEBUG


	)

32 #ifde‡
DEBUG


33 
	#DBG_PRINTF
(
fmt
, ...Ëdÿ{ 
	`Ârötf
(
°dîr
, "DBG [%s,%s,%d]: " fmt, 
__FILE__
, 
__FUNCTION__
, 
__LINE__
 , ##
__VA_ARGS__
); f¥ötf(°dîr, "\r\n"); } 0)

	)

36 
	#DBG_PRINTF


	)

39 #unde‡
ASSERT


40 
	#ASSERT


	)

42 
CFG_OID_REGINFO_S
 
	gg_cfg_oid_tbl
[]=

62 {
CONFIG_SYSTEM
, "sy°em", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

63 {
CONFIG_SYSTEM_SECTION
, "sy°em_öfo", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

64 {
CONFIG_SYSTEM_NAME
, "sys_sy°em«me", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

65 {
CONFIG_SYSTEM_LOGMODE
, "sys_log_mode", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

66 {
CONFIG_SYSTEM_LOG_REMOTEEN
, "sys_log_ªmŸe_í", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

67 {
CONFIG_SYSTEM_LOG_REMOTEIP
, "sys_log_ªmŸe_ù", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

68 {
CONFIG_SYSTEM_LOG_LOCALIP
, "sys_log_loˇl_ù", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

69 {
CONFIG_SYSTEM_SSH_ENABLE
, "sys_ssh_íabÀd", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

70 {
CONFIG_SSH_PORT
, "sys_ssh_p‹t", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

71 {
CONFIG_DEVICE_HWREV
, "devi˚_hw_ªv", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

72 {
CONFIG_SUPER_PASSWORD
, "su≥r_∑ssw‹d", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

73 {
CONFIG_LAN_MAC_ADDR
, "œn_mac_addr", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

75 {
CONFIG_NTP
, "¡p", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

76 {
CONFIG_NTP_SECTION
, "¡p_öfo", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

77 {
CONFIG_NTP_ZONE
, "¡p_time_z⁄e", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_INT
},

78 {
CONFIG_NTP_SERVER
, "¡p_time_£rvî", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

79 {
CONFIG_NTP_DAYLIGHT
, "¡p_daylight", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

80 {
CONFIG_NTP_START_M
, "¡p_dl_°¨t_m", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

81 {
CONFIG_NTP_START_D
, "¡p_dl_°¨t_d", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

82 {
CONFIG_NTP_TYPE
, "¡p_ty≥", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

83 {
CONFIG_NTP_SYSTIME
, "¡p_sy°ime", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

85 {
CONFIG_WEB
, "web", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

86 {
CONFIG_WEB_SECTION
, "web_öfo", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

87 {
CONFIG_WEB_AUX_ENABLE
, "web_aux_íabÀd", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

88 {
CONFIG_WEB_USERNAME
, "web_u£∫ame_aux", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

89 {
CONFIG_WEB_PASSWORD
, "web_∑ssw‹d_aux", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

90 {
CONFIG_WEB_IDLETIME
, "web_idÀ_time", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

91 {
CONFIG_WEB_SSL_ENABLE
, "web_s¶_íabÀd", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

93 {
CONFIG_TELNET
, "ã ë", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

94 {
CONFIG_TELNET_SECTION
, "ã ë_öfo", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

95 {
CONFIG_TELNET_SERVICE_ENABLE
, "ã ë_£rvi˚_íabÀd", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

96 {
CONFIG_TELNET_ENABLE
, "sys_ã ë_íabÀd", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

97 {
CONFIG_TELNET_PORT
, "sys_ã ë_p‹t", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

99 {
CONFIG_USER
, "u£r", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

100 {
CONFIG_USER_VTY_SECTION
, "vty_", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

101 {
CONFIG_USER_VTY_NAME
, "u£r_vty_«me", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

102 {
CONFIG_USER_VTY_PASSWORD
, "u£r_vty_∑ssw‹d", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

103 {
CONFIG_USER_VTY_PASSWORD_TYPE
, "u£r_vty_∑ssw‹d_ty≥", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

104 {
CONFIG_USER_VTY_AUTHMODE
, "u£r_vty_authmode", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

105 {
CONFIG_USER_VTY_TIMEOUT
, "u£r_vty_timeout", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_INT
},

107 {
CONFIG_USER_WEB_SECTION
, "web_", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

108 {
CONFIG_USER_WEB_NAME
, "u£r_web_«me", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

109 {
CONFIG_USER_WEB_PASSWORD
, "u£r_web_∑ssw‹d", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

110 {
CONFIG_USER_WEB_LEVEL
, "u£r_web_Àvñ", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

112 {
CONFIG_ETHPORT
, "ëhp‹t", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

113 {
CONFIG_ETHPORT_SECTION
, "ëhp‹t_", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

114 {
CONFIG_ETHPORT_ENABLED
, "ëhp‹t_íabÀd", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

115 {
CONFIG_ETHPORT_AUTONEG
, "ëhp‹t_aut⁄eg", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

116 {
CONFIG_ETHPORT_SPD
, "ëhp‹t_•d", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

117 {
CONFIG_ETHPORT_DUP
, "ëhp‹t_dup", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

118 {
CONFIG_ETHPORT_PRI
, "ëhp‹t_¥i", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

119 {
CONFIG_ETHPORT_FLC
, "ëhp‹t_Êc", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

120 {
CONFIG_ETHPORT_INGRESS_LIMIT
, "ëhp‹t_ögªss_limô", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

121 {
CONFIG_ETHPORT_ENGRESS_LIMIT
, "ëhp‹t_ígªss_limô", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

122 {
CONFIG_ETHPORT_VLANMODE
, "ëhp‹t_vœnmode", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

123 {
CONFIG_ETHPORT_PVID
, "ëhp‹t_pvid", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

124 {
CONFIG_ETHPORT_LINKTYPE
, "ëhp‹t_lökty≥", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

125 {
CONFIG_ETHPORT_LINK_TRUNK_PERMIT
, "ëhp‹t_lök_åunk_≥rmô", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

126 {
CONFIG_ETHPORT_LINK_HYBRID_TAG
, "ëhp‹t_lök_hybrid_èg", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

127 {
CONFIG_ETHPORT_LINK_HYBRID_UNTAG
, "ëhp‹t_lök_hybrid_u¡ag", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

129 {
CONFIG_VLAN
, "vœn", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

130 {
CONFIG_MAN_VLAN_SECTION
, "vœn_", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

131 {
CONFIG_MAN_VLAN_NAME
, "vœn_«me", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

132 {
CONFIG_MAN_VLAN_IF_STATE
, "vœn_öãrÁ˚_°©e", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

133 {
CONFIG_MAN_VLAN_IF_PROTO
, "vœn_öãrÁ˚_¥Ÿo", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

134 {
CONFIG_MAN_VLAN_IF_IP
, "vœn_öãrÁ˚_ù", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

135 {
CONFIG_MAN_VLAN_IF_NETMASK
, "vœn_öãrÁ˚_√tmask", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

136 {
CONFIG_MAN_VLAN_IF_DNS
, "vœn_öãrÁ˚_dns", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

137 {
CONFIG_MAN_VLAN_IF_GATEWAY
, "vœn_öãrÁ˚_g©eway", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

139 {
CONFIG_VLAN_MODE
, "vœn_mode", 0,0,0, 
CFG_OID_TYPE_SINGLE
, 
NULL
, 
CFG_TYPE_STR
},

141 {
CONFIG_PORT_PVID_ETH
, "p‹t_pvid_ëh", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

142 {
CONFIG_PORT_PVID_CAB
, "p‹t_pvid_ˇb", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

143 {
CONFIG_PORT_LINKTYPE_ETH
, "p‹t_lökty≥_ëh", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

144 {
CONFIG_PORT_LINKTYPE_CAB
, "p‹t_lökty≥_ˇb", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

145 {
CONFIG_PORT_TRUNK_PERMIT_ETH
, "p‹t_lök_åunk_≥rmô_ëh", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

146 {
CONFIG_PORT_TRUNK_PERMIT_CAB
, "p‹t_lök_åunk_≥rmô_ˇb", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

147 {
CONFIG_PORT_LINK_HYBRID_TAG_ETH
, "p‹t_lök_hybrid_èg_ëh", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

148 {
CONFIG_PORT_LINK_HYBRID_TAG_CAB
, "p‹t_lök_hybrid_èg_ˇb", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

149 {
CONFIG_PORT_LINK_HYBRID_UNTAG_ETH
, "p‹t_lök_hybrid_u¡ag_ëh", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

150 {
CONFIG_PORT_LINK_HYBRID_UNTAG_CAB
, "p‹t_lök_hybrid_u¡ag_ˇb", 0,0,0, 
CFG_OID_TYPE_TABLE
, 
NULL
, 
CFG_TYPE_STR
},

153 
poﬁ_¸óã
–*
ba£
, 
size
);

154 *
poﬁ_Æloc
–
size_t
 
byãs
 );

155 
poﬁ_‰ì
–*
mem
);

156 
	gma°î_Êag
=0;

157 * 
	$shmÆloc
(
size_t
 
size
)

159 if(
ma°î_Êag
==
MASTER
)

160  (*)
	`poﬁ_Æloc
(
size
);

162  (*)
	`mÆloc
(
size
);

163 
	}
}

165 
	$shm‰ì
(*
p
)

167 if(
ma°î_Êag
==
MASTER
)

168 
	`poﬁ_‰ì
((*)
p
);

170 
	`‰ì
((*)
p
);

171 
	}
}

173 
	#vosAŒoc
 
shmÆloc


	)

174 
	#vosFªe
 
shm‰ì


	)

175 
	gg_iLockfd
;

176 
HASH_TABLE_t
 * 
	gg_p°OidRegHashTbl
=
NULL
;

179 
CFG_DATABASE_S
 * 
	gg_p°cfgdb
=
NULL
;

181 
LIST_HEAD
(
g_OidRegLi°
);

182 
	$isMa°î
()

184  
ma°î_Êag
;

185 
	}
}

187 
	$__cfg_shm_lock
–
ifd
, 
°y≥
 )

189 
Êock
 
°lock
;

190 
°lock
.
l_ty≥
 = 
°y≥
;

191 
°lock
.
l_whí˚
 = 
SEEK_SET
;

192 
°lock
.
l_°¨t
 = 0;

193 
°lock
.
l_Àn
 = 0;

195 if(
	`f˙é
(
ifd
, 
F_SETLKW
, &
°lock
) < 0)

200 
	}
}

205 
	$__cfg_shm_u∆ock
–
ifd
 )

207 
Êock
 
°lock
;

208 
°lock
.
l_ty≥
 = 
F_UNLCK
;

209 
°lock
.
l_whí˚
 = 
SEEK_SET
;

210 
°lock
.
l_°¨t
 = 0;

211 
°lock
.
l_Àn
 = 0;

212 if(
	`f˙é
(
ifd
, 
F_SETLK
, &
°lock
) < 0)

218 
	}
}

220 
	$__cfg_ªad_lock
–* 
pûockfd
 )

223 
	`__cfg_shm_lock
(*
pûockfd
, 
F_RDLCK
);

227 
	}
}

229 
	$__cfg_ªad_u∆ock
–
ûockfd
 )

231 if(
ûockfd
 !=-1)

233 
	`__cfg_shm_u∆ock
(
ûockfd
);

241 
	}
}

243 
	$__cfg_wrôe_lock
–*
piPlockfd
 )

246 
	`__cfg_shm_lock
(*
piPlockfd
, 
F_WRLCK
);

250 
	}
}

255 
	$__cfg_wrôe_u∆ock
–
ûockfd
 )

257 if(
ûockfd
 !=-1)

259 
	`__cfg_shm_u∆ock
(
ûockfd
);

266 
	}
}

272 
vosC⁄figModuÀDe°roy
(*
key
, *
vÆue
);

273 
vosC⁄figSe˘i⁄De°roy
(*
key
, *
vÆue
);

274 
vosC⁄figKeyDe°roy
(*
key
, *
vÆue
);

275 *
åim
(c⁄° *
°r
);

276 
vosC⁄figFlushKeyRe£t
(* 
key
,* 
vÆue
);

277 
vosC⁄figFlushSe˘i⁄Re£t
(* 
key
,* 
vÆue
);

278 
vosC⁄figFlushKeyAµíd
(* 
key
,* 
vÆue
, 
FILE
 *
°ªam
);

279 
vosC⁄figFlushSe˘i⁄Aµíd
(* 
key
,* 
vÆue
, 
FILE
 *
°ªam
);

280 
vosC⁄figFlushF‹EachModuÀ
(* 
key
,* 
vÆue
);

281 
vosC⁄figShowF‹EachKey
(* 
key
,* 
vÆue
, 
fd
);

282 
vosC⁄figShowF‹EachSe˘i⁄
(* 
key
,* 
vÆue
, 
fd
);

283 
vosC⁄figShowF‹EachModuÀ
(* 
key
,* 
vÆue
, 
fd
);

286 
	$vosC⁄figIfDe°roy
(*
key
, *
vÆue
)

288 *
k
 = 
key
;

289 
CFG_IFM_DATA_t
 *
v
 = 
vÆue
;

290 
	`vosFªe
(
k
);

291 
	`vosHashFªe
(
v
->
moduÀs
);

292 
	`vosFªe
(
v
);

293 
	}
}

295 
	$vosC⁄figModuÀDe°roy
(*
key
, *
vÆue
)

297 *
k
 = 
key
;

298 
CFG_MODULE_DATA_t
 *
v
 = 
vÆue
;

299 
	`vosFªe
(
k
);

300 
	`vosHashFªe
(
v
->
£˘i⁄s
);

301 
	`vosFªe
(
v
);

302 
	}
}

304 
	$vosC⁄figSe˘i⁄De°roy
(*
key
, *
vÆue
)

306 *
k
 = 
key
;

307 
CFG_SECTION_DATA_t
 *
v
 = 
vÆue
;

308 
	`vosFªe
(
k
);

309 
	`vosHashFªe
(
v
->
keys
);

310 
	`vosFªe
(
v
);

311 
	}
}

313 
	$vosC⁄figKeyDe°roy
(*
key
, *
vÆue
)

315 *
k
 = 
key
;

316 
CFG_KEY_DATA_t
 *
v
 = 
vÆue
;

317 
	`vosFªe
(
k
);

318 
	`vosFªe
(
v
->
d©a
);

319 
	`vosFªe
(
v
);

320 
	}
}

340 
	$vosC⁄figDe°roy
()

342 
i
=0;

343 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

344 
i
=
CONFIG_NORMAL
;i<
CONFIG_MAX_DOMAINS
;i++)

346 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
i
]) {

347 
	`vosHashFªe
(
g_p°cfgdb
->
p°C⁄figD©aba£
[
i
]);

350 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

352 
	}
}

354 * 
	$åim
(c⁄° *
°r
)

356 c⁄° *
p
 = 
°r
;

357 *
ªsu…
;

358 
size_t
 
Àn
;

360 
	`as£π
(
p
 !
NULL
);

362 *
p
 == ' ' || *p == '\t')

363 
p
++;

365 
Àn
 = 
	`vosSåLí
(
p
) + 1;

366 
ªsu…
 = (*)
	`vosAŒoc
(
Àn
);

368 i‡(
NULL
 =
ªsu…
)

370  
NULL
;

373 
ªsu…
[0] = 0;

374 
	`vosSa„SåNCpy
(
ªsu…
, 
p
, 
Àn
);

376 
ªsu…
[
	`vosSåLí
(result) - 1] == ' ' ||

377 
ªsu…
[
	`vosSåLí
(result) - 1] == '\t' ||

378 
ªsu…
[
	`vosSåLí
(result) - 1] == '\r') {

379 
ªsu…
[
	`vosSåLí
(result) - 1] = '\0';

382  
ªsu…
;

383 
	}
}

385 
	$vosC⁄figFlushKeyRe£t
(* 
key
,* 
vÆue
)

387 
CFG_KEY_DATA_t
 *
tkey
 = (CFG_KEY_DATA_à*)
vÆue
;

388 i‡(
tkey
) {

389 
tkey
->
Êag
 = 
CFG_NOT_FLUSHED
;

391 
	}
}

393 
	$vosC⁄figFlushSe˘i⁄Re£t
(* 
key
,* 
vÆue
)

395 
CFG_SECTION_DATA_t
 *
t£˘i⁄
 = (CFG_SECTION_DATA_à*)
vÆue
;

396 i‡(
t£˘i⁄
) {

397 
t£˘i⁄
->
Êag
 = 
CFG_NOT_FLUSHED
;

398 
	`vosHashF‹EachDo
(
t£˘i⁄
->
keys
, 
vosC⁄figFlushKeyRe£t
);

400 
	}
}

401 
	$vosC⁄figFlushModuÀRe£t
(* 
key
,* 
vÆue
)

403 
CFG_MODULE_DATA_t
 *
tmoduÀ
 = (CFG_MODULE_DATA_à*)
vÆue
;

404 i‡(
tmoduÀ
) {

405 
tmoduÀ
->
Êag
 = 
CFG_NOT_FLUSHED
;

406 
	`vosHashF‹EachDo
(
tmoduÀ
->
£˘i⁄s
, 
vosC⁄figFlushSe˘i⁄Re£t
);

408 
	}
}

409 
	$vosC⁄figFlushIfRe£t
(* 
key
,* 
vÆue
)

411 
CFG_IFM_DATA_t
 *
tifm
 = (CFG_IFM_DATA_à*)
vÆue
;

412 i‡(
tifm
) {

413 
tifm
->
Êag
 = 
CFG_NOT_FLUSHED
;

414 
	`vosHashF‹EachDo
(
tifm
->
moduÀs
, 
vosC⁄figFlushModuÀRe£t
);

416 
	}
}

417 
	$vosC⁄figFlushRe£t
(
CFG_DOMAIN_E
 
domaö
)

419 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
domaö
])

421 
	`vosHashF‹EachDo
(
g_p°cfgdb
->
p°C⁄figD©aba£
[
domaö
], 
vosC⁄figFlushIfRe£t
);

423 
	}
}

425 
	$vosC⁄figFlushKeyAµíd
(* 
key
,* 
vÆue
, 
FILE
 *
°ªam
)

427 
CFG_KEY_DATA_t
 *
tkey
 = (CFG_KEY_DATA_à*)
vÆue
;

428 i‡(
tkey
 &&Åkey->
Êag
 =
CFG_NOT_FLUSHED
) {

429 
	`Ârötf
(
°ªam
, " %s=%s\n", (*)
key
, (*)
tkey
->
d©a
);

430 
tkey
->
Êag
 = 
CFG_FLUSHED
;

432 
	}
}

434 
	$vosC⁄figFlushSe˘i⁄Aµíd
(* 
key
,* 
vÆue
, 
FILE
 *
°ªam
)

436 
CFG_SECTION_DATA_t
 *
d©a
 = (CFG_SECTION_DATA_à*)
vÆue
;

437 i‡(
d©a
 && d©a->
Êag
 =
CFG_NOT_FLUSHED
) {

438 
d©a
->
Êag
 = 
CFG_FLUSHED
;

439 
	`Ârötf
(
°ªam
, " #%s\n", (*)
key
);

440 
	`vosHashF‹EachDoCb
(
d©a
->
keys
,

441 (
FUNCPTR
)
vosC⁄figFlushKeyAµíd
, ()
°ªam
, 4, 5, 6, 7, 8);

443 
	}
}

444 
	$vosC⁄figFlushModuÀAµíd
(* 
key
,* 
vÆue
, 
FILE
 *
°ªam
)

446 
CFG_MODULE_DATA_t
 *
d©a
 = (CFG_MODULE_DATA_à*)
vÆue
;

447 i‡(
d©a
 && d©a->
Êag
 =
CFG_NOT_FLUSHED
)

449 
d©a
->
Êag
 = 
CFG_FLUSHED
;

450 
	`Ârötf
(
°ªam
, " @%s\n", (*)
key
);

451 
	`vosHashF‹EachDoCb
(
d©a
->
£˘i⁄s
,

452 (
FUNCPTR
)
vosC⁄figFlushSe˘i⁄Aµíd
, ()
°ªam
, 4, 5, 6, 7, 8);

454 
	}
}

455 
	$vosC⁄figFlushIfmAµíd
(* 
key
,* 
vÆue
, 
FILE
 *
°ªam
)

457 
CFG_IFM_DATA_t
 *
d©a
 = (CFG_IFM_DATA_à*)
vÆue
;

458 i‡(
d©a
 && d©a->
Êag
 =
CFG_NOT_FLUSHED
)

460 
d©a
->
Êag
 = 
CFG_FLUSHED
;

461 
	`Ârötf
(
°ªam
, "$%s\n", (*)
key
);

462 
	`vosHashF‹EachDoCb
(
d©a
->
moduÀs
,

463 (
FUNCPTR
)
vosC⁄figFlushModuÀAµíd
, ()
°ªam
, 4, 5, 6, 7, 8);

465 
	}
}

466 
	$__≠≥nd_md5
(*
‹gfûe
,*
md5fûe
)

468 
cmd
[64] = {0};

469 
ªt
 = 0;

470 
	`•rötf
(
cmd
,"md5sum %†> %s",
‹gfûe
, 
md5fûe
);

471 if(0 > 
	`sy°em
(
cmd
))

475 
	`•rötf
(
cmd
,"ˇà%†>> %s",
‹gfûe
,
md5fûe
 );

477 
ªt
 = 
	`sy°em
(
cmd
);

479 if((
ªt
>=0Ë&& 
	`WIFEXITED
(ret))

481 if(
EXIT_SUCCESS
 =
	`WEXITSTATUS
(
ªt
))

486 
	`ªmove
(
md5fûe
);

488 
	}
}

490 
	$vosC⁄figFlush
(
CFG_DOMAIN_E
 
íDomaö
,
CHAR
 *
pP©h
)

492 
FILE
 *
Â
=
NULL
;

493 
iRë
=0;

494 
szCmd
[1024];

495 if(
pP©h
==
NULL
)

499 if((
Â
=
	`f›í
(
pP©h
,"w+"))==
NULL
)

503 
	`f˛o£
(
Â
);

504 
Â
=
	`f›í
(
CONFIG_TMP_FILE
,"w+");

505 if(
Â
==
NULL
)

509 
	`Ârötf
(
Â
,"%s/%s\n",
PRODUCT_NAME
,
CONFIG_CUST_DEVELOP_VER_STR
);

510 
	`__cfg_ªad_lock
(&
g_iLockfd
);

511 
	`vosC⁄figFlushRe£t
(
íDomaö
);

512 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
])

514 
	`vosHashF‹EachDoCb
(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
],

515 (
FUNCPTR
)
vosC⁄figFlushIfmAµíd
, ()
Â
, 4, 5, 6, 7, 8);

517 
	`__cfg_ªad_u∆ock
(
g_iLockfd
);

518 
	`f˛o£
(
Â
);

519 
iRë
=
	`__≠≥nd_md5
(
CONFIG_TMP_FILE
,
CONFIG_TMP2_FILE
);

520 if(0 !
iRë
)

522 
	`ªmove
(
CONFIG_TMP_FILE
);

525 
	`•rötf
(
szCmd
,"˝ -r‡%†%s",
CONFIG_TMP2_FILE
,
pP©h
);

526 
	`sy°em
(
szCmd
);

527 
	`ªmove
(
CONFIG_TMP2_FILE
);

530 
	}
}

532 
	$vosC⁄figShowF‹EachKey
(*
key
, *
vÆue
, 
fd
)

534 
CFG_KEY_DATA_t
 *
tkey
 = (CFG_KEY_DATA_à*)
vÆue
;

535 i‡(
tkey
 &&Åkey->
d©a
)

537 
	`¥ötf
(" %-20†: %s\r\n", (*)
key
, (*)
tkey
->
d©a
);

539 
	}
}

542 
	$vosC⁄figShowF‹EachSe˘i⁄
(*
key
, *
vÆue
, 
fd
)

544 
CFG_SECTION_DATA_t
 *
t£˘i⁄
 = (CFG_SECTION_DATA_à*)
vÆue
;

545 
	`¥ötf
(" #%s\r\n", (*)
key
);

546 i‡(
t£˘i⁄
 &&Å£˘i⁄->
keys
) {

547 
	`vosHashF‹EachDoCb
(
t£˘i⁄
->
keys
,

548 (
FUNCPTR
)
vosC⁄figShowF‹EachKey
, ()
fd
, 4, 5, 6, 7, 8);

550 
	}
}

552 
	$vosC⁄figShowF‹EachModuÀ
(*
key
, *
vÆue
, 
fd
)

554 
CFG_MODULE_DATA_t
 *
tmoduÀ
 = (CFG_MODULE_DATA_à*)
vÆue
;

557 
	`¥ötf
("@%s\r\n", ((*)
key
));

559 i‡(
tmoduÀ
 &&ÅmoduÀ->
£˘i⁄s
) {

560 
	`vosHashF‹EachDoCb
(
tmoduÀ
->
£˘i⁄s
,

561 (
FUNCPTR
)
vosC⁄figShowF‹EachSe˘i⁄
, ()
fd
, 4, 5, 6, 7, 8);

563 
	}
}

564 
	$vosC⁄figShowF‹EachIf
(*
key
, *
vÆue
, 
fd
)

566 ()
fd
;

567 
CFG_IFM_DATA_t
 *
tifm
=(CFG_IFM_DATA_t*)
vÆue
;

569 
	`¥ötf
("$%s\r\n", ((*)
key
));

571 i‡(
tifm
 &&Åifm->
moduÀs
)

573 
	`vosHashF‹EachDoCb
(
tifm
->
moduÀs
,

574 (
FUNCPTR
)
vosC⁄figShowF‹EachModuÀ
,()
fd
, 4, 5, 6, 7, 8);

577 
	}
}

596 
	$vosC⁄figShow
(
CFG_DOMAIN_E
 
íDomaö
,
fd
)

598 
	`__cfg_ªad_lock
(&
g_iLockfd
);

599 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
])

601 
	`vosHashF‹EachDoCb
(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
],

602 (
FUNCPTR
)
vosC⁄figShowF‹EachIf
, ()
fd
, 4, 5, 6, 7, 8);

604 
exô_œbñ
:

605 
	`__cfg_ªad_u∆ock
(
g_iLockfd
);

607 
	}
}

608 
	$vosC⁄figVÆueGë
(

609 
CFG_DOMAIN_E
 
íDomaö
,

610 *
ifm
,

611 *
‚ame
,

612 c⁄° *
£˘i⁄
,

613 *
key
,

614 *
deÁu…_vÆue
,

615 *
ªsu…
,

616 
ªéí
)

618 
CFG_IFM_DATA_t
 *
tifm
;

619 
CFG_MODULE_DATA_t
 *
tmoduÀ
;

620 
CFG_SECTION_DATA_t
 *
t£˘i⁄
;

621 
CFG_KEY_DATA_t
 *
tkey
;

622 *
vÆue
 = 
deÁu…_vÆue
;

623 
rv
=0;

625 
	`__cfg_ªad_lock
(&
g_iLockfd
);

626 if(
íDomaö
 >=
CONFIG_MAX_DOMAINS
)

628 
	`DBG_PRINTF
("domainÉrror,Åoo big!");

629 
rv
=-1;

630 
exô_œbñ
;

632 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

634 
	`DBG_PRINTF
("domain data isÉmpty!");

635 
rv
=-1;

636 
exô_œbñ
;

638 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

639 i‡(
tifm
 =
NULL
)

641 
	`DBG_PRINTF
("hash ifmÉrror!");

642 
rv
=-1;

643 
exô_œbñ
;

646 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

647 i‡(
tmoduÀ
 =
NULL
)

649 
	`DBG_PRINTF
("hash fnameÉrror!");

650 
rv
=-1;

651 
exô_œbñ
;

654 
t£˘i⁄
 = (
CFG_SECTION_DATA_t
 *)
	`vosHashVÆue
((*)
£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

655 i‡(
t£˘i⁄
 =
NULL
)

657 
	`DBG_PRINTF
("hash sectionÉrror!");

658 
rv
=-1;

659 
exô_œbñ
;

662 
tkey
 = (
CFG_KEY_DATA_t
 *)
	`vosHashVÆue
(
key
, 
t£˘i⁄
->
keys
);

663 i‡(
tkey
 =
NULL
)

665 
	`DBG_PRINTF
("hash keyÉrror!");

666 
rv
=-1;

667 
exô_œbñ
;

670 i‡(
tkey
->
d©a
 =
NULL
)

672 
	`DBG_PRINTF
("tkey->data is NULL!");

673 
rv
=-1;

674 
exô_œbñ
;

677 
vÆue
 = 
tkey
->
d©a
;

679 
exô_œbñ
:

680 if((
vÆue
!=
NULL
)&&(
	`°æí
(vÆue)<=(
ªéí
-1)))

682 
	`°r˝y
(
ªsu…
,
vÆue
);

686 
rv
=-1;

688 
	`__cfg_ªad_u∆ock
(
g_iLockfd
);

689  
rv
;

690 
	}
}

692 
	$vosC⁄figVÆueSë
(

693 
CFG_DOMAIN_E
 
íDomaö
,

694 *
ifm
,

695 *
‚ame
,

696 c⁄° *
£˘i⁄
,

697 *
key
,

698 c⁄° *
vÆue
)

700 
CFG_IFM_DATA_t
 *
tifm
;

701 
CFG_MODULE_DATA_t
 *
tmoduÀ
;

702 
CFG_SECTION_DATA_t
 *
t£˘i⁄
;

703 
CFG_KEY_DATA_t
 *
tkey
;

704 
rv
 = 0;

705 *
hashkey
=
NULL
;

708 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

709 if(
íDomaö
 >=
CONFIG_MAX_DOMAINS
)

711 
rv
 = -1;

712 
exô_œbñ
;

715 if((
	`isMa°î
()!=
TESTER
)&&(isMa°î()!=
MASTER
))

717 
rv
 = -1;

718 
exô_œbñ
;

721 if(
ifm
==
NULL
 || 
‚ame
==NULL || 
£˘i⁄
 == NULL

722 || 
key
==
NULL
)

724 
rv
 = -1;

725 
exô_œbñ
;

727 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

729 
rv
 = -1;

730 
exô_œbñ
;

732 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

733 if(
tifm
==
NULL
)

736 
tifm
 = 
	`vosAŒoc
((
CFG_IFM_DATA_t
));

737 
	`ASSERT
(
tifm
 !
NULL
, "Out of memory!!!");

738 i‡(
NULL
 =
tifm
)

740 
rv
 = -1;

741 
exô_œbñ
;

743 
tifm
->
moduÀs
=
	`vosHashCª©e
(
vosSåögHash
,
vosEquÆSåög
,
vosC⁄figIfDe°roy
,0);

744 
hashkey
=
	`vosAŒoc
(
	`°æí
(
ifm
)+1);

745 if(
hashkey
==
NULL
)

747 
rv
 = -1;

748 
exô_œbñ
;

750 
	`°r˝y
(
hashkey
,
ifm
);

751 
	`vosHashIn£π
(
hashkey
, 
tifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

754 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

755 i‡(
tmoduÀ
 =
NULL
) {

756 
tmoduÀ
 = 
	`vosAŒoc
((
CFG_MODULE_DATA_t
));

757 
	`ASSERT
(
tmoduÀ
 !
NULL
, "Out of memory!!!");

758 i‡(
NULL
 =
tmoduÀ
)

760 
rv
 = -1;

761 
exô_œbñ
;

763 
tmoduÀ
->
£˘i⁄s
 = 
	`vosHashCª©e
(
vosSåögHash
, 
vosEquÆSåög
, 
vosC⁄figSe˘i⁄De°roy
, 0);

765 
hashkey
=
	`vosAŒoc
(
	`°æí
(
‚ame
)+1);

766 if(
hashkey
==
NULL
)

768 
rv
 = -1;

769 
exô_œbñ
;

771 
	`°r˝y
(
hashkey
,
‚ame
);

772 
	`vosHashIn£π
(
hashkey
, 
tmoduÀ
, 
tifm
->
moduÀs
);

775 
t£˘i⁄
 = (
CFG_SECTION_DATA_t
 *)
	`vosHashVÆue
((*)
£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

776 i‡(
t£˘i⁄
 =
NULL
)

778 
t£˘i⁄
 = 
	`vosAŒoc
((
CFG_SECTION_DATA_t
));

779 
	`ASSERT
(
t£˘i⁄
 !
NULL
, "Out of memory!!!");

781 i‡(
NULL
 =
t£˘i⁄
)

783 
rv
 = -1;

784 
exô_œbñ
;

787 
t£˘i⁄
->
keys
 = 
	`vosHashCª©e
(
vosSåögHash
, 
vosEquÆSåög
, 
vosC⁄figKeyDe°roy
, 0);

788 
t£˘i⁄
->
Êag
 = 
CFG_NOT_FLUSHED
;

789 
hashkey
=
	`vosAŒoc
(
	`°æí
(
£˘i⁄
)+1);

790 if(
hashkey
==
NULL
)

792 
rv
 = -1;

793 
exô_œbñ
;

795 
	`°r˝y
(
hashkey
,
£˘i⁄
);

796 
	`vosHashIn£π
(
hashkey
, 
t£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

798 
tkey
 = (
CFG_KEY_DATA_t
 *)
	`vosHashVÆue
((*)
key
, 
t£˘i⁄
->
keys
);

799 if(
tkey
==
NULL
)

801 
tkey
 = 
	`vosAŒoc
((
CFG_KEY_DATA_t
));

802 
	`ASSERT
(
t£˘i⁄
 !
NULL
, "Out of memory!!!");

803 i‡(
NULL
 =
tkey
)

805 
rv
 = -1;

806 
exô_œbñ
;

808 
hashkey
=
	`vosAŒoc
(
	`°æí
(
vÆue
)+1);

809 if(
hashkey
==
NULL
)

811 
rv
 = -1;

812 
exô_œbñ
;

814 
	`°r˝y
(
hashkey
,
vÆue
);

815 
tkey
->
d©a
 = 
hashkey
;

816 
tkey
->
Êag
 = 
CFG_NOT_FLUSHED
;

817 
hashkey
=
	`vosAŒoc
(
	`°æí
(
key
)+1);

818 if(
hashkey
==
NULL
)

820 
rv
 = -1;

821 
exô_œbñ
;

823 
	`°r˝y
(
hashkey
,
key
);

824 
	`vosHashIn£π
(
hashkey
, 
tkey
, 
t£˘i⁄
->
keys
);

828 if(
tkey
->
d©a
!=
NULL
)

830 
	`vosFªe
(
tkey
->
d©a
);

832 
hashkey
=
	`vosAŒoc
(
	`°æí
(
vÆue
)+1);

833 if(
hashkey
==
NULL
)

835 
rv
 = -1;

836 
exô_œbñ
;

838 
	`°r˝y
(
hashkey
,
vÆue
);

839 
tkey
->
d©a
=
hashkey
;

842 
exô_œbñ
:

843 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

844  
rv
;

845 
	}
}

847 
	$vosC⁄figDomaöDñëe
(
CFG_DOMAIN_E
 
íDomaö
)

849 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

850 
	`vosHashFªe
(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

851 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]=
	`vosHashCª©e
(

852 
vosSåögHash
,

853 
vosEquÆSåög
,

854 
vosC⁄figIfDe°roy
,

856 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

857 
	}
}

859 
	$vosC⁄figIfDñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
)

861 
CFG_IFM_DATA_t
 *
tifm
=
NULL
;

862 
rv
 = 0;

864 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

866 if(
íDomaö
>=
CONFIG_MAX_DOMAINS
)

868 
rv
 = -1;

869 
exô_œbñ
;

872 if–
ifm
==
NULL
)

874 
rv
 = -1;

875 
exô_œbñ
;

877 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

879 
rv
 = -1;

880 
exô_œbñ
;

882 
	`vosHashRemove
((*)
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

883 
exô_œbñ
:

884 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

885  
rv
;

886 
	}
}

895 
	$vosC⁄figModuÀDñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
,*
‚ame
)

897 
CFG_IFM_DATA_t
 *
tifm
=
NULL
;

898 
CFG_MODULE_DATA_t
 *
tmoduÀ
;

899 
rv
 = 0;

901 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

903 if(
íDomaö
>=
CONFIG_MAX_DOMAINS
)

905 
rv
 = -1;

906 
exô_œbñ
;

909 if(
‚ame
==
NULL
 || 
ifm
==NULL)

911 
rv
 = -1;

912 
exô_œbñ
;

914 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

916 
rv
 = -1;

917 
exô_œbñ
;

921 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

922 i‡(
tifm
 =
NULL
)

924 
rv
 = -1;

925 
exô_œbñ
;

927 
	`vosHashRemove
((*)
‚ame
, 
tifm
->
moduÀs
);

929 
exô_œbñ
:

930 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

931  
rv
;

932 
	}
}

934 
	$vosC⁄figSe˘i⁄Dñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
,*
‚ame
, c⁄° *
£˘i⁄
)

936 
CFG_IFM_DATA_t
 *
tifm
=
NULL
;

937 
CFG_MODULE_DATA_t
 *
tmoduÀ
;

938 
CFG_SECTION_DATA_t
 *
t£˘i⁄
;

939 
rv
 = 0;

941 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

943 if(
íDomaö
>=
CONFIG_MAX_DOMAINS
)

945 
rv
 = -1;

946 
exô_œbñ
;

949 if(
‚ame
==
NULL
 || 
£˘i⁄
==NULL || 
ifm
==NULL)

951 
rv
 = -1;

952 
exô_œbñ
;

954 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

956 
rv
 = -1;

957 
exô_œbñ
;

959 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

960 i‡(
tifm
 =
NULL
)

962 
rv
 = -1;

963 
exô_œbñ
;

966 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

967 i‡(
tmoduÀ
 =
NULL
)

969 
rv
 = -1;

970 
exô_œbñ
;

973 
	`vosHashRemove
((*)
£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

975 
exô_œbñ
:

976 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

977  
rv
;

978 
	}
}

980 
	$vosC⁄figKeyDñëe
(
CFG_DOMAIN_E
 
íDomaö
,* 
ifm
,*
‚ame
, *
£˘i⁄
, *
key
)

982 
CFG_IFM_DATA_t
 *
tifm
=
NULL
;

983 
CFG_MODULE_DATA_t
 *
tmoduÀ
=
NULL
;

984 
CFG_SECTION_DATA_t
 *
t£˘i⁄
=
NULL
;

985 
rv
 = 0;

987 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

989 if(
íDomaö
>=
CONFIG_MAX_DOMAINS
)

991 
rv
 = -1;

992 
exô_œbñ
;

994 if(
‚ame
==
NULL
 || 
£˘i⁄
==NULL || 
key
==NULL||
ifm
==NULL)

996 
rv
 = -1;

997 
exô_œbñ
;

999 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

1001 
rv
 = -1;

1002 
exô_œbñ
;

1004 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

1005 i‡(
tifm
 =
NULL
)

1007 
rv
 = -1;

1008 
exô_œbñ
;

1011 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

1012 i‡(
tmoduÀ
 =
NULL
)

1014 
rv
 = -1;

1015 
exô_œbñ
;

1018 
t£˘i⁄
 = (
CFG_SECTION_DATA_t
 *)
	`vosHashVÆue
(
£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

1019 i‡(
t£˘i⁄
 =
NULL
)

1021 
rv
 = -1;

1022 
exô_œbñ
;

1025 
	`vosHashRemove
((*)
key
, 
t£˘i⁄
->
keys
);

1027 
exô_œbñ
:

1028 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

1029  
rv
;

1030 
	}
}

1031 
	$vosC⁄figSe˘i⁄Cª©e
(

1032 
CFG_DOMAIN_E
 
íDomaö
,

1033 *
ifm
,

1034 *
‚ame
,

1035 c⁄° *
£˘i⁄
)

1037 
CFG_IFM_DATA_t
 *
tifm
=
NULL
;

1038 
CFG_MODULE_DATA_t
 *
tmoduÀ
=
NULL
;

1039 
CFG_SECTION_DATA_t
 *
t£˘i⁄
=
NULL
;

1040 
CFG_KEY_DATA_t
 *
tkey
=
NULL
;

1041 
rv
 = 0;

1042 *
hashkey
=
NULL
;

1043 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

1045 if(
íDomaö
 >=
CONFIG_MAX_DOMAINS
)

1047 
rv
 = -1;

1048 
exô_œbñ
;

1050 if(
ifm
==
NULL
 || 
‚ame
==NULL || 
£˘i⁄
 == NULL)

1052 
rv
 = -1;

1053 
exô_œbñ
;

1055 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

1057 
rv
 = -1;

1058 
exô_œbñ
;

1060 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

1061 if(
tifm
==
NULL
)

1063 
tifm
 = 
	`vosAŒoc
((
CFG_IFM_DATA_t
));

1064 
	`ASSERT
(
tifm
 !
NULL
, "Out of memory!!!");

1065 i‡(
NULL
 =
tifm
)

1067 
rv
 = -1;

1068 
exô_œbñ
;

1070 
tifm
->
moduÀs
=
	`vosHashCª©e
(
vosSåögHash
,
vosEquÆSåög
,
vosC⁄figIfDe°roy
,0);

1071 
hashkey
=
	`vosAŒoc
(
	`°æí
(
ifm
)+1);

1072 if(
hashkey
==
NULL
)

1074 
rv
 = -1;

1075 
exô_œbñ
;

1077 
	`°r˝y
(
hashkey
,
ifm
);

1078 
	`vosHashIn£π
(
hashkey
, 
tifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

1081 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

1082 i‡(
tmoduÀ
 =
NULL
) {

1083 
tmoduÀ
 = 
	`vosAŒoc
((
CFG_MODULE_DATA_t
));

1084 
	`ASSERT
(
tmoduÀ
 !
NULL
, "Out of memory!!!");

1086 i‡(
tmoduÀ
 =
NULL
) {

1087 
rv
 = -1;

1088 
exô_œbñ
;

1090 
tmoduÀ
->
£˘i⁄s
 = 
	`vosHashCª©e
(
vosSåögHash
, 
vosEquÆSåög
, 
vosC⁄figSe˘i⁄De°roy
, 0);

1091 
hashkey
=
	`vosAŒoc
(
	`°æí
(
‚ame
)+1);

1092 if(
hashkey
==
NULL
)

1094 
rv
 = -1;

1095 
exô_œbñ
;

1097 
	`°r˝y
(
hashkey
,
‚ame
);

1098 
	`vosHashIn£π
(
hashkey
, 
tmoduÀ
, 
tifm
->
moduÀs
);

1101 
t£˘i⁄
 = (
CFG_SECTION_DATA_t
 *)
	`vosHashVÆue
((*)
£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

1102 i‡(
t£˘i⁄
 =
NULL
)

1104 
t£˘i⁄
 = 
	`vosAŒoc
((
CFG_SECTION_DATA_t
));

1105 
	`ASSERT
(
t£˘i⁄
 !
NULL
, "Out of memory!!!");

1107 i‡(
t£˘i⁄
 =
NULL
) {

1108 
rv
 = -1;

1109 
exô_œbñ
;

1111 
t£˘i⁄
->
keys
 = 
	`vosHashCª©e
(
vosSåögHash
, 
vosEquÆSåög
, 
vosC⁄figKeyDe°roy
, 0);

1112 
t£˘i⁄
->
Êag
 = 
CFG_NOT_FLUSHED
;

1113 
hashkey
=
	`vosAŒoc
(
	`°æí
(
£˘i⁄
)+1);

1114 if(
hashkey
==
NULL
)

1116 
rv
 = -1;

1117 
exô_œbñ
;

1119 
	`°r˝y
(
hashkey
,
£˘i⁄
);

1120 
	`vosHashIn£π
(
hashkey
, 
t£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

1123 
exô_œbñ
:

1124 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

1125  
rv
;

1126 
	}
}

1129 
	$vosC⁄figSe˘i⁄GëByIndex
–
CFG_DOMAIN_E
 
íDomaö
,*
ifm
,*
‚ame
, 
ödex
, **
£˘i⁄
)

1131 
CFG_IFM_DATA_t
 *
tifm
;

1132 
CFG_MODULE_DATA_t
 *
tmoduÀ
;

1133 
CFG_SECTION_DATA_t
 *
t£˘i⁄
 = 
NULL
;

1134 
rv
 = -1;

1137 
	`__cfg_ªad_lock
(&
g_iLockfd
);

1138 if(
íDomaö
 >=
CONFIG_MAX_DOMAINS
)

1140 
exô_œbñ
;

1142 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

1144 
exô_œbñ
;

1146 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

1147 i‡(
tifm
 =
NULL
)

1149 
exô_œbñ
;

1152 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

1153 i‡(
tmoduÀ
 =
NULL
)

1155 
exô_œbñ
;

1158 
rv
 = 
	`vosHashVÆueGëByIndex
(
ödex
, 
tmoduÀ
->
£˘i⁄s
, (**)
£˘i⁄
, (**)&
t£˘i⁄
);

1160 
exô_œbñ
:

1161 
	`__cfg_ªad_u∆ock
(
g_iLockfd
);

1162  
rv
;

1163 
	}
}

1165 
	$vosC⁄figKeyGëByIndex
(
CFG_DOMAIN_E
 
íDomaö
,*
ifm
,

1166 *
‚ame
,

1167 *
£˘i⁄
,

1168 
ödex
,

1169 **
key
,

1170 **
vÆue
)

1172 
CFG_IFM_DATA_t
 *
tifm
;

1173 
CFG_MODULE_DATA_t
 *
tmoduÀ
;

1174 
CFG_SECTION_DATA_t
 *
t£˘i⁄
;

1175 
CFG_KEY_DATA_t
 *
tkey
;

1176 
rv
 = -1;

1178 
	`__cfg_ªad_lock
(&
g_iLockfd
);

1180 if(
íDomaö
 >=
CONFIG_MAX_DOMAINS
)

1182 
exô_œbñ
;

1184 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
] =
NULL
)

1186 
exô_œbñ
;

1188 
tifm
 = (
CFG_IFM_DATA_t
 *)
	`vosHashVÆue
(
ifm
, 
g_p°cfgdb
->
p°C⁄figD©aba£
[
íDomaö
]);

1189 i‡(
tifm
 =
NULL
)

1191 
exô_œbñ
;

1195 
tmoduÀ
 = (
CFG_MODULE_DATA_t
 *)
	`vosHashVÆue
(
‚ame
, 
tifm
->
moduÀs
);

1196 i‡(
tmoduÀ
 =
NULL
)

1198 
exô_œbñ
;

1201 
t£˘i⁄
 = (
CFG_SECTION_DATA_t
 *)
	`vosHashVÆue
(
£˘i⁄
, 
tmoduÀ
->
£˘i⁄s
);

1202 i‡(
t£˘i⁄
 =
NULL
)

1204 
exô_œbñ
;

1207 
rv
 = 
	`vosHashVÆueGëByIndex
(
ödex
, 
t£˘i⁄
->
keys
, (**)
key
, (**)
vÆue
);

1209 
exô_œbñ
:

1210 
	`__cfg_ªad_u∆ock
(
g_iLockfd
);

1211  
rv
;

1212 
	}
}

1213 
	$vosC⁄figOidDe°roy
(*
key
, *
vÆue
)

1215 *
k
 = 
key
;

1216 
CFG_OID_REG_t
 *
v
=
vÆue
;

1217 
	`vosFªe
(
k
);

1219 
	`vosFªe
(
v
);

1220 
	}
}

1221 
	#ISHIGHER
(
a
,
b
Ë(◊)<(b))

	)

1222 
	#ISLOWER
(
a
,
b
Ë(◊)>(b))

	)

1223 
	#ISEQUAL
(
a
,
b
Ë(◊)==(b))

	)

1225 
	$vosc⁄figS‹tOidTbl
()

1227 
i
 =0;

1228 
rv
=0;

1229 
CFG_OID_REG_t
 *
tOid
=
NULL
;

1230 
CFG_OID_REG_t
 *
p°Pos
 = 
NULL
;

1231 
CFG_OID_REG_t
 *
p°Next
 = 
NULL
;

1232 *
hashkey
=
NULL
;

1234 if(
g_p°OidRegHashTbl
==
NULL
)

1235 
g_p°OidRegHashTbl
=
	`vosHashCª©e
(
vosSåögHash
,
vosEquÆSåög
,
vosC⁄figOidDe°roy
,0);

1237 
i
=0;i<((
g_cfg_oid_tbl
)/(g_cfg_oid_tbl[0]));i++)

1241 
tOid
 = 
	`mÆloc
((
CFG_OID_REG_t
));

1242 
	`ASSERT
(
tOid
 !
NULL
, "Out of memory!!!");

1244 i‡(
tOid
 =
NULL
) {

1245 
rv
 = -1;

1246 
exô_œbñ
;

1248 
tOid
->
d©a
=&
g_cfg_oid_tbl
[
i
];

1249 
hashkey
=
	`mÆloc
(
	`°æí
(
g_cfg_oid_tbl
[
i
].
«me
)+1);

1250 if(
hashkey
==
NULL
)

1252 
rv
 = -1;

1253 
exô_œbñ
;

1255 
	`°r˝y
(
hashkey
,
g_cfg_oid_tbl
[
i
].
«me
);

1256 
	`vosHashIn£π
(
hashkey
, 
tOid
, 
g_p°OidRegHashTbl
);

1257 
tOid
 = 
	`mÆloc
((
CFG_OID_REG_t
));

1258 i‡(
tOid
 =
NULL
) {

1259 
rv
 = -1;

1260 
exô_œbñ
;

1263 
tOid
->
d©a
=&
g_cfg_oid_tbl
[
i
];

1264 if(
	`li°_em±y
(&
g_OidRegLi°
))

1266 
	`li°_add_èû
(&(
tOid
->
li°
),&
g_OidRegLi°
);

1270 
	`li°_f‹_óch_íåy_ß„
(
p°Pos
,
p°Next
,&
g_OidRegLi°
,
li°
)

1272 if(
	`ISLOWER
(
tOid
->
d©a
->
uiCmoid
,
p°Pos
->d©a->uiCmoid)||
	`ISEQUAL
(tOid->data->uiCmoid,pstPos->data->uiCmoid))

1274 if–&
p°Next
->
li°
 !&
g_OidRegLi°
)

1280 
	`li°_add
(&(
tOid
->
li°
),&(
p°Pos
->list));

1283 if(
	`ISHIGHER
(
tOid
->
d©a
->
uiCmoid
,
p°Pos
->data->uiCmoid))

1286 
	`li°_add_èû
(&(
tOid
->
li°
),&(
p°Pos
->list));

1292 
exô_œbñ
:

1293  
rv
;

1294 
	}
}

1297 
	gg_szTe°Sh¨eBuf
[];

1298 
	$Cfgöô
(
Êag
)

1300 
iShmId
 = 0;

1301 *
pSèπ
 = ( *)
g_szTe°Sh¨eBuf
;

1302 
ma°î_Êag
=
Êag
;

1303 
g_iLockfd
=
	`›í
(
VOSCONFIG_SHMLOCKFILE
, 
O_RDWR
|
O_CREAT
, 
S_IRUSR
|
S_IWUSR
);

1304 if(
g_iLockfd
<0)

1309 
iShmId
 = 
	`shmgë
(
VOSCFG_SHM_KEY
,
VOSCFG_SHM_SIZE
,
IPC_CREAT
);

1310 if(-1 =
iShmId
)

1312 
iShmId
 = 
	`shmgë
(
VOSCFG_SHM_KEY
,0,0);

1313 if(-1 =
iShmId
)

1315 
	`˛o£
(
g_iLockfd
);

1319 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

1320 
g_p°cfgdb
 =(
CFG_DATABASE_S
 *)
	`shm©
(
iShmId
,
pSèπ
,0);

1321 if(
	`isMa°î
()==
MASTER
||isMa°î()==
TESTER
)

1323 
i
=0;

1324 
	`mem£t
(
pSèπ
,0,
VOSCFG_SHM_SIZE
);

1325 
	`poﬁ_¸óã
((*)((*)
pSèπ
+(
CFG_DATABASE_S
)),(
VOSCFG_SHM_SIZE
-(CFG_DATABASE_S)));

1326 
i
=
CONFIG_NORMAL
;i<
CONFIG_MAX_DOMAINS
;i++)

1328 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
i
]==
NULL
)

1330 
g_p°cfgdb
->
p°C⁄figD©aba£
[
i
] = 
	`vosHashCª©e
(

1331 
vosSåögHash
,

1332 
vosEquÆSåög
,

1333 
vosC⁄figIfDe°roy
,

1339 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

1341 
	`vosc⁄figS‹tOidTbl
();

1343 
	}
}

1344 #unde‡
CONFIG_CHECK_VER


1347 
	$cfg_cfgfûe_check_md5
(*
öfûe
, *
outfûe
)

1349 
FILE
* 
Âö
 = 
NULL
;

1350 
FILE
* 
Âout
 = 
NULL
;

1351 
hash_vÆ
[64]= {0};

1352 
hash_vÆ_√w
[64]={0};

1353 
buf
[2048] = {0};

1354 
cmd
[64] = {0};

1356 
Âö
 = 
	`f›í
(
öfûe
,"r");

1357 if(
NULL
 =
Âö
)

1361 
Âout
 = 
	`f›í
(
outfûe
,"w");

1362 if(
NULL
 =
Âout
)

1364 
	`f˛o£
(
Âö
);

1368 
NULL
 !
	`fgës
(
hash_vÆ
,64,
Âö
))

1370 if((
hash_vÆ
[0] != '\0') && (hash_val[0] != '\r') && (hash_val[0] != '\n'))

1376 
NULL
 !
	`fgës
(
buf
,2048,
Âö
))

1378 if(
EOF
 =
	`Âuts
(
buf
,
Âout
))

1380 
	`f˛o£
(
Âö
);

1381 
	`f˛o£
(
Âout
);

1385 
	`f˛o£
(
Âö
);

1386 
	`f˛o£
(
Âout
);

1387 
	`•rötf
(
cmd
,"md5sum %†> "
CONFIG_MD5_TMPFILE
,
outfûe
);

1388 if(0 > 
	`sy°em
(
cmd
))

1390 
	`u∆ök
(
CONFIG_MD5_TMPFILE
);

1393 
Âö
 = 
	`f›í
(
CONFIG_MD5_TMPFILE
,"r");

1394 if(
NULL
 =
Âö
)

1396 
	`u∆ök
(
CONFIG_MD5_TMPFILE
);

1399 
	`fgës
(
hash_vÆ_√w
,64,
Âö
);

1400 
	`f˛o£
(
Âö
);

1401 
	`u∆ök
(
CONFIG_MD5_TMPFILE
);

1402 if(0 !
	`°∫cmp
(
hash_vÆ
,
hash_vÆ_√w
, 
MD5_LEN
))

1407 
	}
}

1409 
	$__cfg_checkfûe
–* 
pP©h
)

1411 
FILE
 *
Â
=
NULL
;

1412 
szBuf
[1024];

1413 *
p
=
NULL
;

1414 
szMd5
[256];

1415 
i
=0;

1416 *
pcTemp
 = 
NULL
;

1417 #ifde‡
CONFIG_CHECK_VER


1418 *
tmp
=
NULL
;

1420 if(
pP©h
==
NULL
)

1425 if(
	`°rcmp
(
pP©h
,
CONFIG_DEFAULTFILE
)==0)

1429 
Â
=
	`f›í
(
pP©h
,"r");

1430 if(
Â
==
NULL
)

1434 
	`mem£t
(
szBuf
,0,(szBuf));

1436 
p
=
	`fgës
(
szBuf
,(szBuf),
Â
);

1437 if(
p
==
NULL
)

1439 
	`f˛o£
(
Â
);

1442 
	`mem£t
(
szMd5
,0,(szMd5));

1443 
szBuf
[
i
]==' '||szBuf[i]==
TAB
)

1445 
i
++;

1447 
pcTemp
=
szBuf
+
i
;

1448  *
pcTemp
!='\r' && *pcTemp!= '\n' && *pcTemp!='\0' )

1450 
pcTemp
++;

1452 *
pcTemp
='\0';

1453 
	`°r˝y
(
szMd5
, 
szBuf
+
i
);

1454 
	`mem£t
(
szBuf
,0,(szBuf));

1455 
p
=
	`fgës
(
szBuf
,(szBuf),
Â
);

1456 if(
p
==
NULL
)

1459 
	`f˛o£
(
Â
);

1463 
p
=
	`°rchr
(
szBuf
,'/');

1464 if(
p
==
NULL
)

1466 
	`f˛o£
(
Â
);

1469 
	`f˛o£
(
Â
);

1470 if((0 !
	`°rcmp
(
szMd5
,"nomd5"))&&(0!=
	`cfg_cfgfûe_check_md5
(
pP©h
,
CONFIG_TMP_FILE
)))

1472 
	`ªmove
(
CONFIG_TMP_FILE
);

1475 
	`ªmove
(
CONFIG_TMP_FILE
);

1476 *
p
='\0';

1477 
p
++;

1478 if(
	`°rcmp
(
PRODUCT_NAME
,
szBuf
)!=0)

1482 #ifde‡
CONFIG_CHECK_VER


1483 
tmp
=
p
;

1484  *
tmp
!='\r' && *tmp!= '\n' && *tmp!='\0' )

1486 
tmp
++;

1488 *
tmp
='\0';

1490 if(0<
	`__cfgvî_cmp
(
p
,
CONFIG_CUST_DEVELOP_VER_STR
))

1497 
	}
}

1499 
	$vosC⁄figP¨£rFûe
(* 
pP©h
,
CFG_DOMAIN_E
 
íDomaö
)

1501 
FILE
 *
Â
=
NULL
;

1502 
szBuf
[2048]={0};

1503 
szVÆ
[1024]={0};

1504 *
pcRë
;

1505 
iRë
=-1;

1506 
födmoduÀ
=
FALSE
;

1507 
föd£˘i⁄
=
FALSE
;

1508 
‰ìödex
=-1;

1509 
curkeyoid
=0;

1510 
cur£coid
=0;

1511 
curmidoid
=0;

1512 *
tmp
=
NULL
;

1513 
i
=0;

1514 
curif
[128]={0};

1515 
curmoduÀ
[128]={0};

1516 
cur£˘i⁄
[128]={0};

1517 
curkey
[128]={0};

1519 if(
pP©h
 =
NULL
)

1524 if(0 !=
	`__cfg_checkfûe
(
pP©h
))

1526 
	`DBG_PRINTF
("check %†Áûd!\n", 
pP©h
);

1531 
Â
=
	`f›í
(
pP©h
,"r");

1532 if(
Â
 =
NULL
)

1534 
	`DBG_PRINTF
("›í %†Áûd!\n", 
pP©h
);

1537 
	`mem£t
(
szBuf
,0,(szBuf));

1538 
	`mem£t
(
szVÆ
,0,(szVal));

1540 
pcRë
=
	`fgës
(
szBuf
,(szBuf),
Â
);

1541 if(
pcRë
==
NULL
)

1543 
	`DBG_PRINTF
("get md5 faild!\n");

1544 
	`f˛o£
(
Â
);

1548 
pcRë
=
	`fgës
(
szBuf
,(szBuf),
Â
);

1549 if(
pcRë
==
NULL
)

1551 
	`DBG_PRINTF
("get version faild!\n");

1552 
	`f˛o£
(
Â
);

1555 
pcRë
=
	`fgës
(
szBuf
,(szBuf),
Â
);

1557 
pcRë
!=
NULL
)

1559 
i
=0;

1560 
szBuf
[
i
]==' '||szBuf[i]==
TAB
)

1562 
i
++;

1564 
szBuf
[
i
])

1567 
tmp
=
szBuf
+
i
+1;

1568  *
tmp
!='\r' && *tmp!= '\n' && *tmp!='\0' )

1570 
tmp
++;

1572 *
tmp
='\0';

1573 
	`mem£t
(
curif
,0,(curif));

1574 
	`°r˝y
(
curif
,(
szBuf
+
i
+1));

1575 
föd£˘i⁄
=
FALSE
;

1576 
födmoduÀ
=
FALSE
;

1579 
tmp
=
szBuf
+
i
+1;

1580  *
tmp
!='\r' && *tmp!= '\n' && *tmp!='\0' )

1582 
tmp
++;

1584 *
tmp
='\0';

1585 
	`mem£t
(
curmoduÀ
,0,(curmodule));

1586 
	`°r˝y
(
curmoduÀ
,(
szBuf
+
i
+1));

1587 if(-1==
	`vosC⁄figName2Oid
(
curmoduÀ
,&
curmidoid
))

1591 
födmoduÀ
=
TRUE
;

1594 
tmp
=
szBuf
+
i
+1;

1595  *
tmp
!='\r' && *tmp!= '\n' && *tmp!='\0' )

1597 
tmp
++;

1599 *
tmp
='\0';

1600 
	`mem£t
(
cur£˘i⁄
,0,(cursection));

1601 
	`°r˝y
(
cur£˘i⁄
,(
szBuf
+
i
+1));

1602 if(-1==
	`vosC⁄figName2Oid
(
cur£˘i⁄
,&
cur£coid
))

1606 if(
	`CONFIG_MID
(
cur£coid
)!=
curmidoid
)

1608 
	`DBG_PRINTF
("module oid unmatched!\n");

1609 
	`f˛o£
(
Â
);

1612 
föd£˘i⁄
=
TRUE
;

1615 if(
föd£˘i⁄
==
FALSE
 || 
födmoduÀ
==FALSE)

1617 
	`DBG_PRINTF
("module or sectionÇot found!\n");

1618 
	`f˛o£
(
Â
);

1623 *
p
=
NULL
;

1624 
p
=
	`°rchr
((
szBuf
+
i
),'=');

1625 if(
p
==
NULL
)

1627 
	`DBG_PRINTF
("miss keynameátÅheÜeft of = !\n");

1628 
	`f˛o£
(
Â
);

1631 *
p
='\0';

1632 if(-1==
	`vosC⁄figName2Oid
((
szBuf
+
i
),&
curkeyoid
))

1636 
	`°r˝y
(
curkey
,(
szBuf
+
i
));

1637 if(
	`CONFIG_MID_SECTION
(
curkeyoid
)!=
cur£coid
)

1639 
	`DBG_PRINTF
("section oid unmatched!");

1640 
	`f˛o£
(
Â
);

1643 
p
++;

1644 
tmp
=
p
;

1645  *
tmp
!='\r' && *tmp!= '\n' && *tmp!='\0' )

1647 
tmp
++;

1649 *
tmp
='\0';

1650 
	`mem£t
(
szVÆ
,0,(szVal));

1651 
	`°r˝y
(
szVÆ
,
p
);

1652 
	`vosC⁄figVÆueSë
(
íDomaö
,
curif
,
curmoduÀ
,
cur£˘i⁄
,
curkey
,
szVÆ
);

1657 
	`mem£t
(
szBuf
,0,(szBuf));

1658 
pcRë
=
	`fgës
(
szBuf
,(szBuf),
Â
);

1660 
	`f˛o£
(
Â
);

1662 
	}
}

1665 
	$vosC⁄figName2Oid
(* 
«me
,*
oid
)

1667 
CFG_OID_REG_t
 *
tOid
=
NULL
;

1668 
iLí
=0;

1669 
iDigô
=0,
i
=0;

1670 
uiNum
;

1671 
tm≤ame
[128];

1672 if(
«me
==
NULL
 || 
oid
==NULL)

1676 
iLí
 = ()
	`°æí
(
«me
);

1677 if(0 =
iLí
 )

1682 
iDigô
=0,
i
=1;i<=
CONFIG_IDX_HEXBIT
;i++,iDigit++)

1684 i‡(((
iLí
-
i
)<0Ë|| (!
	`isdigô
(
«me
[iLen-i])))

1689 if((
iLí
-
i
)<=0)

1693 if(
iDigô
>0)

1695 
uiNum
 = (
UINT
)
	`©oi
(
«me
+
iLí
-
iDigô
);

1696 if–(
uiNum
 < 
CONFIG_MIN_INDEX
Ë|| (uiNum > 
CONFIG_MAX_INDEX
))

1701 
	`mem£t
(
tm≤ame
,0,(tmpname));

1702 
	`°∫˝y
(
tm≤ame
,
«me
,
iLí
-
iDigô
);

1703 
tOid
=(
CFG_OID_REG_t
 *)
	`vosHashVÆue
(
tm≤ame
,
g_p°OidRegHashTbl
);

1704 if(
tOid
!=
NULL
)

1706 if((
iDigô
>0)&&(
tOid
->
d©a
->
íNode_ty≥
!=
CFG_OID_TYPE_TABLE
))

1710 *
oid
=
tOid
->
d©a
->
uiCmoid
;

1714 
	}
}

1715 
CFG_OID_REG_t
 * 
	$vosC⁄figOid2«me
(
oid
,* 
«me
,
«mñí
)

1717 
CFG_OID_REG_t
 *
p°Pos
 = 
NULL
;

1718 if(
«me
==
NULL
 || 
«mñí
==0)

1720  
NULL
;

1722 
	`li°_f‹_óch_íåy
(
p°Pos
,&
g_OidRegLi°
,
li°
)

1724 if(
p°Pos
->
d©a
->
uiCmoid
==
oid
)

1726 if(
	`°æí
(
p°Pos
->
d©a
->
«me
)<
«mñí
)

1728 
	`°r˝y
(
«me
,
p°Pos
->
d©a
->name);

1729  
p°Pos
;

1733  
NULL
;

1734 
	}
}

1738 
	#IF_DOMAIN_MASK
 0x7

	)

1741 
	#IF_DOMAIN
(
ifidx
Ë
	)
ifidx

1743 
	$ifödex2i‚ame
(
ifödex
,*
«me
,
«mñí
)

1745 if(
«mñí
==0||
«me
==
NULL
)

1750 
	`°r˝y
(
«me
,"root");

1752 
	}
}

1754 
	$ma°î_cfg_£tvÆ
(
ifödex
,
oid
,*
vÆ
)

1756 
i‚ame
[64]={0};

1757 
mid«me
[128]={0};

1758 
£˙ame
[128]={0};

1759 
tmp£˙ame
[128]={0};

1760 
key«me
[128]={0};

1761 
CFG_OID_REG_t
 *
p°Secöfo
 = 
NULL
;

1762 
CFG_OID_REG_t
 *
p°Keyöfo
 = 
NULL
;

1763 
vÆ_Àn
=0;

1764 
buf
[
OP_VOS_CONFIG_STR_MAX
]={0};

1766 if((
	`isMa°î
()!=
TESTER
)&&(isMa°î()!=
MASTER
))

1770 if(
vÆ
==
NULL
)

1774 if(0!=
	`ifödex2i‚ame
(
ifödex
,
i‚ame
,(ifname)))

1778 if(
	`vosC⁄figOid2«me
(
	`CONFIG_MID
(
oid
),
mid«me
,(mid«me))==
NULL
)

1782 if((
p°Secöfo
=
	`vosC⁄figOid2«me
(
	`CONFIG_MID_SECTION
(
oid
),
tmp£˙ame
,—mp£˙ame)))==
NULL
)

1786 if((
p°Keyöfo
=
	`vosC⁄figOid2«me
(
	`CONFIG_MID_SECTION_KEY
(
oid
),
key«me
,(key«me)))==
NULL
)

1790 if((
p°Secöfo
->
d©a
->
íNode_ty≥
==
CFG_OID_TYPE_TABLE
)&&((
	`CONFIG_INDEX
(
oid
)<
CONFIG_MIN_INDEX
)||(CONFIG_INDEX(oid)>
CONFIG_MAX_INDEX
)))

1794 if(
p°Secöfo
->
d©a
->
íNode_ty≥
==
CFG_OID_TYPE_TABLE
)

1795 
	`•rötf
(
£˙ame
,"%s%d",
tmp£˙ame
,
	`CONFIG_INDEX
(
oid
));

1797 
	`°r˝y
(
£˙ame
,
tmp£˙ame
);

1800  
p°Secöfo
->
d©a
->
ty≥
)

1802 
CFG_TYPE_STR
:

1803 
vÆ_Àn
 = 
	`°æí
(
vÆ
);

1804 if(
vÆ_Àn
>
OP_VOS_CONFIG_STR_MAX
)

1808 
	`°∫˝y
(
buf
,
vÆ
,
OP_VOS_CONFIG_STR_MAX
);

1810 
CFG_TYPE_INT
:

1811 
	`•rötf
(
buf
,"%u",
vÆ
);

1813 
CFG_TYPE_IPV4
:

1814 
	`öë_¡›
(
AF_INET
,
vÆ
,
buf
,(buf));

1816 
CFG_TYPE_IPV6
:

1817 
	`öë_¡›
(
AF_INET6
,
vÆ
,
buf
,(buf));

1824  
	`vosC⁄figVÆueSë
(
	`IF_DOMAIN
(
ifödex
),
i‚ame
,
mid«me
,
£˙ame
,
key«me
,
buf
);

1827 
	}
}

1828 
	$ma°î_cfg_dñ
(
ifödex
,
oid
)

1830 
i‚ame
[64]={0};

1831 
mid«me
[128]={0};

1832 
£˙ame
[128]={0};

1833 
tmp£˙ame
[128]={0};

1834 
CFG_OID_REG_t
 *
p°Secöfo
 = 
NULL
;

1835 
key«me
[128]={0};

1836 
CFG_OID_REG_t
 *
p°Keyöfo
 = 
NULL
;

1838 if((
	`isMa°î
()!=
TESTER
)&&(isMa°î()!=
MASTER
))

1842 if(0!=
	`ifödex2i‚ame
(
ifödex
,
i‚ame
,(ifname)))

1846 if(
	`IS_ROOTCONFIG
(
oid
))

1848 
	`vosC⁄figIfDñëe
(
	`IF_DOMAIN
(
ifödex
),
i‚ame
);

1851 if(
	`vosC⁄figOid2«me
(
	`CONFIG_MID
(
oid
),
mid«me
,(mid«me))==
NULL
)

1855 if(
	`IS_MIDCONFIG
(
oid
))

1857 
	`vosC⁄figModuÀDñëe
(
	`IF_DOMAIN
(
ifödex
),
i‚ame
,
mid«me
);

1860 if((
p°Secöfo
=
	`vosC⁄figOid2«me
(
	`CONFIG_MID_SECTION
(
oid
),
tmp£˙ame
,—mp£˙ame)))==
NULL
)

1864 if((
p°Secöfo
->
d©a
->
íNode_ty≥
==
CFG_OID_TYPE_TABLE
)&&((
	`CONFIG_INDEX
(
oid
)<
CONFIG_MIN_INDEX
)||(CONFIG_INDEX(oid)>
CONFIG_MAX_INDEX
)))

1868 if(
p°Secöfo
->
d©a
->
íNode_ty≥
==
CFG_OID_TYPE_TABLE
)

1869 
	`•rötf
(
£˙ame
,"%s%d",
tmp£˙ame
,
	`CONFIG_INDEX
(
oid
));

1871 
	`°r˝y
(
£˙ame
,
tmp£˙ame
);

1874 if(
	`IS_SECTIONCONFIG
(
oid
))

1877 
	`vosC⁄figSe˘i⁄Dñëe
(
	`IF_DOMAIN
(
ifödex
),
i‚ame
,
mid«me
,
£˙ame
);

1880 if((
p°Keyöfo
=
	`vosC⁄figOid2«me
(
	`CONFIG_MID_SECTION_KEY
(
oid
),
key«me
,(key«me)))==
NULL
)

1884 
	`vosC⁄figKeyDñëe
(
	`IF_DOMAIN
(
ifödex
),
i‚ame
,
mid«me
,
£˙ame
,
key«me
);

1885 
	}
}

1887 
	$cfg_gëvÆ
(
ifödex
,
oid
,*
vÆ
,* 
deÁu…_vÆ
,
ªéí
)

1889 
i‚ame
[64]={0};

1890 
mid«me
[128]={0};

1891 
£˙ame
[128]={0};

1892 
tmp£˙ame
[128]={0};

1893 
key«me
[128]={0};

1894 
CFG_OID_REG_t
 *
p°Secöfo
 = 
NULL
;

1895 
CFG_OID_REG_t
 *
p°Keyöfo
 = 
NULL
;

1896 
ªt
;

1897 
buf
[
OP_VOS_CONFIG_STR_MAX
]={0};

1899 if(
vÆ
==
NULL
)

1904 if(0!=
	`ifödex2i‚ame
(
ifödex
,
i‚ame
,(ifname)))

1906 
	`DBG_PRINTF
("ifindex2ifname faild!");

1909 if(
	`vosC⁄figOid2«me
(
	`CONFIG_MID
(
oid
),
mid«me
,(mid«me))==
NULL
)

1911 
	`DBG_PRINTF
("vosConfigOid2name faild!");

1914 if((
p°Secöfo
=
	`vosC⁄figOid2«me
(
	`CONFIG_MID_SECTION
(
oid
),
tmp£˙ame
,—mp£˙ame)))==
NULL
)

1916 
	`DBG_PRINTF
("vosConfigOid2name faild!");

1919 if((
p°Keyöfo
=
	`vosC⁄figOid2«me
(
	`CONFIG_MID_SECTION_KEY
(
oid
),
key«me
,(key«me)))==
NULL
)

1921 
	`DBG_PRINTF
("vosConfigOid2name faild!");

1924 if((
p°Secöfo
->
d©a
->
íNode_ty≥
==
CFG_OID_TYPE_TABLE
)&&((
	`CONFIG_INDEX
(
oid
)<
CONFIG_MIN_INDEX
)||(CONFIG_INDEX(oid)>
CONFIG_MAX_INDEX
)))

1926 
	`DBG_PRINTF
("CFG_OID_TYPE_TABLE index faild!");

1929 if(
p°Secöfo
->
d©a
->
íNode_ty≥
==
CFG_OID_TYPE_TABLE
)

1930 
	`•rötf
(
£˙ame
,"%s%d",
tmp£˙ame
,
	`CONFIG_INDEX
(
oid
));

1932 
	`°r˝y
(
£˙ame
,
tmp£˙ame
);

1935 if(0!=
	`vosC⁄figVÆueGë
(
	`IF_DOMAIN
(
ifödex
),
i‚ame
,
mid«me
,
£˙ame
,
key«me
,
deÁu…_vÆ
,
buf
,(buf)))

1937 
	`DBG_PRINTF
("vosConfigValueGet faild!");

1941  
p°Secöfo
->
d©a
->
ty≥
)

1943 
CFG_TYPE_STR
:

1944 if(
ªéí
<=
	`°æí
(
buf
))

1946 
	`DBG_PRINTF
("CFG_TYPE_STR faild!");

1949 
	`°r˝y
(
vÆ
,
buf
);

1951 
CFG_TYPE_INT
:

1952 if(
ªéí
<())

1954 
	`DBG_PRINTF
("CFG_TYPE_IPV4 faild!");

1957 
id©a
;

1958 
id©a
 = 
	`©oi
(
buf
);

1959 
	`mem˝y
(
vÆ
, &
id©a
, ());

1961 
CFG_TYPE_IPV4
:

1962 if(
ªéí
<4)

1964 
	`DBG_PRINTF
("CFG_TYPE_IPV4 faild!");

1967 
	`öë_±⁄
(
AF_INET
,
buf
,
vÆ
);

1969 
CFG_TYPE_IPV6
:

1970 if(
ªéí
<4)

1972 
	`DBG_PRINTF
("CFG_TYPE_IPV6 faild!");

1975 
	`öë_±⁄
(
AF_INET6
,
buf
,
vÆ
);

1981 
	}
}

1982 
	$vosC⁄figBackupF‹EachKey
(*
key
, *
vÆue
, 
d°
,*
ifm
,*
mid
,*
£˘i⁄
)

1984 
uiCmoid
=0;

1985 
«me
[128];

1986 
CFG_KEY_DATA_t
 *
tkey
 = (CFG_KEY_DATA_à*)
vÆue
;

1987 
CFG_OID_REG_t
 * 
tOidifo
=
NULL
;

1989 i‡(
tkey
 &&Åkey->
d©a
)

1991 
	`vosC⁄figName2Oid
(
key
,&
uiCmoid
);

1992 
tOidifo
=
	`vosC⁄figOid2«me
(
uiCmoid
,
«me
,(name));

1993 if(
tOidifo
->
d©a
->
iRe°‹e
==1)

1994 
	`vosC⁄figVÆueSë
((
CFG_DOMAIN_E
)
d°
,(*)
ifm
,(*)
mid
,(*)
£˘i⁄
,(*)
key
,
tkey
->
d©a
);

1996 
	}
}

1998 
	$vosC⁄figBackupF‹EachSe˘i⁄
(*
key
, *
vÆue
, 
d°
,*
ifm
,*
mid
)

2000 
CFG_SECTION_DATA_t
 *
t£˘i⁄
 = (CFG_SECTION_DATA_à*)
vÆue
;

2001 i‡(
t£˘i⁄
 &&Å£˘i⁄->
keys
) {

2002 
	`vosHashF‹EachDoCb
(
t£˘i⁄
->
keys
,

2003 (
FUNCPTR
)
vosC⁄figBackupF‹EachKey
, ()
d°
, 
ifm
, 
mid
, 
key
, 7, 8);

2005 
	}
}

2007 
	$vosC⁄figBackupF‹EachModuÀ
(*
key
, *
vÆue
, 
d°
,*
ifm
)

2009 
CFG_MODULE_DATA_t
 *
tmoduÀ
 = (CFG_MODULE_DATA_à*)
vÆue
;

2013 i‡(
tmoduÀ
 &&ÅmoduÀ->
£˘i⁄s
) {

2014 
	`vosHashF‹EachDoCb
(
tmoduÀ
->
£˘i⁄s
,

2015 (
FUNCPTR
)
vosC⁄figBackupF‹EachSe˘i⁄
, ()
d°
, 
ifm
, 
key
, 6, 7, 8);

2017 
	}
}

2019 
	$vosC⁄figBackupF‹EachIf
(*
key
, *
vÆue
, 
d°
)

2021 
CFG_IFM_DATA_t
 *
tifm
=(CFG_IFM_DATA_t*)
vÆue
;

2023 i‡(
tifm
 &&Åifm->
moduÀs
)

2025 
	`vosHashF‹EachDoCb
(
tifm
->
moduÀs
,

2026 (
FUNCPTR
)
vosC⁄figBackupF‹EachModuÀ
,()
d°
,
key
, 5, 6, 7, 8);

2029 
	}
}

2031 
	$vosC⁄figbackup
(
CFG_DOMAIN_E
 
d°
,CFG_DOMAIN_E 
§c
)

2033 
	`__cfg_wrôe_lock
(&
g_iLockfd
);

2034 i‡(
g_p°cfgdb
->
p°C⁄figD©aba£
[
§c
])

2036 
	`vosHashF‹EachDoCb
(
g_p°cfgdb
->
p°C⁄figD©aba£
[
§c
],

2037 (
FUNCPTR
)
vosC⁄figBackupF‹EachIf
, ()
d°
, 4, 5, 6, 7, 8);

2039 
	`__cfg_wrôe_u∆ock
(
g_iLockfd
);

2040 
	}
}

2046 
	$CfgRe°‹eFa˘‹y
(*
fûe
)

2048 
cmd
[256] = {0};

2050 if((
	`isMa°î
()!=
TESTER
)&&(isMa°î()!=
MASTER
))

2055 
	`vosC⁄figDomaöDñëe
(
CONFIG_VIRTUAL
);

2057 
	`vosC⁄figP¨£rFûe
(
fûe
,
CONFIG_VIRTUAL
);

2059 
	`vosC⁄figbackup
(
CONFIG_VIRTUAL
,
CONFIG_NORMAL
);

2061 
	`vosC⁄figFlushRe£t
(
CONFIG_VIRTUAL
);

2062 
	`vosC⁄figFlush
(
CONFIG_VIRTUAL
,
CONFIG_DEFAULTSTART
);

2065 
	`•rötf
(
cmd
, "˝ %†%s", 
CONFIG_DEFAULTSTART
, 
CONFIG_MNT_START
);

2066 if(
	`sy°em
(
cmd
) < 0)

2068 
	`DBG_PRINTF
("copyÅo mnt faild!\n");

2074 
	}
}

2080 
	$CfgSèπ
()

2082 
cmd
[256] = {0};

2084 if((
	`isMa°î
()!=
TESTER
)&&(isMa°î()!=
MASTER
))

2090 if(
	`vosC⁄figP¨£rFûe
(
CONFIG_MNT_START
, 
CONFIG_VIRTUAL
) != 0)

2092 
	`DBG_PRINTF
("lﬂd fûê%†tÿCONFIG_NORMAL faûd! \¬owÅÿlﬂd fa˘‹y c⁄fig!\n", 
CONFIG_MNT_START
);

2093 if(
	`vosC⁄figP¨£rFûe
(
CONFIG_DEFAULTFILE
, 
CONFIG_VIRTUAL
) != 0)

2095 
	`DBG_PRINTF
("lﬂd fûê%†tÿCONFIG_NORMAL faûd!\n", 
CONFIG_DEFAULTFILE
);

2100 if(
	`vosC⁄figP¨£rFûe
(
CONFIG_DEFAULTFILE
, 
CONFIG_NORMAL
) != 0)

2102 
	`DBG_PRINTF
("lﬂd fûê%†tÿCONFIG_VIRTUAL faûd!\n", 
CONFIG_DEFAULTFILE
);

2107 
	`vosC⁄figFlushRe£t
(
CONFIG_VIRTUAL
);

2108 if(
	`vosC⁄figFlush
(
CONFIG_VIRTUAL
, 
CONFIG_DEFAULTSTART
) < 0)

2110 
	`DBG_PRINTF
("ßvêc⁄figÅÿfûê%†Áûd!\n", 
CONFIG_DEFAULTSTART
);

2114 
	`•rötf
(
cmd
, "˝ %†%s", 
CONFIG_DEFAULTSTART
, 
CONFIG_MNT_START
);

2115 if(
	`sy°em
(
cmd
) < 0)

2117 
	`DBG_PRINTF
("copyÅo mnt faild!\n");

2123 if(
	`vosC⁄figP¨£rFûe
(
CONFIG_MNT_START
, 
CONFIG_NORMAL
) != 0)

2125 
	`DBG_PRINTF
("lﬂd fûê%†tÿCONFIG_VIRTUAL faûd!\n", 
CONFIG_MNT_START
);

2131 
	}
}

2133 
	$gë_vÆue
()

2135 
vÆ
[50]={0};

2137 if(
	`cfg_gëvÆ
(
CONFIG_VIRTUAL
, 
CONFIG_SYSTEM_NAME
, 
vÆ
, "get faild!", 50) < 0)

2139 
	`¥ötf
("cfg_getval faild!\n");

2142 
	`¥ötf
("gë vÆ = %s\n", 
vÆ
);

2144 
	}
}

2146 
	$£t_vÆue
()

2148 if(
	`ma°î_cfg_£tvÆ
(
CONFIG_VIRTUAL
,
CONFIG_SYSTEM_NAME
, "eeeeee") < 0)

2150 
	`¥ötf
("cfg_setval faild!\n");

2154 
	}
}

2156 
	$ßve_c⁄fig_to_fûe
()

2158 
cmd
[256] = {0};

2160 
	`vosC⁄figFlushRe£t
(
CONFIG_VIRTUAL
);

2161 if(
	`vosC⁄figFlush
(
CONFIG_VIRTUAL
, 
CONFIG_DEFAULTSTART
) < 0)

2163 
	`DBG_PRINTF
("ßvêtÿfûê%†Áûd!\n", 
CONFIG_DEFAULTSTART
);

2167 
	`•rötf
(
cmd
, "˝ %†%s", 
CONFIG_DEFAULTSTART
, 
CONFIG_MNT_START
);

2168 if(
	`sy°em
(
cmd
) < 0)

2170 
	`DBG_PRINTF
("copyÅo mnt faild!\n");

2174 
	`vosC⁄figDomaöDñëe
(
CONFIG_NORMAL
);

2175 
	`vosC⁄figP¨£rFûe
(
CONFIG_DEFAULTSTART
, 
CONFIG_NORMAL
);

2178 
	}
}

2181 
	$cfg_do_commô
()

2183 
	`ßve_c⁄fig_to_fûe
();

2185 
	}
}

2188 
	$cfg_ª°‹e_f‹_fûe
(*
fûe
)

2190 
	`vosC⁄figDomaöDñëe
(
CONFIG_VIRTUAL
);

2191 
	`vosC⁄figP¨£rFûe
(
fûe
,
CONFIG_VIRTUAL
);

2194 
	}
}

2197 
	$cfg_backup
(c⁄° *
fûe
)

2199 
	`vosC⁄figFlushRe£t
(
CONFIG_VIRTUAL
);

2200 if(
	`vosC⁄figFlush
(
CONFIG_VIRTUAL
, 
fûe
) < 0)

2202 
	`DBG_PRINTF
("ßvêtÿfûê%†Áûd!\n", 
fûe
);

2207 
	}
}

	@newcfg/vos_hash.c

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 
	~"vos_hash.h
"

34 
	#vosSåLí
 
°æí


	)

35 
	#vosSa„SåNCpy
 
°∫˝y


	)

36 
	#vosPrötk
 
¥ötf


	)

37 
	#vosPrötf


	)

38 
	#vosSåCmp
 
°rcmp


	)

39 
	#DIM
(
Aºay
Ë((((Aºay)Ë/ ((Aºay)[0])))

	)

41 #unde‡
ASSERT


43 
	#ASSERT


	)

45 * 
shmÆloc
(
size_t
 
size
);

48 
shm‰ì
(*
p
);

52 
	#vosAŒoc
 
shmÆloc


	)

53 
	#vosFªe
 
shm‰ì


	)

55 #i‚de‡
__USE_ISOC99


56 
	#ölöe


	)

62 
	#HASH_MAX_FULLNESS
 0.75

	)

66 
	#HASH_RESIZE_FACTOR
 2

	)

70 
	sHASH_ENTRY_s


72 *
	mkey
;

73 *
	md©a
;

74 
HASH_ENTRY_s
 *
	m√xt
;

77 
	sHASH_TABLE_s


79 (*
	mgëHash
)(*);

80 (*
	mcom∑ª
)(*, *);

81 (*
	míåyDe°roy
)(*, *);

82 
	môems
;

83 
	mhashSize
;

84 
	mcou¡
;

85 
	mªsizeThªshﬁd
;

87 
	m¥imeOff£t
;

89 
HASH_ENTRY_s
 **
	mhashLi°
;

93 
	#HASH_INDEX
(
key
, 
èb
Ë(—ab->
gëHash
)(keyË% (èb->
hashSize
 -1))

	)

95 
	#IS_EMPTY
(
íåy
Ë(”¡ryË=
NULL
)

	)

107 
	$¥imeSize
(
size
, *
¥imeOff£t
)

109 c⁄° 
¥imes
[] = {

120 
i
;

122 
i
 = *
¥imeOff£t
; ()ò< 
	`DIM
(
¥imes
); i++)

123 i‡(
¥imes
[
i
] >
size
) {

124 *
¥imeOff£t
 = 
i
 + 1;

125  
¥imes
[
i
];

128 
	`ab‹t
();

129 
	}
}

132 
	$vosSåögHash
(*
§c
)

134 
i
, 
l
;

135 
ªt
 = 0;

136 *
s
;

137 *
°r
 = (*)
§c
;

138 i‡(
°r
 =
NULL
)

140 
l
 = (
	`vosSåLí
(
°r
) + 1) / 2;

141 
s
 = (*)
°r
;

143 
i
 = 0; i < 
l
; i++)

144 
ªt
 ^
s
[
i
]<<(i&0x0f);

146 (
ªt
);

147 
	}
}

149 
	$vosEquÆSåög
(*
k1
, *
k2
)

151  (0 =
	`vosSåCmp
((*)
k1
, (*)
k2
));

152 
	}
}

154 
ölöe
 
HASH_ENTRY_s
 *
	$hashE¡ryNew
(*
key
, *
d©a
)

156 
HASH_ENTRY_s
 *
√w
 = 
	`vosAŒoc
((HASH_ENTRY_s));

157 
√w
->
key
 = key;

158 
√w
->
d©a
 = data;

159 
√w
->
√xt
 = 
NULL
;

160  
√w
;

161 
	}
}

163 
	$vosHashE¡ryFªe
(*
key
, *
vÆue
)

165 
	`vosFªe
(
key
);

166 
	`vosFªe
(
vÆue
);

167 
	}
}

169 
	$hashLi°Upd©e
(
HASH_ENTRY_s
 *
roŸ
, *
key
,

170 *
d©a
, 
HASH_TABLE_t
 *
èb
)

172 
HASH_ENTRY_s
 *
pos
;

173 
pos
 = 
roŸ
;Öo†!
NULL
;Öo†pos->
√xt
 ) {

174 i‡–
èb
->
	`com∑ª
(
key
, 
pos
->key) ) {

175 
èb
->
	`íåyDe°roy
(
pos
->
key
,Öos->
d©a
);

176 
pos
->
key
 = key;

177 
pos
->
d©a
 = data;

182 
	}
}

184 
HASH_TABLE_t
 *
vosHashCª©e
((*
keyfunc
)(*),

185 (*
com∑ªfunc
)(*, *),

186 (*
de°royfunc
)(*, *),

187 
size
)

189 
i
, 
¥imesize
;

190 
Àn
;

192 
HASH_TABLE_t
 *
èb
 = 
	`vosAŒoc
( (HASH_TABLE_t) );

193 
	`ASSERT
(
èb
 !
NULL
, "Out of memory!!!");

194 
èb
->
¥imeOff£t
 = 0;

195 
¥imesize
 = 1 + 
size
 / 
HASH_MAX_FULLNESS
;

196 
¥imesize
 = 
	`¥imeSize
’rimesize, &
èb
->
¥imeOff£t
);

197 
èb
->
hashSize
 = 
¥imesize
;

199 
èb
->
ªsizeThªshﬁd
 = (
¥imesize
 * 75)/100;

200 
Àn
 = (
HASH_ENTRY_s
 *Ë* 
¥imesize
;

202 
èb
->
hashLi°
 = 
	`vosAŒoc
(
Àn
);

203 
	`ASSERT
(
èb
->
hashLi°
 !
NULL
, "Out of memory!!!");

204 
i
 = 0; i < 
¥imesize
; i++)

205 
èb
->
hashLi°
[
i
] = 
NULL
 ;

207 
èb
->
com∑ª
 = 
com∑ªfunc
;

208 
èb
->
gëHash
 = 
keyfunc
;

209 
èb
->
íåyDe°roy
 = 
de°royfunc
;

210 
èb
->
ôems
 =Åab->
cou¡
 = 0;

211  
èb
;

212 
	}
}

214 
	$hashResize
(
HASH_TABLE_t
 *
èb
)

216 
i
, 
√wIndex
;

217 
ﬁdsize
 = 
èb
->
hashSize
;

218 
HASH_ENTRY_s
 **
ﬁd_íåõs
 = 
èb
->
hashLi°
;

219 
HASH_ENTRY_s
 *
pos
, *
cur_íåy
, *
ﬁd_íåy
;

220 
√wsize
;

222 
√wsize
 = 
	`¥imeSize
(
èb
->
hashSize
 * 
HASH_RESIZE_FACTOR
, &èb->
¥imeOff£t
);

223 
èb
->
hashSize
 = 
√wsize
;

225 
èb
->
ªsizeThªshﬁd
 = (
√wsize
 * 75)/100;

226 
èb
->
hashLi°
 = 
	`vosAŒoc
((
HASH_ENTRY_s
 *Ë* 
√wsize
);

227 
	`ASSERT
(
èb
->
hashLi°
 !
NULL
, "Out of memory!!!");

228 
èb
->
cou¡
 =Åab->
ôems
 = 0;

229 
i
 = 0; i < 
√wsize
; i++)

230 
èb
->
hashLi°
[
i
] = 
NULL
 ;

232 
i
 = 0; i < 
ﬁdsize
; i++) {

233 
cur_íåy
 = 
ﬁd_íåõs
[
i
];

234 i‡(
	`IS_EMPTY
(
cur_íåy
))

237 
pos
 = 
cur_íåy
->
√xt
;

238 
pos
 !
NULL
) {

239 
ﬁd_íåy
 = 
pos
;

240 
pos
 =Öos->
√xt
;

241 
	`vosHashIn£π
(
ﬁd_íåy
->
key
, old_íåy->
d©a
, 
èb
);

242 
	`vosFªe
(
ﬁd_íåy
);

245 
	`vosHashIn£π
(
cur_íåy
->
key
, cur_íåy->
d©a
, 
èb
);

246 
	`vosFªe
(
cur_íåy
);

247 
ﬁd_íåõs
[
i
] = 
NULL
;

250 
	`vosFªe
(
ﬁd_íåõs
);

251 
	}
}

253 
	$vosHashCÀ¨
(
HASH_TABLE_t
 *
èb
)

255 
i
;

256 
HASH_ENTRY_s
 *
pos
, *
cur_íåy
, *
ﬁd_íåy
;

258 i‡(
èb
 =
NULL
)

261 i‡(
èb
->
cou¡
 == 0)

264 
i
 = 0; i < 
èb
->
hashSize
; i++) {

265 
cur_íåy
 = 
èb
->
hashLi°
[
i
];

266 i‡(
	`IS_EMPTY
(
cur_íåy
))

269 
pos
 = 
cur_íåy
->
√xt
;

270 
pos
 !
NULL
) {

271 
ﬁd_íåy
 = 
pos
;

272 
pos
 =Öos->
√xt
;

273 
èb
->
	`íåyDe°roy
(
ﬁd_íåy
->
key
, old_íåy->
d©a
);

274 
	`vosFªe
(
ﬁd_íåy
);

277 
èb
->
	`íåyDe°roy
(
cur_íåy
->
key
, cur_íåy->
d©a
);

278 
	`vosFªe
(
cur_íåy
);

279 
èb
->
hashLi°
[
i
] = 
NULL
;

282 
èb
->
cou¡
 =Åab->
ôems
 = 0;

283 
	}
}

286 
	$vosHashFªe
(
HASH_TABLE_t
 *
èb
)

288 
	`vosHashCÀ¨
(
èb
);

289 
	`vosFªe
(
èb
->
hashLi°
);

290 
	`vosFªe
(
èb
);

291 
èb
 =
NULL
;

292 
	}
}

294 
	$vosHashIn£π
(*
key
, *
d©a
, 
HASH_TABLE_t
 *
èb
)

296 
ödex
 = 
	`HASH_INDEX
(
key
, 
èb
);

297 
HASH_ENTRY_s
 *
l
, *
pos
;

303 i‡–
	`hashLi°Upd©e
(
èb
->
hashLi°
[
ödex
], 
key
, 
d©a
,Åab ) != 0 ) {

306 i‡(
èb
->
ôems
 >èb->
ªsizeThªshﬁd
) {

307 
	`hashResize
(
èb
);

308 
ödex
 = 
	`HASH_INDEX
(
key
, 
èb
);

312 
l
 = 
	`hashE¡ryNew
(
key
, 
d©a
);

313 i‡(
èb
->
hashLi°
[
ödex
] =
NULL
) {

314 
èb
->
hashLi°
[
ödex
] = 
l
;

315 
èb
->
ôems
++;

317 
pos
 = 
èb
->
hashLi°
[
ödex
];Öos->
√xt
 !
NULL
;Öos =Öos->next);

318 
pos
->
√xt
 = 
l
;

321 
èb
->
cou¡
++;

323 
	}
}

325 
	$vosHashRemove
(*
key
, 
HASH_TABLE_t
 *
èb
)

327 
ödex
 = 
	`HASH_INDEX
(
key
, 
èb
);

328 
HASH_ENTRY_s
 *
pos
 ,*
¥ev
, *
tmp
;

330 i‡(
NULL
 =
èb
->
hashLi°
[
ödex
]) ;

332 
pos
 = 
èb
->
hashLi°
[
ödex
];

333 i‡(
èb
->
	`com∑ª
(
pos
->
key
, key)) {

334 
tmp
 = 
pos
->
√xt
;

335 i‡(
tmp
 =
NULL
) {

336 
èb
->
hashLi°
[
ödex
] = 
NULL
;

338 
èb
->
hashLi°
[
ödex
] = 
tmp
;

340 
èb
->
	`íåyDe°roy
(
pos
->
key
,Öos->
d©a
);

341 
	`vosFªe
(
pos
);

342 --
èb
->
ôems
;

343 --
èb
->
cou¡
;

347 
¥ev
 = 
èb
->
hashLi°
[
ödex
];

348 
pos
 = 
¥ev
->
√xt
; 
NULL
 !=Öos;Öos =Öos->next) {

349 i‡(
èb
->
	`com∑ª
(
pos
->
key
, key)) {

350 
¥ev
->
√xt
 = 
pos
->next;

351 
èb
->
	`íåyDe°roy
(
pos
->
key
,Öos->
d©a
);

352 
	`vosFªe
(
pos
);

353 --
èb
->
cou¡
;

356 
¥ev
 = 
pos
;

358 
	}
}

360 *
	$vosHashVÆue
(*
key
, 
HASH_TABLE_t
 *
èb
)

362 
HASH_ENTRY_s
 *
pos
;

363 
ödex
 = 
	`HASH_INDEX
(
key
, 
èb
);

364 
pos
 = 
èb
->
hashLi°
[
ödex
]; 
NULL
 !pos;Öo†pos->
√xt
) {

365 i‡(
èb
->
	`com∑ª
(
key
, 
pos
->key)) {

366  (
pos
->
d©a
);

369  
NULL
;

370 
	}
}

393 
	$vosHashVÆueGëByIndex
(
ödex
, 
HASH_TABLE_t
 *
èb
, **
key
, **
d©a
)

395 
i
, 
cuºít
 = 0;

396 
HASH_ENTRY_s
 *
pos
;

398 i‡(
ödex
 >()(
èb
->
cou¡
))

401 
i
 = 0; i < 
èb
->
hashSize
; i++) {

402 
pos
 = 
èb
->
hashLi°
[
i
]; 
NULL
 !pos;Öo†pos->
√xt
 ) {

403 i‡(
ödex
 =()
cuºít
)

405 *
key
 = 
pos
->key;

406 *
d©a
 = 
pos
->data;

409 
cuºít
++;

413 
	}
}

415 
vosHashF‹EachDo
(
HASH_TABLE_t
 *
èb
, (
cb
)(*, *))

417 
i
 = 0;

418 
HASH_ENTRY_s
 *
pos
;

419 
i
 = 0; i < 
èb
->
hashSize
; i++) {

420 
pos
 = 
èb
->
hashLi°
[
i
]; 
NULL
 !pos;Öo†pos->
√xt
 ) {

421 
	`cb
(
pos
->
key
,Öos->
d©a
);

424 
	}
}

426 
	$vosHashF‹EachDoCb
(

427 
HASH_TABLE_t
 *
èb
,

428 
FUNCPTR
 
pCÆlback
,

429 
ulArg3
,

430 
ulArg4
,

431 
ulArg5
,

432 
ulArg6
,

433 
ulArg7
,

434 
ulArg8
)

436 
i
 = 0;

437 
HASH_ENTRY_s
 *
pos
;

438 
i
 = 0; i < 
èb
->
hashSize
; i++) {

439 
pos
 = 
èb
->
hashLi°
[
i
]; 
NULL
 !pos;Öo†pos->
√xt
 ) {

440 i‡(
pCÆlback
)

442 
	`pCÆlback
(()(
pos
->
key
),

443 ()(
pos
->
d©a
),

444 
ulArg3
,

445 
ulArg4
,

446 
ulArg5
,

447 
ulArg6
,

448 
ulArg7
,

449 
ulArg8
);

453 
	}
}

455 
ölöe
 
	$vosHashSize
(
HASH_TABLE_t
 *
èb
)

457  
èb
->
hashSize
;

458 
	}
}

460 
ölöe
 
	$vosHashCou¡
(
HASH_TABLE_t
 *
èb
)

462  
èb
->
cou¡
;

463 
	}
}

465 
ölöe
 
	$vosHashIãms
(
HASH_TABLE_t
 *
èb
)

467  
èb
->
ôems
;

468 
	}
}

	@smalloc/dlmalloc.c

208 #ifde‡ 
__˝lu•lus


215 
	~<°dlib.h
>

216 
	~<°rög.h
>

218 
	~<vos_ty≥s.h
>

221 
	~<c⁄fig_oid.h
>

223 
	~<c⁄fig_≠i.h
>

258 #i‚de‡
MALLOC_LOCK


259 
	#MALLOC_LOCK


	)

262 #i‚de‡
MALLOC_UNLOCK


263 
	#MALLOC_UNLOCK


	)

275 #i‚de‡
INTERNAL_SIZE_T


276 
	#INTERNAL_SIZE_T
 
size_t


	)

290 #ifde‡
SIZE_T_SMALLER_THAN_LONG


291 
	#l⁄g_sub_size_t
(
x
, 
y
Ë–(x < yË? -(()(y - x)Ë: (x - yË);

	)

293 
	#l⁄g_sub_size_t
(
x
, 
y
Ë–()(x - yË)

	)

297 #ifde‡
CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY


299 
	~<°rög.h
>

305 
	#MALLOC_ZERO
(
ch¨p
, 
nbyãs
) \

307 
INTERNAL_SIZE_T
 
mzsz
 = (
nbyãs
); \

308 if(
mzsz
 <= 9*(mzsz)) { \

309 
INTERNAL_SIZE_T
* 
mz
 = (INTERNAL_SIZE_T*Ë(
ch¨p
); \

310 if(
mzsz
 >5*(mzsz)Ë{ *
mz
++ = 0; \

311 *
mz
++ = 0; \

312 if(
mzsz
 >7*(mzsz)Ë{ *
mz
++ = 0; \

313 *
mz
++ = 0; \

314 if(
mzsz
 >9*(mzsz)Ë{ *
mz
++ = 0; \

315 *
mz
++ = 0; }}} \

316 *
mz
++ = 0; \

317 *
mz
++ = 0; \

318 *
mz
 = 0; \

319 } 
	`mem£t
((
ch¨p
), 0, 
mzsz
); \

320 } 0)

	)

322 
	#MALLOC_COPY
(
de°
,
§c
,
nbyãs
) \

324 
INTERNAL_SIZE_T
 
mcsz
 = (
nbyãs
); \

325 if(
mcsz
 <= 9*(mcsz)) { \

326 
INTERNAL_SIZE_T
* 
mc§c
 = (INTERNAL_SIZE_T*Ë(
§c
); \

327 
INTERNAL_SIZE_T
* 
mcd°
 = (INTERNAL_SIZE_T*Ë(
de°
); \

328 if(
mcsz
 >5*(mcsz)Ë{ *
mcd°
++ = *
mc§c
++; \

329 *
mcd°
++ = *
mc§c
++; \

330 if(
mcsz
 >7*(mcsz)Ë{ *
mcd°
++ = *
mc§c
++; \

331 *
mcd°
++ = *
mc§c
++; \

332 if(
mcsz
 >9*(mcsz)Ë{ *
mcd°
++ = *
mc§c
++; \

333 *
mcd°
++ = *
mc§c
++; }}} \

334 *
mcd°
++ = *
mc§c
++; \

335 *
mcd°
++ = *
mc§c
++; \

336 *
mcd°
 = *
mc§c
 ; \

337 } 
	`mem˝y
(
de°
, 
§c
, 
mcsz
); \

338 } 0)

	)

344 
	#MALLOC_ZERO
(
ch¨p
, 
nbyãs
) \

346 
INTERNAL_SIZE_T
* 
mzp
 = (INTERNAL_SIZE_T*)(
ch¨p
); \

347 
m˘mp
 = (
nbyãs
)/(
INTERNAL_SIZE_T
), 
m˙
; \

348 i‡(
m˘mp
 < 8Ë
m˙
 = 0; { mcn = (mctmp-1)/8; mctmp %= 8; } \

349 
m˘mp
) { \

350 0: ;;Ë{ *
mzp
++ = 0; \

351 7: *
mzp
++ = 0; \

352 6: *
mzp
++ = 0; \

353 5: *
mzp
++ = 0; \

354 4: *
mzp
++ = 0; \

355 3: *
mzp
++ = 0; \

356 2: *
mzp
++ = 0; \

357 1: *
mzp
++ = 0; if(
m˙
 <= 0) ; mcn--; } \

359 } 0)

	)

361 
	#MALLOC_COPY
(
de°
,
§c
,
nbyãs
) \

363 
INTERNAL_SIZE_T
* 
mc§c
 = (INTERNAL_SIZE_T*Ë
§c
; \

364 
INTERNAL_SIZE_T
* 
mcd°
 = (INTERNAL_SIZE_T*Ë
de°
; \

365 
m˘mp
 = (
nbyãs
)/(
INTERNAL_SIZE_T
), 
m˙
; \

366 i‡(
m˘mp
 < 8Ë
m˙
 = 0; { mcn = (mctmp-1)/8; mctmp %= 8; } \

367 
m˘mp
) { \

368 0: ;;Ë{ *
mcd°
++ = *
mc§c
++; \

369 7: *
mcd°
++ = *
mc§c
++; \

370 6: *
mcd°
++ = *
mc§c
++; \

371 5: *
mcd°
++ = *
mc§c
++; \

372 4: *
mcd°
++ = *
mc§c
++; \

373 3: *
mcd°
++ = *
mc§c
++; \

374 2: *
mcd°
++ = *
mc§c
++; \

375 1: *
mcd°
++ = *
mc§c
++; if(
m˙
 <= 0) ; mcn--; } \

377 } 0)

	)

492 
	smÆloc_chunk


494 
size_t
 
¥ev_size
;

495 
size_t
 
size
;

496 
mÆloc_chunk
* 
fd
;

497 
mÆloc_chunk
* 
bk
;

500 
mÆloc_chunk
* 
	tmchunk±r
;

504 
	#SIZE_SZ
 ((
INTERNAL_SIZE_T
))

	)

506 #ifde‡
CYGNUM_MEMALLOC_ALLOCATOR_DLMALLOC_ALIGNMENT


507 
	#MALLOC_ALIGNMENT
 (1<<(
CYGNUM_MEMALLOC_ALLOCATOR_DLMALLOC_ALIGNMENT
))

	)

510 #i‚de‡
MALLOC_ALIGNMENT


511 
	#MALLOC_ALIGN
 8

	)

512 
	#MALLOC_ALIGNMENT
 (
SIZE_SZ
 + SIZE_SZ)

	)

514 
	#MALLOC_ALIGN
 
MALLOC_ALIGNMENT


	)

516 
	#MALLOC_ALIGN_MASK
 (
MALLOC_ALIGNMENT
 - 1)

	)

517 
	#MINSIZE
 \

518 ((
mÆloc_chunk
))

	)

522 
	#chunk2mem
(
p
Ë((
UINT8
*)((*)’Ë+ 2*
SIZE_SZ
))

	)

523 
	#mem2chunk
(
mem
Ë((
mchunk±r
)((*)(memË- 2*
SIZE_SZ
))

	)

527 
	#ªque°2size
(
ªq
) \

528 ((()((
ªq
Ë+ (
SIZE_SZ
 + 
MALLOC_ALIGN_MASK
)) < \

529 ()(
MINSIZE
 + 
MALLOC_ALIGN_MASK
)) ? ((MINSIZE + MALLOC_ALIGN_MASK) & ~(MALLOC_ALIGN_MASK)) : \

530 (((
ªq
Ë+ (
SIZE_SZ
 + 
MALLOC_ALIGN_MASK
)Ë& ~(MALLOC_ALIGN_MASK)))

	)

534 
	#Æig√d_OK
(
m
Ë((()((m)Ë& (
MALLOC_ALIGN_MASK
)Ë=0)

	)

544 
	#PREV_INUSE
 0x1

	)

548 
	#SIZE_BITS
 (
PREV_INUSE
)

	)

553 
	#√xt_chunk
(
p
Ë((
mchunk±r
)–((*)’)Ë+ (’)->
size
 & ~
PREV_INUSE
Ë))

	)

557 
	#¥ev_chunk
(
p
)\

558 ((
mchunk±r
)–((*)(
p
)Ë- (’)->
¥ev_size
Ë))

	)

563 
	#chunk_©_off£t
(
p
, 
s
Ë((
mchunk±r
)(((*)’)Ë+ (s)))

	)

571 
	#öu£
(
p
)\

572 ((((
mchunk±r
)(((*)(
p
))+(’)->
size
 & ~
PREV_INUSE
)))->sizeË& PREV_INUSE)

	)

576 
	#¥ev_öu£
(
p
Ë(’)->
size
 & 
PREV_INUSE
)

	)

580 
	#£t_öu£
(
p
)\

581 ((
mchunk±r
)(((*)(
p
)Ë+ (’)->
size
 & ~
PREV_INUSE
)))->sizê|
	)
PREV_INUSE

583 
	#˛ór_öu£
(
p
)\

584 ((
mchunk±r
)(((*)(
p
)Ë+ (’)->
size
 & ~
PREV_INUSE
)))->sizê&~(PREV_INUSE)

	)

588 
	#öu£_bô_©_off£t
(
p
, 
s
)\

589 (((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
size
 & 
PREV_INUSE
)

	)

591 
	#£t_öu£_bô_©_off£t
(
p
, 
s
)\

592 (((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
size
 |
PREV_INUSE
)

	)

594 
	#˛ór_öu£_bô_©_off£t
(
p
, 
s
)\

595 (((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
size
 &~(
PREV_INUSE
))

	)

604 
	#chunksize
(
p
Ë(’)->
size
 & ~(
SIZE_BITS
))

	)

608 
	#£t_hód_size
(
p
, 
s
Ë(’)->
size
 = ((’)->sizê& 
PREV_INUSE
Ë| (s)))

	)

612 
	#£t_hód
(
p
, 
s
Ë(’)->
size
 = (s))

	)

616 
	#£t_foŸ
(
p
, 
s
Ë(((
mchunk±r
)((*)’Ë+ (s)))->
¥ev_size
 = (s))

	)

655 
mÆloc_chunk
* 
	tmbö±r
;

659 
	#bö_©
(
i
Ë((
mbö±r
)((*)&(
av_
[2*(iË+ 2]Ë- 2*
SIZE_SZ
))

	)

660 
	#√xt_bö
(
b
Ë((
mbö±r
)((*)(bË+ 2 * (mbö±r)))

	)

661 
	#¥ev_bö
(
b
Ë((
mbö±r
)((*)(bË- 2 * (mbö±r)))

	)

669 
	#t›
 (
	`bö_©
(0)->
fd
Ë

	)

670 
	#œ°_ªmaödî
 (
	`bö_©
(1)Ë

	)

674 
	#MEMALLOC_ALLOCATOR_DLMALLOC_NAV
 128

	)

676 
	#IAV
(
i
Ë
	`bö_©
(i), bö_©(i)

	)

678 #i‚de‡
CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_SAFE_MULTIPLE


679 
mbö±r
 
av_
[
MEMALLOC_ALLOCATOR_DLMALLOC_NAV
 * 2 + 2] = {

681 
IAV
(0), IAV(1), IAV(2), IAV(3), IAV(4), IAV(5), IAV(6), IAV(7),

682 
IAV
(8), IAV(9), IAV(10), IAV(11), IAV(12), IAV(13), IAV(14), IAV(15),

683 
IAV
(16), IAV(17), IAV(18), IAV(19), IAV(20), IAV(21), IAV(22), IAV(23),

684 
IAV
(24), IAV(25), IAV(26), IAV(27), IAV(28), IAV(29), IAV(30), IAV(31),

685 
IAV
(32), IAV(33), IAV(34), IAV(35), IAV(36), IAV(37), IAV(38), IAV(39),

686 
IAV
(40), IAV(41), IAV(42), IAV(43), IAV(44), IAV(45), IAV(46), IAV(47),

687 
IAV
(48), IAV(49), IAV(50), IAV(51), IAV(52), IAV(53), IAV(54), IAV(55),

688 
IAV
(56), IAV(57), IAV(58), IAV(59), IAV(60), IAV(61), IAV(62), IAV(63),

689 
IAV
(64), IAV(65), IAV(66), IAV(67), IAV(68), IAV(69), IAV(70), IAV(71),

690 
IAV
(72), IAV(73), IAV(74), IAV(75), IAV(76), IAV(77), IAV(78), IAV(79),

691 
IAV
(80), IAV(81), IAV(82), IAV(83), IAV(84), IAV(85), IAV(86), IAV(87),

692 
IAV
(88), IAV(89), IAV(90), IAV(91), IAV(92), IAV(93), IAV(94), IAV(95),

693 
IAV
(96), IAV(97), IAV(98), IAV(99), IAV(100), IAV(101), IAV(102), IAV(103),

694 
IAV
(104), IAV(105), IAV(106), IAV(107), IAV(108), IAV(109), IAV(110), IAV(111),

695 
IAV
(112), IAV(113), IAV(114), IAV(115), IAV(116), IAV(117), IAV(118), IAV(119),

696 
IAV
(120), IAV(121), IAV(122), IAV(123), IAV(124), IAV(125), IAV(126), IAV(127)

702 
	#fú°
(
b
Ë((b)->
fd
)

	)

703 
	#œ°
(
b
Ë((b)->
bk
)

	)

709 
	#bö_ödex
(
sz
) \

710 ((((()(
sz
)) >> 9) == 0) ? ((()(sz)) >> 3): \

711 (((()(
sz
)) >> 9) <= 4) ? 56 + ((()(sz)) >> 6): \

712 (((()(
sz
)) >> 9) <= 20) ? 91 + ((()(sz)) >> 9): \

713 (((()(
sz
)) >> 9) <= 84) ? 110 + ((()(sz)) >> 12): \

714 (((()(
sz
)) >> 9) <= 340) ? 119 + ((()(sz)) >> 15): \

715 (((()(
sz
)) >> 9) <= 1364) ? 124 + ((()(sz)) >> 18): \

716 126)

	)

722 
	#MAX_SMALLBIN_SIZE
 512

	)

723 
	#SMALLBIN_WIDTH
 8

	)

724 
	#SMALLBIN_WIDTH_BITS
 3

	)

725 
	#MAX_SMALLBIN
 (
MAX_SMALLBIN_SIZE
 / 
SMALLBIN_WIDTH
Ë- 1

	)

727 
	#smÆlbö_ödex
(
sz
Ë((()(sz)Ë>> 
SMALLBIN_WIDTH_BITS
)

	)

733 
	#is_smÆl_ªque°
(
nb
Ë“b < 
MAX_SMALLBIN_SIZE
 - 
SMALLBIN_WIDTH
)

	)

745 
	#BINBLOCKWIDTH
 4

	)

747 
	#böblocks
 (
	`bö_©
(0)->
size
Ë

	)

751 
	#idx2böblock
(
ix
Ë(()1 << (ix / 
BINBLOCKWIDTH
))

	)

752 
	#m¨k_böblock
(
ii
Ë(
böblocks
 |
	`idx2böblock
(ii))

	)

753 
	#˛ór_böblock
(
ii
Ë(
böblocks
 &~(
	`idx2böblock
(ii)))

	)

762 #ifde‡
CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG


773 
Cyg_Mempoﬁ_dlmÆloc_Im∂emíèti⁄
::
do_check_chunk
–
mchunk±r
 
p
 )

775 
INTERNAL_SIZE_T
 
sz
 = 
p
->
size
 & ~
PREV_INUSE
;

778 
ASSERT
((
UINT8
 *)
p
 >
¨íaba£
);

779 i‡(
p
 !
t›
)

780 
ASSERT
((
UINT8
 *)
p
 + 
sz
 <(UINT8 *)
t›
);

782 
ASSERT
((
UINT8
 *)
p
 + 
sz
 <
¨íaba£
 + 
¨íasize
);

788 
Cyg_Mempoﬁ_dlmÆloc_Im∂emíèti⁄
::
do_check_‰ì_chunk
(
mchunk±r
 
p
)

790 
INTERNAL_SIZE_T
 
sz
 = 
p
->
size
 & ~
PREV_INUSE
;

791 
mchunk±r
 
√xt
 = 
chunk_©_off£t
(
p
, 
sz
);

793 
do_check_chunk
(
p
);

796 
ASSERT
(!
öu£
(
p
));

799 i‡(()
sz
 >()
MINSIZE
)

801 
ASSERT
((
sz
 & 
MALLOC_ALIGN_MASK
) == 0);

802 
ASSERT
(
Æig√d_OK
(
chunk2mem
(
p
)));

804 
ASSERT
(
√xt
->
¥ev_size
 =
sz
);

806 
ASSERT
(
¥ev_öu£
(
p
));

807 
ASSERT
 (
√xt
 =
t›
 || 
öu£
(next));

810 
ASSERT
(
p
->
fd
->
bk
 ==Ö);

811 
ASSERT
(
p
->
bk
->
fd
 ==Ö);

814 
ASSERT
(
sz
 =
SIZE_SZ
);

818 
Cyg_Mempoﬁ_dlmÆloc_Im∂emíèti⁄
::
do_check_öu£_chunk
(
mchunk±r
 
p
)

820 
mchunk±r
 
√xt
 = 
√xt_chunk
(
p
);

821 
do_check_chunk
(
p
);

824 
ASSERT
(
öu£
(
p
));

830 i‡(!
¥ev_öu£
(
p
))

832 
mchunk±r
 
¥v
 = 
¥ev_chunk
(
p
);

833 
ASSERT
(
√xt_chunk
(
¥v
Ë=
p
);

834 
do_check_‰ì_chunk
(
¥v
);

836 i‡(
√xt
 =
t›
)

838 
ASSERT
(
¥ev_öu£
(
√xt
));

839 
ASSERT
(
chunksize
(
√xt
Ë>
MINSIZE
);

841 i‡(!
öu£
(
√xt
))

842 
do_check_‰ì_chunk
(
√xt
);

847 
Cyg_Mempoﬁ_dlmÆloc_Im∂emíèti⁄
::
do_check_mÆlo˚d_chunk
(
mchunk±r
 
p
,

848 
INTERNAL_SIZE_T
 
s
)

850 
INTERNAL_SIZE_T
 
sz
 = 
p
->
size
 & ~
PREV_INUSE
;

851 
room
 = 
l⁄g_sub_size_t
(
sz
, 
s
);

853 
do_check_öu£_chunk
(
p
);

856 
ASSERT
(()
sz
 >()
MINSIZE
);

857 
ASSERT
((
sz
 & 
MALLOC_ALIGN_MASK
) == 0);

858 
ASSERT
(
room
 >= 0);

859 
ASSERT
(
room
 < ()
MINSIZE
);

862 
ASSERT
(
Æig√d_OK
(
chunk2mem
(
p
)));

866 
ASSERT
(
¥ev_öu£
(
p
));

871 
	#check_‰ì_chunk
(
P
Ë
	`do_check_‰ì_chunk
(P)

	)

872 
	#check_öu£_chunk
(
P
Ë
	`do_check_öu£_chunk
(P)

	)

873 
	#check_chunk
(
P
Ë
	`do_check_chunk
(P)

	)

874 
	#check_mÆlo˚d_chunk
(
P
,
N
Ë
	`do_check_mÆlo˚d_chunk
(P,N)

	)

876 
	#check_‰ì_chunk
(
P
)

	)

877 
	#check_öu£_chunk
(
P
)

	)

878 
	#check_chunk
(
P
)

	)

879 
	#check_mÆlo˚d_chunk
(
P
,
N
)

	)

901 
	#‰⁄éök
(
P
, 
S
, 
IDX
, 
BK
, 
FD
) \

903 i‡(
S
 < 
MAX_SMALLBIN_SIZE
) \

905 
IDX
 = 
	`smÆlbö_ödex
(
S
); \

906 
	`m¨k_böblock
(
IDX
); \

907 
BK
 = 
	`bö_©
(
IDX
); \

908 
FD
 = 
BK
->
fd
; \

909 
P
->
bk
 = 
BK
; \

910 
P
->
fd
 = 
FD
; \

911 
FD
->
bk
 = 
BK
->
fd
 = 
P
; \

915 
IDX
 = 
	`bö_ödex
(
S
); \

916 
BK
 = 
	`bö_©
(
IDX
); \

917 
FD
 = 
BK
->
fd
; \

918 i‡(
FD
 =
BK
Ë
	`m¨k_böblock
(
IDX
); \

921 
FD
 !
BK
 && 
S
 < 
	`chunksize
(FD)ËFD = FD->
fd
; \

922 
BK
 = 
FD
->
bk
; \

924 
P
->
bk
 = 
BK
; \

925 
P
->
fd
 = 
FD
; \

926 
FD
->
bk
 = 
BK
->
fd
 = 
P
; \

928 }

	)

933 
	#u∆ök
(
P
, 
BK
, 
FD
) \

935 
BK
 = 
P
->
bk
; \

936 
FD
 = 
P
->
fd
; \

937 
FD
->
bk
 = 
BK
; \

938 
BK
->
fd
 = 
FD
; \

940 

	)

943 
	#lök_œ°_ªmaödî
(
P
) \

945 
œ°_ªmaödî
->
fd
 =Üa°_ªmaödî->
bk
 = 
P
; \

946 
P
->
fd
 = P->
bk
 = 
œ°_ªmaödî
; \

947 }

	)

951 
	#˛ór_œ°_ªmaödî
 \

952 (
œ°_ªmaödî
->
fd
 =Üa°_ªmaödî->
bk
 =Üa°_ªmaödî)

	)

954 
UINT8
 *
¨íaba£
;

955 
INT32
 
¨íasize
;

962 
poﬁ_¸óã
–
UINT8
 *
ba£
, 
INT32
 
size
)

964 
¨íaba£
 = 
ba£
;

965 
¨íasize
 = 
size
;

967 
ULONG
 
‰⁄t_mißlign
;

968 
INT32
 
c‹ª˘i⁄
;

970 #ifde‡
CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_SAFE_MULTIPLE


971 
cyg_ucou¡16
 
i
;

972 
av_
[0] =áv_[1] = 0;

973 
i
=0; i < 
CYGPRI_MEMALLOC_ALLOCATOR_DLMALLOC_NAV
; i++) {

974 
av_
[ 
i
*2+2 ] =áv_[ i*2+3 ] = 
bö_©
(i);

977 #ñi‡
deföed
(
CYGDBG_USE_ASSERTS
)

978 
ö°™˚s
;

979 i‡–++
ö°™˚s
 > 1 )

980 
CYG_FAIL
( "Multiple dlmalloc instances but "

985 
‰⁄t_mißlign
 = (
ULONG
)
chunk2mem
(
ba£
Ë& 
MALLOC_ALIGN_MASK
;

987 i‡–
‰⁄t_mißlign
 > 0 ) {

988 
c‹ª˘i⁄
 = (
MALLOC_ALIGNMENT
Ë- 
‰⁄t_mißlign
;

990 
c‹ª˘i⁄
 = 0;

994 i‡–
c‹ª˘i⁄
 + 2*()
MALLOC_ALIGNMENT
 > (Ë
size
 )

996 
¨íaba£
 = 
NULL
;

998 
t›
 = (
mchunk±r
)(
ba£
 + 
c‹ª˘i⁄
);

999 
£t_hód
(
t›
, 
¨íasize
 | 
PREV_INUSE
);

1052 
UINT8
 *
poﬁ_Æloc
(
size_t
 
byãs
 )

1054 
mchunk±r
 
vi˘im
;

1055 
INTERNAL_SIZE_T
 
vi˘im_size
;

1056 
idx
;

1057 
mbö±r
 
bö
;

1058 
mchunk±r
 
ªmaödî
;

1059 
ªmaödî_size
;

1060 
ªmaödî_ödex
;

1061 
block
;

1062 
°¨tidx
;

1063 
mchunk±r
 
fwd
;

1064 
mchunk±r
 
bck
;

1065 
mbö±r
 
q
;

1067 
INTERNAL_SIZE_T
 
nb
;

1072 i‡(
NULL
==
¨íaba£
)  NULL;

1074 i‡(()
byãs
 < 0)  0;

1076 
nb
 = 
ªque°2size
(
byãs
);

1078 
MALLOC_LOCK
;

1082 i‡(
is_smÆl_ªque°
(
nb
))

1084 
idx
 = 
smÆlbö_ödex
(
nb
);

1088 
q
 = 
bö_©
(
idx
);

1089 
vi˘im
 = 
œ°
(
q
);

1091 #i‡
MALLOC_ALIGN
 != 16

1093 i‡(
vi˘im
 =
q
)

1095 
q
 = 
√xt_bö
(q);

1096 
vi˘im
 = 
œ°
(
q
);

1099 i‡(
vi˘im
 !
q
)

1101 
vi˘im_size
 = 
chunksize
(
vi˘im
);

1102 
u∆ök
(
vi˘im
, 
bck
, 
fwd
);

1103 
£t_öu£_bô_©_off£t
(
vi˘im
, 
vi˘im_size
);

1104 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1105 
MALLOC_UNLOCK
;

1106  
chunk2mem
(
vi˘im
);

1109 
idx
 += 2;

1114 
idx
 = 
bö_ödex
(
nb
);

1115 
bö
 = 
bö_©
(
idx
);

1117 
vi˘im
 = 
œ°
(
bö
); vi˘im !bö; vi˘im = vi˘im->
bk
)

1119 
vi˘im_size
 = 
chunksize
(
vi˘im
);

1120 
ªmaödî_size
 = 
l⁄g_sub_size_t
(
vi˘im_size
, 
nb
);

1122 i‡(
ªmaödî_size
 >()
MINSIZE
)

1124 --
idx
;

1128 i‡(
ªmaödî_size
 >= 0)

1130 
u∆ök
(
vi˘im
, 
bck
, 
fwd
);

1131 
£t_öu£_bô_©_off£t
(
vi˘im
, 
vi˘im_size
);

1132 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1133 
MALLOC_UNLOCK
;

1134  
chunk2mem
(
vi˘im
);

1138 ++
idx
;

1144 i‡–(
vi˘im
 = 
œ°_ªmaödî
->
fd
) !=Üast_remainder)

1146 
vi˘im_size
 = 
chunksize
(
vi˘im
);

1147 
ªmaödî_size
 = 
l⁄g_sub_size_t
(
vi˘im_size
, 
nb
);

1149 i‡(
ªmaödî_size
 >()
MINSIZE
)

1151 
ªmaödî
 = 
chunk_©_off£t
(
vi˘im
, 
nb
);

1152 
£t_hód
(
vi˘im
, 
nb
 | 
PREV_INUSE
);

1153 
lök_œ°_ªmaödî
(
ªmaödî
);

1154 
£t_hód
(
ªmaödî
, 
ªmaödî_size
 | 
PREV_INUSE
);

1155 
£t_foŸ
(
ªmaödî
, 
ªmaödî_size
);

1156 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1157 
MALLOC_UNLOCK
;

1158  
chunk2mem
(
vi˘im
);

1161 
˛ór_œ°_ªmaödî
;

1163 i‡(
ªmaödî_size
 >= 0)

1165 
£t_öu£_bô_©_off£t
(
vi˘im
, 
vi˘im_size
);

1166 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1167 
MALLOC_UNLOCK
;

1168  
chunk2mem
(
vi˘im
);

1173 
‰⁄éök
(
vi˘im
, 
vi˘im_size
, 
ªmaödî_ödex
, 
bck
, 
fwd
);

1181 i‡–(
block
 = 
idx2böblock
(
idx
)Ë<
böblocks
)

1186 i‡–(
block
 & 
böblocks
) == 0)

1189 
idx
 = (idx & ~(
BINBLOCKWIDTH
 - 1)) + BINBLOCKWIDTH;

1190 
block
 <<= 1;

1191 (
block
 & 
böblocks
) == 0)

1193 
idx
 +
BINBLOCKWIDTH
;

1194 
block
 <<= 1;

1201 
°¨tidx
 = 
idx
;

1202 
q
 = 
bö
 = 
bö_©
(
idx
);

1209 
vi˘im
 = 
œ°
(
bö
); vi˘im !bö; vi˘im = vi˘im->
bk
)

1211 
vi˘im_size
 = 
chunksize
(
vi˘im
);

1212 
ªmaödî_size
 = 
l⁄g_sub_size_t
(
vi˘im_size
, 
nb
);

1214 i‡(
ªmaödî_size
 >()
MINSIZE
)

1216 
ªmaödî
 = 
chunk_©_off£t
(
vi˘im
, 
nb
);

1217 
£t_hód
(
vi˘im
, 
nb
 | 
PREV_INUSE
);

1218 
u∆ök
(
vi˘im
, 
bck
, 
fwd
);

1219 
lök_œ°_ªmaödî
(
ªmaödî
);

1220 
£t_hód
(
ªmaödî
, 
ªmaödî_size
 | 
PREV_INUSE
);

1221 
£t_foŸ
(
ªmaödî
, 
ªmaödî_size
);

1222 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1223 
MALLOC_UNLOCK
;

1224  
chunk2mem
(
vi˘im
);

1227 i‡(
ªmaödî_size
 >= 0)

1229 
£t_öu£_bô_©_off£t
(
vi˘im
, 
vi˘im_size
);

1230 
u∆ök
(
vi˘im
, 
bck
, 
fwd
);

1231 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1232 
MALLOC_UNLOCK
;

1233  
chunk2mem
(
vi˘im
);

1238 
bö
 = 
√xt_bö
(bin);

1240 #i‡
MALLOC_ALIGN
 == 16

1241 i‡(
idx
 < 
MAX_SMALLBIN
)

1243 
bö
 = 
√xt_bö
(bin);

1244 ++
idx
;

1247 } (++
idx
 & (
BINBLOCKWIDTH
 - 1)) != 0);

1253 i‡((
°¨tidx
 & (
BINBLOCKWIDTH
 - 1)) == 0)

1255 
böblocks
 &~
block
;

1258 --
°¨tidx
;

1259 
q
 = 
¥ev_bö
(q);

1260 } 
fú°
(
q
) == q);

1264 i‡–(
block
 <<1Ë<
böblocks
 && (block != 0) )

1266 (
block
 & 
böblocks
) == 0)

1268 
idx
 +
BINBLOCKWIDTH
;

1269 
block
 <<= 1;

1281 
ªmaödî_size
 = 
l⁄g_sub_size_t
(
chunksize
(
t›
), 
nb
);

1282 i‡(
chunksize
(
t›
Ë< 
nb
 || 
ªmaödî_size
 < ()
MINSIZE
)

1286 
MALLOC_UNLOCK
;

1288  
NULL
;

1291 
vi˘im
 = 
t›
;

1292 
£t_hód
(
vi˘im
, 
nb
 | 
PREV_INUSE
);

1293 
t›
 = 
chunk_©_off£t
(
vi˘im
, 
nb
);

1294 
£t_hód
(
t›
, 
ªmaödî_size
 | 
PREV_INUSE
);

1295 
check_mÆlo˚d_chunk
(
vi˘im
, 
nb
);

1296 
MALLOC_UNLOCK
;

1297  
chunk2mem
(
vi˘im
);

1316 
poﬁ_‰ì
–
UINT8
 *
mem
)

1318 
mchunk±r
 
p
;

1319 
INTERNAL_SIZE_T
 
hd
;

1320 
INTERNAL_SIZE_T
 
sz
;

1321 
idx
;

1322 
mchunk±r
 
√xt
;

1323 
INTERNAL_SIZE_T
 
√xtsz
;

1324 
INTERNAL_SIZE_T
 
¥evsz
;

1325 
mchunk±r
 
bck
;

1326 
mchunk±r
 
fwd
;

1327 
i¶r
;

1329 i‡(
mem
 =
NULL
)

1331 
MALLOC_LOCK
;

1333 
p
 = 
mem2chunk
(
mem
);

1334 
hd
 = 
p
->
size
;

1336 
check_öu£_chunk
(
p
);

1338 
sz
 = 
hd
 & ~
PREV_INUSE
;

1339 
√xt
 = 
chunk_©_off£t
(
p
, 
sz
);

1340 
√xtsz
 = 
chunksize
(
√xt
);

1342 i‡(
√xt
 =
t›
)

1344 
sz
 +
√xtsz
;

1346 i‡(!(
hd
 & 
PREV_INUSE
))

1348 
¥evsz
 = 
p
->
¥ev_size
;

1349 
p
 = 
chunk_©_off£t
’, -((Ë
¥evsz
));

1350 
sz
 +
¥evsz
;

1351 
u∆ök
(
p
, 
bck
, 
fwd
);

1354 
£t_hód
(
p
, 
sz
 | 
PREV_INUSE
);

1355 
t›
 = 
p
;

1356 
MALLOC_UNLOCK
;

1360 
£t_hód
(
√xt
, 
√xtsz
);

1362 
i¶r
 = 0;

1364 i‡(!(
hd
 & 
PREV_INUSE
))

1366 
¥evsz
 = 
p
->
¥ev_size
;

1367 
p
 = 
chunk_©_off£t
’, -((Ë
¥evsz
));

1368 
sz
 +
¥evsz
;

1370 i‡(
p
->
fd
 =
œ°_ªmaödî
)

1371 
i¶r
 = 1;

1373 
u∆ök
(
p
, 
bck
, 
fwd
);

1376 i‡(!(
öu£_bô_©_off£t
(
√xt
, 
√xtsz
)))

1378 
sz
 +
√xtsz
;

1380 i‡(!
i¶r
 && 
√xt
->
fd
 =
œ°_ªmaödî
)

1382 
i¶r
 = 1;

1383 
lök_œ°_ªmaödî
(
p
);

1386 
u∆ök
(
√xt
, 
bck
, 
fwd
);

1390 
£t_hód
(
p
, 
sz
 | 
PREV_INUSE
);

1391 
£t_foŸ
(
p
, 
sz
);

1392 i‡(!
i¶r
)

1393 
‰⁄éök
(
p
, 
sz
, 
idx
, 
bck
, 
fwd
);

1395 
MALLOC_UNLOCK
;

1439 
UINT8
 *

1440 
poﬁ_ªsize_Æloc
–
UINT8
 *
ﬁdmem
, 
INT32
 
byãs
, INT32 *
pﬁdsize
 )

1443 
INTERNAL_SIZE_T
 
nb
;

1445 
mchunk±r
 
ﬁdp
;

1446 
INTERNAL_SIZE_T
 
ﬁdsize
;

1448 
mchunk±r
 
√wp
;

1449 
INTERNAL_SIZE_T
 
√wsize
;

1450 
UINT8
* 
√wmem
;

1452 
mchunk±r
 
√xt
;

1453 
INTERNAL_SIZE_T
 
√xtsize
;

1455 
mchunk±r
 
¥ev
;

1456 
INTERNAL_SIZE_T
 
¥evsize
;

1458 
mchunk±r
 
ªmaödî
;

1459 
INTERNAL_SIZE_T
 
ªmaödî_size
;

1461 
mchunk±r
 
bck
;

1462 
mchunk±r
 
fwd
;

1464 
MALLOC_LOCK
;

1466 
√wp
 = 
ﬁdp
 = 
mem2chunk
(
ﬁdmem
);

1467 
√wsize
 = 
ﬁdsize
 = 
chunksize
(
ﬁdp
);

1469 i‡(
NULL
 !
pﬁdsize
)

1470 *
pﬁdsize
 = 
ﬁdsize
 - 
SIZE_SZ
;

1472 
nb
 = 
ªque°2size
(
byãs
);

1474 
check_öu£_chunk
(
ﬁdp
);

1476 i‡(()(
ﬁdsize
Ë< ()(
nb
))

1481 
√xt
 = 
chunk_©_off£t
(
ﬁdp
, 
ﬁdsize
);

1482 i‡(
√xt
 =
t›
 || !
öu£
(next))

1484 
√xtsize
 = 
chunksize
(
√xt
);

1487 i‡(
√xt
 =
t›
)

1489 i‡(()(
√xtsize
 + 
√wsize
Ë>()(
nb
 + 
MINSIZE
))

1491 
√wsize
 +
√xtsize
;

1492 
t›
 = 
chunk_©_off£t
(
ﬁdp
, 
nb
);

1493 
£t_hód
(
t›
, (
√wsize
 - 
nb
Ë| 
PREV_INUSE
);

1494 
£t_hód_size
(
ﬁdp
, 
nb
);

1495 
MALLOC_UNLOCK
;

1496  
chunk2mem
(
ﬁdp
);

1501 i‡((()(
√xtsize
 + 
√wsize
Ë>()(
nb
)))

1503 
u∆ök
(
√xt
, 
bck
, 
fwd
);

1504 
√wsize
 +
√xtsize
;

1505 
•lô
;

1510 
√xt
 = 0;

1511 
√xtsize
 = 0;

1516 i‡(!
¥ev_öu£
(
ﬁdp
))

1518 
¥ev
 = 
¥ev_chunk
(
ﬁdp
);

1519 
¥evsize
 = 
chunksize
(
¥ev
);

1523 i‡(
√xt
 != 0)

1526 i‡(
√xt
 =
t›
)

1528 i‡(()(
√xtsize
 + 
¥evsize
 + 
√wsize
Ë>()(
nb
 + 
MINSIZE
))

1530 
u∆ök
(
¥ev
, 
bck
, 
fwd
);

1531 
√wp
 = 
¥ev
;

1532 
√wsize
 +
¥evsize
 + 
√xtsize
;

1533 
√wmem
 = 
chunk2mem
(
√wp
);

1534 
MALLOC_COPY
(
√wmem
, 
ﬁdmem
, 
ﬁdsize
 - 
SIZE_SZ
);

1535 
t›
 = 
chunk_©_off£t
(
√wp
, 
nb
);

1536 
£t_hód
(
t›
, (
√wsize
 - 
nb
Ë| 
PREV_INUSE
);

1537 
£t_hód_size
(
√wp
, 
nb
);

1538 
MALLOC_UNLOCK
;

1539  
√wmem
;

1544 i‡((()(
√xtsize
 + 
¥evsize
 + 
√wsize
Ë>()(
nb
)))

1546 
u∆ök
(
√xt
, 
bck
, 
fwd
);

1547 
u∆ök
(
¥ev
, 
bck
, 
fwd
);

1548 
√wp
 = 
¥ev
;

1549 
√wsize
 +
√xtsize
 + 
¥evsize
;

1550 
√wmem
 = 
chunk2mem
(
√wp
);

1551 
MALLOC_COPY
(
√wmem
, 
ﬁdmem
, 
ﬁdsize
 - 
SIZE_SZ
);

1552 
•lô
;

1557 i‡(
¥ev
 !0 && ()(
¥evsize
 + 
√wsize
Ë>()
nb
)

1559 
u∆ök
(
¥ev
, 
bck
, 
fwd
);

1560 
√wp
 = 
¥ev
;

1561 
√wsize
 +
¥evsize
;

1562 
√wmem
 = 
chunk2mem
(
√wp
);

1563 
MALLOC_COPY
(
√wmem
, 
ﬁdmem
, 
ﬁdsize
 - 
SIZE_SZ
);

1564 
•lô
;

1569 
MALLOC_UNLOCK
;

1570  
NULL
;

1574 
•lô
:

1576 
ªmaödî_size
 = 
l⁄g_sub_size_t
(
√wsize
, 
nb
);

1578 i‡(
ªmaödî_size
 >()
MINSIZE
)

1580 
ªmaödî
 = 
chunk_©_off£t
(
√wp
, 
nb
);

1581 
£t_hód_size
(
√wp
, 
nb
);

1582 
£t_hód
(
ªmaödî
, 
ªmaödî_size
 | 
PREV_INUSE
);

1583 
£t_öu£_bô_©_off£t
(
ªmaödî
, 
ªmaödî_size
);

1585 
poﬁ_‰ì
–
chunk2mem
(
ªmaödî
) );

1589 
£t_hód_size
(
√wp
, 
√wsize
);

1590 
£t_öu£_bô_©_off£t
(
√wp
, 
√wsize
);

1593 
check_öu£_chunk
(
√wp
);

1594 
MALLOC_UNLOCK
;

1595  
chunk2mem
(
√wp
);

1601 
	#CYG_MEMPOOL_STAT_FREEBLOCKS
 1

	)

1602 
	#CYG_MEMPOOL_STAT_TOTALFREE
 2

	)

1603 
	#CYG_MEMPOOL_STAT_TOTALALLOCATED
 4

	)

1604 
	#CYG_MEMPOOL_STAT_MAXFREE
 8

	)

1606 
	sCyg_Mempoﬁ_Sètus_t
 {

1607 c⁄° 
UINT8
 *
¨íaba£
;

1608 
UINT32
 
¨íasize
;

1609 
UINT32
 
‰ìblocks
;

1610 
UINT32
 
tŸÆÆloˇãd
;

1611 
UINT32
 
tŸÆ‰ì
;

1612 
UINT32
 
blocksize
;

1613 
UINT32
 
max‰ì
;

1614 
INT8
 
waôög
;

1615 c⁄° 
UINT8
 *
‹igba£
;

1617 
UINT32
 
‹igsize
;

1618 
INT8
 
maxovîhód
;

1620 }
	tCyg_Mempoﬁ_Sètus
;

1629 
gë_°©us
(
UINT16
 
Êags
, 
Cyg_Mempoﬁ_Sètus
 *
°©us
)

1631 i‡(0 !(
Êags
&(
CYG_MEMPOOL_STAT_FREEBLOCKS
|
CYG_MEMPOOL_STAT_TOTALFREE
|

1632 
CYG_MEMPOOL_STAT_TOTALALLOCATED
|
CYG_MEMPOOL_STAT_MAXFREE
)))

1634 
i
;

1635 
mbö±r
 
b
;

1636 
mchunk±r
 
p
;

1637 
UINT32
 
chunksizï
;

1638 
UINT32
 
max‰ì
;

1639 #ifde‡
CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG


1640 
mchunk±r
 
q
;

1643 
INTERNAL_SIZE_T
 
avaû
 = 
chunksize
(
t›
);

1644 
«vaû
 = (()(
avaû
Ë>()
MINSIZE
)? 1 : 0;

1645 
max‰ì
 = 
avaû
;

1647 
i
 = 1; i < 
MEMALLOC_ALLOCATOR_DLMALLOC_NAV
; ++i) {

1648 
b
 = 
bö_©
(
i
);

1649 
p
 = 
œ°
(
b
);Ö !b;Ö =Ö->
bk
) {

1650 #ifde‡
CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG


1651 
check_‰ì_chunk
(
p
);

1652 
q
 = 
√xt_chunk
(
p
);

1653 (
q
 < 
t›
Ë&& 
öu£
(q) &&

1654 ()(
chunksize
(
q
)Ë>()
MINSIZE
;

1655 
q
 = 
√xt_chunk
(q))

1656 
check_öu£_chunk
(
q
);

1658 
chunksizï
 = 
chunksize
(
p
);

1659 
avaû
 +
chunksizï
;

1660 i‡–
chunksizï
 > 
max‰ì
 )

1661 
max‰ì
 = 
chunksizï
;

1662 
«vaû
++;

1666 i‡–0 !(
Êags
 & 
CYG_MEMPOOL_STAT_TOTALALLOCATED
) )

1667 
°©us
->
tŸÆÆloˇãd
 = 
¨íasize
 - 
avaû
;

1670 
°©us
->
tŸÆ‰ì
 = (
avaû
 & ~(
MALLOC_ALIGN_MASK
)Ë- 
SIZE_SZ
 - 
MINSIZE
;

1672 
°©us
->
‰ìblocks
 = 
«vaû
;

1673 
°©us
->
max‰ì
 = (max‰ì & ~(
MALLOC_ALIGN_MASK
)Ë- 
SIZE_SZ
 - 
MINSIZE
;

1680 
°©us
->
¨íaba£
 = sètus->
‹igba£
 =árenabase;

1681 
°©us
->
¨íasize
 = sètus->
‹igsize
 =árenasize;

1682 
°©us
->
maxovîhód
 = 
MINSIZE
 + 
MALLOC_ALIGNMENT
;

1687 
INT32
 
poﬁ_°©us
(
Cyg_Mempoﬁ_Sètus
 *
°Sètus
)

1689 
Cyg_Mempoﬁ_Sètus
 
memSètus
;

1691 
mem£t
(&
memSètus
, 0x00, (
Cyg_Mempoﬁ_Sètus
));

1692 
gë_°©us
(0xffff, &
memSètus
);

1694 
°Sètus
->
¨íaba£
 = (
UINT32
)(
ULONG
)
memSètus
.arenabase;

1695 
°Sètus
->
¨íasize
 = 
memSètus
.arenasize;

1696 
°Sètus
->
‰ìblocks
 = 
memSètus
.freeblocks;

1697 
°Sètus
->
tŸÆÆloˇãd
 = 
memSètus
.totalallocated;

1698 
°Sètus
->
tŸÆ‰ì
 = 
memSètus
.totalfree;

1699 
°Sètus
->
max‰ì
 = 
memSètus
.maxfree;

1704 #ifde‡ 
__˝lu•lus


	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 #ifde‡
__GNUC__


400 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

401 (
__exãnsi⁄__
 \

402 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

403 
__a
->
s6_addr32
[0] == 0 \

404 && 
__a
->
s6_addr32
[1] == 0 \

405 && 
__a
->
s6_addr32
[2] == 0 \

406 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

408 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

409 (
__exãnsi⁄__
 \

410 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

411 
__a
->
s6_addr32
[0] == 0 \

412 && 
__a
->
s6_addr32
[1] == 0 \

413 && 
__a
->
s6_addr32
[2] == 0 \

414 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

416 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

417 (
__exãnsi⁄__
 \

418 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

419 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

421 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

422 (
__exãnsi⁄__
 \

423 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

424 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

426 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
s6_addr32
[0] == 0 \

430 && 
__a
->
s6_addr32
[1] == 0 \

431 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

433 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

436 
__a
->
s6_addr32
[0] == 0 \

437 && 
__a
->
s6_addr32
[1] == 0 \

438 && 
__a
->
s6_addr32
[2] == 0 \

439 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

441 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

442 (
__exãnsi⁄__
 \

443 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

444 
__c⁄°
 
ö6_addr
 *
__b
 = (__c⁄° ö6_add∏*Ë(
b
); \

445 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

446 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

447 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

448 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

450 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

451 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

452 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

453 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

454 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

456 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

457 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

458 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

459 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

460 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

462 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

463 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

464 =
	`ht⁄l
 (0x„800000))

	)

466 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

467 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

468 =
	`ht⁄l
 (0x„c00000))

	)

470 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

471 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

472 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

473 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

475 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

476 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

477 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

478 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

479 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

481 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

482 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

483 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

484 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

485 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

488 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

490 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


492 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

495 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

496 
__THROW
;

500 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

501 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

502 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

504 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

505 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

506 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

508 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

509 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

510 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

512 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

516 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

521 #ifde‡
__USE_GNU


523 
	sö6_pktöfo


525 
ö6_addr
 
ùi6_addr
;

526 
ùi6_ifödex
;

530 
	sù6_mtuöfo


532 
sockaddr_ö6
 
ù6m_addr
;

533 
uöt32_t
 
ù6m_mtu
;

538 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

539 
__THROW
 
__©åibuã_dïªˇãd__
;

540 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

541 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

542 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

543 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

544 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

545 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

546 
__mu…x
, 
__∂usy
)

547 
__THROW
 
__©åibuã_dïªˇãd__
;

548 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

549 
uöt8_t
 **
__çåp
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

552 
uöt8_t
 **
__çåp
, 
__ty≥
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

558 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

559 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

560 **
__d©abuÂ
Ë
__THROW
;

561 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

562 
__THROW
;

563 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

564 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

565 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

566 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

567 **
__d©abuÂ
Ë
__THROW
;

568 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

569 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

570 **
__d©abuÂ
Ë
__THROW
;

571 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

572 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

577 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

578 
__£gmíts
Ë
__THROW
;

579 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

580 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

581 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

582 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

583 
__THROW
;

589 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

590 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

591 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

592 
__THROW
;

595 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

596 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

597 
uöt32_t
 
__num§c
,

598 
__c⁄°
 
ö_addr
 *
__¶i°
)

599 
__THROW
;

603 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

604 
__c⁄°
 
sockaddr
 *
__group
,

605 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
,

607 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

610 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

611 
__c⁄°
 
sockaddr
 *
__group
,

612 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

613 
uöt32_t
 
__num§c
,

614 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

617 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
30
644
include/config_api.h
include/config_oid.h
include/lw_list.h
include/vos_config.h
include/vos_hash.h
include/vos_types.h
newcfg/vos_config.c
newcfg/vos_hash.c
smalloc/dlmalloc.c
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/fcntl.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/netinet/in.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdint.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
