#!/bin/sh
# Copyright (C) 2006 OpenWrt.org
export PATH=/bin:/sbin:/usr/bin:/usr/sbin
. /etc/diag.sh

failsafe_ip() {
	echo "=============bring up network============"
	#ifconfig $ifname netmask 255.255.255.0 broadcast 192.168.1.255 up
}

failsafe() {
	[ -n "$ifname" ] && grep "$ifname" /proc/net/dev >/dev/null && {
		failsafe_ip
		netmsg 192.168.1.255 "Entering Failsafe!"
		telnetd -l /bin/login <> /dev/null 2>&1
	}
	lock /tmp/.failsafe
	ash --login
}

mount -n -t proc /proc /proc
mount -n -t sysfs sysfs /sys

size=$(awk '/MemTotal:/ {l=5242880;mt=($2*1024);print((s=mt/2)<l)?mt-l:s}' /proc/meminfo)
#mount none /tmp -t tmpfs -o size=$size,nosuid,nodev,mode=1777

if grep devfs /proc/filesystems > /dev/null; then
	mount none /dev -t devfs
	M0=/dev/pty/m0
	M1=/dev/pty/m1
else
	#mount -t tmpfs tmpfs /dev -o size=512K
	#mknod /dev/console c 5 1
	mkdir /dev/shm
	M0=/dev/ptmx
	M1=/dev/ptmx
	HOTPLUG=
fi

mkdir -p /dev/pts /dev/shm
mount none /dev/pts -t devpts

# the shell really doesn't like having stdin/out closed
# that's why we use /dev/pty/m0 and m1 as replacement
# for /dev/console if there's no serial console available
dd if=/dev/console of=/dev/null bs=1 count=0 >/dev/null 2>/dev/null && {
	M0=/dev/console
	M1=/dev/console
}

exec <$M0 >$M1 2>&0

trap 'FAILSAFE=true' USR1
[ -e /etc/preinit.arch ] && . /etc/preinit.arch
set_state preinit
eval ${FAILSAFE:+failsafe}
lock -w /tmp/.failsafe
mount_root
	
